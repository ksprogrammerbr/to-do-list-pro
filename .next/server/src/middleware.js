/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["src/middleware"],{

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "?599d":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro%5Csrc%5Cmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro&matchers=&preferredRegion=&middlewareConfig=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro%5Csrc%5Cmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro&matchers=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nHandler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/adapter */ \"(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var _src_middleware_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/middleware.ts */ \"(middleware)/./src/middleware.ts\");\n\n\n// Import the userland code.\n\nconst mod = {\n    ..._src_middleware_ts__WEBPACK_IMPORTED_MODULE_2__\n};\nconst handler = mod.middleware || mod.default;\nconst page = \"/src/middleware\";\nif (typeof handler !== \"function\") {\n    throw new Error(`The Middleware \"${page}\" must export a \\`middleware\\` or a \\`default\\` function`);\n}\nfunction nHandler(opts) {\n    return (0,next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\n        ...opts,\n        page,\n        handler\n    });\n}\n\n//# sourceMappingURL=middleware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1taWRkbGV3YXJlLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPUMlM0ElNUNVc2VycyU1Q0thcmluYSUyMFNhbnRvcyU1Q3RvLWRvLWxpc3QtcHJvJTVDc3JjJTVDbWlkZGxld2FyZS50cyZwYWdlPSUyRnNyYyUyRm1pZGRsZXdhcmUmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNLYXJpbmElMjBTYW50b3MlNUN0by1kby1saXN0LXBybyZtYXRjaGVycz0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQztBQUNpQjtBQUN2RDtBQUM0QztBQUM1QztBQUNBLE9BQU8sK0NBQUk7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxLQUFLO0FBQzVDO0FBQ2U7QUFDZixXQUFXLHFFQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzNiNjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci93ZWIvZ2xvYmFsc1wiO1xuaW1wb3J0IHsgYWRhcHRlciB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3dlYi9hZGFwdGVyXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyBfbW9kIGZyb20gXCIuL3NyYy9taWRkbGV3YXJlLnRzXCI7XG5jb25zdCBtb2QgPSB7XG4gICAgLi4uX21vZFxufTtcbmNvbnN0IGhhbmRsZXIgPSBtb2QubWlkZGxld2FyZSB8fCBtb2QuZGVmYXVsdDtcbmNvbnN0IHBhZ2UgPSBcIi9zcmMvbWlkZGxld2FyZVwiO1xuaWYgKHR5cGVvZiBoYW5kbGVyICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBNaWRkbGV3YXJlIFwiJHtwYWdlfVwiIG11c3QgZXhwb3J0IGEgXFxgbWlkZGxld2FyZVxcYCBvciBhIFxcYGRlZmF1bHRcXGAgZnVuY3Rpb25gKTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5IYW5kbGVyKG9wdHMpIHtcbiAgICByZXR1cm4gYWRhcHRlcih7XG4gICAgICAgIC4uLm9wdHMsXG4gICAgICAgIHBhZ2UsXG4gICAgICAgIGhhbmRsZXJcbiAgICB9KTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlkZGxld2FyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro%5Csrc%5Cmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro&matchers=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(middleware)/./node_modules/next/dist/esm/api/navigation.js\");\n/* harmony import */ var _server_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../server/constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _server_createGetAuth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../server/createGetAuth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _server_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../server/errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _server_headers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../server/headers-utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\");\n/* harmony import */ var _server_protect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../server/protect */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js\");\n/* harmony import */ var _server_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../server/utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n/* harmony import */ var _utils_sdk_versions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/sdk-versions */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/sdk-versions.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst auth = async ()=>{\n    __webpack_require__(/*! server-only */ \"(middleware)/./node_modules/next/dist/compiled/server-only/empty.js\");\n    const request = await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.buildRequestLike)();\n    const stepsBasedOnSrcDirectory = async ()=>{\n        if (_utils_sdk_versions__WEBPACK_IMPORTED_MODULE_3__.isNextWithUnstableServerActions) {\n            return [];\n        }\n        try {\n            const isSrcAppDir = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../server/fs/middleware-location.js */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/fs/middleware-location.js\")).then((m)=>m.hasSrcAppDir());\n            return [\n                `Your Middleware exists at ./${isSrcAppDir ? \"src/\" : \"\"}middleware.(ts|js)`\n            ];\n        } catch  {\n            return [];\n        }\n    };\n    const authObject = await (0,_server_createGetAuth__WEBPACK_IMPORTED_MODULE_4__.createAsyncGetAuth)({\n        debugLoggerName: \"auth()\",\n        noAuthStatusMessage: (0,_server_errors__WEBPACK_IMPORTED_MODULE_5__.authAuthHeaderMissing)(\"auth\", await stepsBasedOnSrcDirectory())\n    })(request);\n    const clerkUrl = (0,_server_headers_utils__WEBPACK_IMPORTED_MODULE_6__.getAuthKeyFromRequest)(request, \"ClerkUrl\");\n    const redirectToSignIn = (opts = {})=>{\n        const clerkRequest = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest)(request);\n        const devBrowserToken = clerkRequest.clerkUrl.searchParams.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.QueryParameters.DevBrowser) || clerkRequest.cookies.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Cookies.DevBrowser);\n        const encryptedRequestData = (0,_server_headers_utils__WEBPACK_IMPORTED_MODULE_6__.getHeader)(request, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRequestData);\n        const decryptedRequestData = (0,_server_utils__WEBPACK_IMPORTED_MODULE_7__.decryptClerkRequestData)(encryptedRequestData);\n        return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createRedirect)({\n            redirectAdapter: next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect,\n            devBrowserToken,\n            baseUrl: clerkRequest.clerkUrl.toString(),\n            publishableKey: decryptedRequestData.publishableKey || _server_constants__WEBPACK_IMPORTED_MODULE_8__.PUBLISHABLE_KEY,\n            signInUrl: decryptedRequestData.signInUrl || _server_constants__WEBPACK_IMPORTED_MODULE_8__.SIGN_IN_URL,\n            signUpUrl: decryptedRequestData.signUpUrl || _server_constants__WEBPACK_IMPORTED_MODULE_8__.SIGN_UP_URL\n        }).redirectToSignIn({\n            returnBackUrl: opts.returnBackUrl === null ? \"\" : opts.returnBackUrl || (clerkUrl == null ? void 0 : clerkUrl.toString())\n        });\n    };\n    return Object.assign(authObject, {\n        redirectToSignIn\n    });\n};\nauth.protect = async (...args)=>{\n    __webpack_require__(/*! server-only */ \"(middleware)/./node_modules/next/dist/compiled/server-only/empty.js\");\n    const request = await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.buildRequestLike)();\n    const authObject = await auth();\n    const protect = (0,_server_protect__WEBPACK_IMPORTED_MODULE_9__.createProtect)({\n        request,\n        authObject,\n        redirectToSignIn: authObject.redirectToSignIn,\n        notFound: next_navigation__WEBPACK_IMPORTED_MODULE_1__.notFound,\n        redirect: next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect\n    });\n    return protect(...args);\n};\n //# sourceMappingURL=auth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFpQztBQUN1RDtBQUNuQztBQUM4QjtBQUNuQjtBQUNKO0FBQ2tCO0FBQ3pCO0FBQ1E7QUFDYztBQUNoQztBQUMzQyxNQUFNZ0IsT0FBTztJQUNYQyxtQkFBT0EsQ0FBQyx3RkFBYTtJQUNyQixNQUFNQyxVQUFVLE1BQU1ILHdEQUFnQkE7SUFDdEMsTUFBTUksMkJBQTJCO1FBQy9CLElBQUlMLGdGQUErQkEsRUFBRTtZQUNuQyxPQUFPLEVBQUU7UUFDWDtRQUNBLElBQUk7WUFDRixNQUFNTSxjQUFjLE1BQU0seU5BQWdELENBQUNDLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxZQUFZO1lBQ3JHLE9BQU87Z0JBQUMsQ0FBQyw0QkFBNEIsRUFBRUgsY0FBYyxTQUFTLEdBQUcsa0JBQWtCLENBQUM7YUFBQztRQUN2RixFQUFFLE9BQU07WUFDTixPQUFPLEVBQUU7UUFDWDtJQUNGO0lBQ0EsTUFBTUksYUFBYSxNQUFNaEIseUVBQWtCQSxDQUFDO1FBQzFDaUIsaUJBQWlCO1FBQ2pCQyxxQkFBcUJqQixxRUFBcUJBLENBQUMsUUFBUSxNQUFNVTtJQUMzRCxHQUFHRDtJQUNILE1BQU1TLFdBQVdqQiw0RUFBcUJBLENBQUNRLFNBQVM7SUFDaEQsTUFBTVUsbUJBQW1CLENBQUNDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pDLE1BQU1DLGVBQWU3QiwyRUFBa0JBLENBQUNpQjtRQUN4QyxNQUFNYSxrQkFBa0JELGFBQWFILFFBQVEsQ0FBQ0ssWUFBWSxDQUFDQyxHQUFHLENBQUNqQyw4REFBU0EsQ0FBQ2tDLGVBQWUsQ0FBQ0MsVUFBVSxLQUFLTCxhQUFhTSxPQUFPLENBQUNILEdBQUcsQ0FBQ2pDLDhEQUFTQSxDQUFDcUMsT0FBTyxDQUFDRixVQUFVO1FBQzdKLE1BQU1HLHVCQUF1QjNCLGdFQUFTQSxDQUFDTyxTQUFTbEIsOERBQVNBLENBQUN1QyxPQUFPLENBQUNDLGdCQUFnQjtRQUNsRixNQUFNQyx1QkFBdUI1QixzRUFBdUJBLENBQUN5QjtRQUNyRCxPQUFPcEMsdUVBQWNBLENBQUM7WUFDcEJ3QyxpQkFBaUJ0QyxxREFBUUE7WUFDekIyQjtZQUNBWSxTQUFTYixhQUFhSCxRQUFRLENBQUNpQixRQUFRO1lBQ3ZDQyxnQkFBZ0JKLHFCQUFxQkksY0FBYyxJQUFJeEMsOERBQWVBO1lBQ3RFeUMsV0FBV0wscUJBQXFCSyxTQUFTLElBQUl4QywwREFBV0E7WUFDeER5QyxXQUFXTixxQkFBcUJNLFNBQVMsSUFBSXhDLDBEQUFXQTtRQUMxRCxHQUFHcUIsZ0JBQWdCLENBQUM7WUFDbEJvQixlQUFlbkIsS0FBS21CLGFBQWEsS0FBSyxPQUFPLEtBQUtuQixLQUFLbUIsYUFBYSxJQUFLckIsQ0FBQUEsWUFBWSxPQUFPLEtBQUssSUFBSUEsU0FBU2lCLFFBQVEsRUFBQztRQUN6SDtJQUNGO0lBQ0EsT0FBT0ssT0FBT0MsTUFBTSxDQUFDMUIsWUFBWTtRQUFFSTtJQUFpQjtBQUN0RDtBQUNBWixLQUFLbUMsT0FBTyxHQUFHLE9BQU8sR0FBR0M7SUFDdkJuQyxtQkFBT0EsQ0FBQyx3RkFBYTtJQUNyQixNQUFNQyxVQUFVLE1BQU1ILHdEQUFnQkE7SUFDdEMsTUFBTVMsYUFBYSxNQUFNUjtJQUN6QixNQUFNbUMsVUFBVXZDLDhEQUFhQSxDQUFDO1FBQzVCTTtRQUNBTTtRQUNBSSxrQkFBa0JKLFdBQVdJLGdCQUFnQjtRQUM3Q3pCLFFBQVFBLHVEQUFBQTtRQUNSQyxRQUFRQSx1REFBQUE7SUFDVjtJQUNBLE9BQU8rQyxXQUFXQztBQUNwQjtBQUdFLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL2FwcC1yb3V0ZXIvc2VydmVyL2F1dGguanM/YTY4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi8uLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xuaW1wb3J0IHsgY29uc3RhbnRzLCBjcmVhdGVDbGVya1JlcXVlc3QsIGNyZWF0ZVJlZGlyZWN0IH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kL2ludGVybmFsXCI7XG5pbXBvcnQgeyBub3RGb3VuZCwgcmVkaXJlY3QgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5pbXBvcnQgeyBQVUJMSVNIQUJMRV9LRVksIFNJR05fSU5fVVJMLCBTSUdOX1VQX1VSTCB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBjcmVhdGVBc3luY0dldEF1dGggfSBmcm9tIFwiLi4vLi4vc2VydmVyL2NyZWF0ZUdldEF1dGhcIjtcbmltcG9ydCB7IGF1dGhBdXRoSGVhZGVyTWlzc2luZyB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvZXJyb3JzXCI7XG5pbXBvcnQgeyBnZXRBdXRoS2V5RnJvbVJlcXVlc3QsIGdldEhlYWRlciB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvaGVhZGVycy11dGlsc1wiO1xuaW1wb3J0IHsgY3JlYXRlUHJvdGVjdCB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvcHJvdGVjdFwiO1xuaW1wb3J0IHsgZGVjcnlwdENsZXJrUmVxdWVzdERhdGEgfSBmcm9tIFwiLi4vLi4vc2VydmVyL3V0aWxzXCI7XG5pbXBvcnQgeyBpc05leHRXaXRoVW5zdGFibGVTZXJ2ZXJBY3Rpb25zIH0gZnJvbSBcIi4uLy4uL3V0aWxzL3Nkay12ZXJzaW9uc1wiO1xuaW1wb3J0IHsgYnVpbGRSZXF1ZXN0TGlrZSB9IGZyb20gXCIuL3V0aWxzXCI7XG5jb25zdCBhdXRoID0gYXN5bmMgKCkgPT4ge1xuICByZXF1aXJlKFwic2VydmVyLW9ubHlcIik7XG4gIGNvbnN0IHJlcXVlc3QgPSBhd2FpdCBidWlsZFJlcXVlc3RMaWtlKCk7XG4gIGNvbnN0IHN0ZXBzQmFzZWRPblNyY0RpcmVjdG9yeSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoaXNOZXh0V2l0aFVuc3RhYmxlU2VydmVyQWN0aW9ucykge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgY29uc3QgaXNTcmNBcHBEaXIgPSBhd2FpdCBpbXBvcnQoXCIuLi8uLi9zZXJ2ZXIvZnMvbWlkZGxld2FyZS1sb2NhdGlvbi5qc1wiKS50aGVuKChtKSA9PiBtLmhhc1NyY0FwcERpcigpKTtcbiAgICAgIHJldHVybiBbYFlvdXIgTWlkZGxld2FyZSBleGlzdHMgYXQgLi8ke2lzU3JjQXBwRGlyID8gXCJzcmMvXCIgOiBcIlwifW1pZGRsZXdhcmUuKHRzfGpzKWBdO1xuICAgIH0gY2F0Y2gge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgYXV0aE9iamVjdCA9IGF3YWl0IGNyZWF0ZUFzeW5jR2V0QXV0aCh7XG4gICAgZGVidWdMb2dnZXJOYW1lOiBcImF1dGgoKVwiLFxuICAgIG5vQXV0aFN0YXR1c01lc3NhZ2U6IGF1dGhBdXRoSGVhZGVyTWlzc2luZyhcImF1dGhcIiwgYXdhaXQgc3RlcHNCYXNlZE9uU3JjRGlyZWN0b3J5KCkpXG4gIH0pKHJlcXVlc3QpO1xuICBjb25zdCBjbGVya1VybCA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXF1ZXN0LCBcIkNsZXJrVXJsXCIpO1xuICBjb25zdCByZWRpcmVjdFRvU2lnbkluID0gKG9wdHMgPSB7fSkgPT4ge1xuICAgIGNvbnN0IGNsZXJrUmVxdWVzdCA9IGNyZWF0ZUNsZXJrUmVxdWVzdChyZXF1ZXN0KTtcbiAgICBjb25zdCBkZXZCcm93c2VyVG9rZW4gPSBjbGVya1JlcXVlc3QuY2xlcmtVcmwuc2VhcmNoUGFyYW1zLmdldChjb25zdGFudHMuUXVlcnlQYXJhbWV0ZXJzLkRldkJyb3dzZXIpIHx8IGNsZXJrUmVxdWVzdC5jb29raWVzLmdldChjb25zdGFudHMuQ29va2llcy5EZXZCcm93c2VyKTtcbiAgICBjb25zdCBlbmNyeXB0ZWRSZXF1ZXN0RGF0YSA9IGdldEhlYWRlcihyZXF1ZXN0LCBjb25zdGFudHMuSGVhZGVycy5DbGVya1JlcXVlc3REYXRhKTtcbiAgICBjb25zdCBkZWNyeXB0ZWRSZXF1ZXN0RGF0YSA9IGRlY3J5cHRDbGVya1JlcXVlc3REYXRhKGVuY3J5cHRlZFJlcXVlc3REYXRhKTtcbiAgICByZXR1cm4gY3JlYXRlUmVkaXJlY3Qoe1xuICAgICAgcmVkaXJlY3RBZGFwdGVyOiByZWRpcmVjdCxcbiAgICAgIGRldkJyb3dzZXJUb2tlbixcbiAgICAgIGJhc2VVcmw6IGNsZXJrUmVxdWVzdC5jbGVya1VybC50b1N0cmluZygpLFxuICAgICAgcHVibGlzaGFibGVLZXk6IGRlY3J5cHRlZFJlcXVlc3REYXRhLnB1Ymxpc2hhYmxlS2V5IHx8IFBVQkxJU0hBQkxFX0tFWSxcbiAgICAgIHNpZ25JblVybDogZGVjcnlwdGVkUmVxdWVzdERhdGEuc2lnbkluVXJsIHx8IFNJR05fSU5fVVJMLFxuICAgICAgc2lnblVwVXJsOiBkZWNyeXB0ZWRSZXF1ZXN0RGF0YS5zaWduVXBVcmwgfHwgU0lHTl9VUF9VUkxcbiAgICB9KS5yZWRpcmVjdFRvU2lnbkluKHtcbiAgICAgIHJldHVybkJhY2tVcmw6IG9wdHMucmV0dXJuQmFja1VybCA9PT0gbnVsbCA/IFwiXCIgOiBvcHRzLnJldHVybkJhY2tVcmwgfHwgKGNsZXJrVXJsID09IG51bGwgPyB2b2lkIDAgOiBjbGVya1VybC50b1N0cmluZygpKVxuICAgIH0pO1xuICB9O1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbihhdXRoT2JqZWN0LCB7IHJlZGlyZWN0VG9TaWduSW4gfSk7XG59O1xuYXV0aC5wcm90ZWN0ID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgcmVxdWlyZShcInNlcnZlci1vbmx5XCIpO1xuICBjb25zdCByZXF1ZXN0ID0gYXdhaXQgYnVpbGRSZXF1ZXN0TGlrZSgpO1xuICBjb25zdCBhdXRoT2JqZWN0ID0gYXdhaXQgYXV0aCgpO1xuICBjb25zdCBwcm90ZWN0ID0gY3JlYXRlUHJvdGVjdCh7XG4gICAgcmVxdWVzdCxcbiAgICBhdXRoT2JqZWN0LFxuICAgIHJlZGlyZWN0VG9TaWduSW46IGF1dGhPYmplY3QucmVkaXJlY3RUb1NpZ25JbixcbiAgICBub3RGb3VuZCxcbiAgICByZWRpcmVjdFxuICB9KTtcbiAgcmV0dXJuIHByb3RlY3QoLi4uYXJncyk7XG59O1xuZXhwb3J0IHtcbiAgYXV0aFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGguanMubWFwIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsImNyZWF0ZUNsZXJrUmVxdWVzdCIsImNyZWF0ZVJlZGlyZWN0Iiwibm90Rm91bmQiLCJyZWRpcmVjdCIsIlBVQkxJU0hBQkxFX0tFWSIsIlNJR05fSU5fVVJMIiwiU0lHTl9VUF9VUkwiLCJjcmVhdGVBc3luY0dldEF1dGgiLCJhdXRoQXV0aEhlYWRlck1pc3NpbmciLCJnZXRBdXRoS2V5RnJvbVJlcXVlc3QiLCJnZXRIZWFkZXIiLCJjcmVhdGVQcm90ZWN0IiwiZGVjcnlwdENsZXJrUmVxdWVzdERhdGEiLCJpc05leHRXaXRoVW5zdGFibGVTZXJ2ZXJBY3Rpb25zIiwiYnVpbGRSZXF1ZXN0TGlrZSIsImF1dGgiLCJyZXF1aXJlIiwicmVxdWVzdCIsInN0ZXBzQmFzZWRPblNyY0RpcmVjdG9yeSIsImlzU3JjQXBwRGlyIiwidGhlbiIsIm0iLCJoYXNTcmNBcHBEaXIiLCJhdXRoT2JqZWN0IiwiZGVidWdMb2dnZXJOYW1lIiwibm9BdXRoU3RhdHVzTWVzc2FnZSIsImNsZXJrVXJsIiwicmVkaXJlY3RUb1NpZ25JbiIsIm9wdHMiLCJjbGVya1JlcXVlc3QiLCJkZXZCcm93c2VyVG9rZW4iLCJzZWFyY2hQYXJhbXMiLCJnZXQiLCJRdWVyeVBhcmFtZXRlcnMiLCJEZXZCcm93c2VyIiwiY29va2llcyIsIkNvb2tpZXMiLCJlbmNyeXB0ZWRSZXF1ZXN0RGF0YSIsIkhlYWRlcnMiLCJDbGVya1JlcXVlc3REYXRhIiwiZGVjcnlwdGVkUmVxdWVzdERhdGEiLCJyZWRpcmVjdEFkYXB0ZXIiLCJiYXNlVXJsIiwidG9TdHJpbmciLCJwdWJsaXNoYWJsZUtleSIsInNpZ25JblVybCIsInNpZ25VcFVybCIsInJldHVybkJhY2tVcmwiLCJPYmplY3QiLCJhc3NpZ24iLCJwcm90ZWN0IiwiYXJncyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   currentUser: () => (/* binding */ currentUser)\n/* harmony export */ });\n/* harmony import */ var _server_clerkClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n\n\n\nasync function currentUser() {\n    __webpack_require__(/*! server-only */ \"(middleware)/./node_modules/next/dist/compiled/server-only/empty.js\");\n    const { userId } = await (0,_auth__WEBPACK_IMPORTED_MODULE_0__.auth)();\n    if (!userId) {\n        return null;\n    }\n    return (await (0,_server_clerkClient__WEBPACK_IMPORTED_MODULE_1__.clerkClient)()).users.getUser(userId);\n}\n //# sourceMappingURL=currentUser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvY3VycmVudFVzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ3NCO0FBQ3pCO0FBQzlCLGVBQWVFO0lBQ2JDLG1CQUFPQSxDQUFDLHdGQUFhO0lBQ3JCLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUcsTUFBTUgsMkNBQUlBO0lBQzdCLElBQUksQ0FBQ0csUUFBUTtRQUNYLE9BQU87SUFDVDtJQUNBLE9BQU8sQ0FBQyxNQUFNSixnRUFBV0EsRUFBQyxFQUFHSyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0Y7QUFDN0M7QUFHRSxDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL3NlcnZlci9jdXJyZW50VXNlci5qcz8yZjNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uLy4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBjbGVya0NsaWVudCB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvY2xlcmtDbGllbnRcIjtcbmltcG9ydCB7IGF1dGggfSBmcm9tIFwiLi9hdXRoXCI7XG5hc3luYyBmdW5jdGlvbiBjdXJyZW50VXNlcigpIHtcbiAgcmVxdWlyZShcInNlcnZlci1vbmx5XCIpO1xuICBjb25zdCB7IHVzZXJJZCB9ID0gYXdhaXQgYXV0aCgpO1xuICBpZiAoIXVzZXJJZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAoYXdhaXQgY2xlcmtDbGllbnQoKSkudXNlcnMuZ2V0VXNlcih1c2VySWQpO1xufVxuZXhwb3J0IHtcbiAgY3VycmVudFVzZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jdXJyZW50VXNlci5qcy5tYXAiXSwibmFtZXMiOlsiY2xlcmtDbGllbnQiLCJhdXRoIiwiY3VycmVudFVzZXIiLCJyZXF1aXJlIiwidXNlcklkIiwidXNlcnMiLCJnZXRVc2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildRequestLike: () => (/* binding */ buildRequestLike),\n/* harmony export */   getScriptNonceFromHeader: () => (/* binding */ getScriptNonceFromHeader),\n/* harmony export */   isPrerenderingBailout: () => (/* binding */ isPrerenderingBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-request */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-request.js\");\n\n\nconst isPrerenderingBailout = (e)=>{\n    if (!(e instanceof Error) || !(\"message\" in e)) {\n        return false;\n    }\n    const { message } = e;\n    const lowerCaseInput = message.toLowerCase();\n    const dynamicServerUsage = lowerCaseInput.includes(\"dynamic server usage\");\n    const bailOutPrerendering = lowerCaseInput.includes(\"this page needs to bail out of prerendering\");\n    const routeRegex = /Route .*? needs to bail out of prerendering at this point because it used .*?./;\n    return routeRegex.test(message) || dynamicServerUsage || bailOutPrerendering;\n};\nasync function buildRequestLike() {\n    try {\n        const { headers } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! next/headers */ \"(middleware)/./node_modules/next/dist/esm/api/headers.js\"));\n        const resolvedHeaders = await headers();\n        return new next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"https://placeholder.com\", {\n            headers: resolvedHeaders\n        });\n    } catch (e) {\n        if (e && isPrerenderingBailout(e)) {\n            throw e;\n        }\n        throw new Error(`Clerk: auth(), currentUser() and clerkClient(), are only supported in App Router (/app directory).\nIf you're using /pages, try getAuth() instead.\nOriginal error: ${e}`);\n    }\n}\nfunction getScriptNonceFromHeader(cspHeaderValue) {\n    var _a;\n    const directives = cspHeaderValue.split(\";\").map((directive2)=>directive2.trim());\n    const directive = directives.find((dir)=>dir.startsWith(\"script-src\")) || directives.find((dir)=>dir.startsWith(\"default-src\"));\n    if (!directive) {\n        return;\n    }\n    const nonce = (_a = directive.split(\" \").slice(1).map((source)=>source.trim()).find((source)=>source.startsWith(\"'nonce-\") && source.length > 8 && source.endsWith(\"'\"))) == null ? void 0 : _a.slice(7, -1);\n    if (!nonce) {\n        return;\n    }\n    if (/[&><\\u2028\\u2029]/g.test(nonce)) {\n        throw new Error(\"Nonce value from Content-Security-Policy contained invalid HTML escape characters, which is disallowed for security reasons. Make sure that your nonce value does not contain the following characters: `<`, `>`, `&`\");\n    }\n    return nonce;\n}\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpQztBQUNTO0FBQzFDLE1BQU1DLHdCQUF3QixDQUFDQztJQUM3QixJQUFJLENBQUVBLENBQUFBLGFBQWFDLEtBQUksS0FBTSxDQUFFLGNBQWFELENBQUFBLEdBQUk7UUFDOUMsT0FBTztJQUNUO0lBQ0EsTUFBTSxFQUFFRSxPQUFPLEVBQUUsR0FBR0Y7SUFDcEIsTUFBTUcsaUJBQWlCRCxRQUFRRSxXQUFXO0lBQzFDLE1BQU1DLHFCQUFxQkYsZUFBZUcsUUFBUSxDQUFDO0lBQ25ELE1BQU1DLHNCQUFzQkosZUFBZUcsUUFBUSxDQUFDO0lBQ3BELE1BQU1FLGFBQWE7SUFDbkIsT0FBT0EsV0FBV0MsSUFBSSxDQUFDUCxZQUFZRyxzQkFBc0JFO0FBQzNEO0FBQ0EsZUFBZUc7SUFDYixJQUFJO1FBQ0YsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBRyxNQUFNLG9LQUFzQjtRQUNoRCxNQUFNQyxrQkFBa0IsTUFBTUQ7UUFDOUIsT0FBTyxJQUFJYixpRkFBV0EsQ0FBQywyQkFBMkI7WUFBRWEsU0FBU0M7UUFBZ0I7SUFDL0UsRUFBRSxPQUFPWixHQUFHO1FBQ1YsSUFBSUEsS0FBS0Qsc0JBQXNCQyxJQUFJO1lBQ2pDLE1BQU1BO1FBQ1I7UUFDQSxNQUFNLElBQUlDLE1BQ1IsQ0FBQzs7Z0JBRVMsRUFBRUQsRUFBRSxDQUFDO0lBRW5CO0FBQ0Y7QUFDQSxTQUFTYSx5QkFBeUJDLGNBQWM7SUFDOUMsSUFBSUM7SUFDSixNQUFNQyxhQUFhRixlQUFlRyxLQUFLLENBQUMsS0FBS0MsR0FBRyxDQUFDLENBQUNDLGFBQWVBLFdBQVdDLElBQUk7SUFDaEYsTUFBTUMsWUFBWUwsV0FBV00sSUFBSSxDQUFDLENBQUNDLE1BQVFBLElBQUlDLFVBQVUsQ0FBQyxrQkFBa0JSLFdBQVdNLElBQUksQ0FBQyxDQUFDQyxNQUFRQSxJQUFJQyxVQUFVLENBQUM7SUFDcEgsSUFBSSxDQUFDSCxXQUFXO1FBQ2Q7SUFDRjtJQUNBLE1BQU1JLFFBQVEsQ0FBQ1YsS0FBS00sVUFBVUosS0FBSyxDQUFDLEtBQUtTLEtBQUssQ0FBQyxHQUFHUixHQUFHLENBQUMsQ0FBQ1MsU0FBV0EsT0FBT1AsSUFBSSxJQUFJRSxJQUFJLENBQUMsQ0FBQ0ssU0FBV0EsT0FBT0gsVUFBVSxDQUFDLGNBQWNHLE9BQU9DLE1BQU0sR0FBRyxLQUFLRCxPQUFPRSxRQUFRLENBQUMsS0FBSSxLQUFNLE9BQU8sS0FBSyxJQUFJZCxHQUFHVyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQzlNLElBQUksQ0FBQ0QsT0FBTztRQUNWO0lBQ0Y7SUFDQSxJQUFJLHFCQUFxQmhCLElBQUksQ0FBQ2dCLFFBQVE7UUFDcEMsTUFBTSxJQUFJeEIsTUFDUjtJQUVKO0lBQ0EsT0FBT3dCO0FBQ1Q7QUFLRSxDQUNGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL3NlcnZlci91dGlscy5qcz80YWVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uLy4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuY29uc3QgaXNQcmVyZW5kZXJpbmdCYWlsb3V0ID0gKGUpID0+IHtcbiAgaWYgKCEoZSBpbnN0YW5jZW9mIEVycm9yKSB8fCAhKFwibWVzc2FnZVwiIGluIGUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IHsgbWVzc2FnZSB9ID0gZTtcbiAgY29uc3QgbG93ZXJDYXNlSW5wdXQgPSBtZXNzYWdlLnRvTG93ZXJDYXNlKCk7XG4gIGNvbnN0IGR5bmFtaWNTZXJ2ZXJVc2FnZSA9IGxvd2VyQ2FzZUlucHV0LmluY2x1ZGVzKFwiZHluYW1pYyBzZXJ2ZXIgdXNhZ2VcIik7XG4gIGNvbnN0IGJhaWxPdXRQcmVyZW5kZXJpbmcgPSBsb3dlckNhc2VJbnB1dC5pbmNsdWRlcyhcInRoaXMgcGFnZSBuZWVkcyB0byBiYWlsIG91dCBvZiBwcmVyZW5kZXJpbmdcIik7XG4gIGNvbnN0IHJvdXRlUmVnZXggPSAvUm91dGUgLio/IG5lZWRzIHRvIGJhaWwgb3V0IG9mIHByZXJlbmRlcmluZyBhdCB0aGlzIHBvaW50IGJlY2F1c2UgaXQgdXNlZCAuKj8uLztcbiAgcmV0dXJuIHJvdXRlUmVnZXgudGVzdChtZXNzYWdlKSB8fCBkeW5hbWljU2VydmVyVXNhZ2UgfHwgYmFpbE91dFByZXJlbmRlcmluZztcbn07XG5hc3luYyBmdW5jdGlvbiBidWlsZFJlcXVlc3RMaWtlKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgaGVhZGVycyB9ID0gYXdhaXQgaW1wb3J0KFwibmV4dC9oZWFkZXJzXCIpO1xuICAgIGNvbnN0IHJlc29sdmVkSGVhZGVycyA9IGF3YWl0IGhlYWRlcnMoKTtcbiAgICByZXR1cm4gbmV3IE5leHRSZXF1ZXN0KFwiaHR0cHM6Ly9wbGFjZWhvbGRlci5jb21cIiwgeyBoZWFkZXJzOiByZXNvbHZlZEhlYWRlcnMgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSAmJiBpc1ByZXJlbmRlcmluZ0JhaWxvdXQoZSkpIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBDbGVyazogYXV0aCgpLCBjdXJyZW50VXNlcigpIGFuZCBjbGVya0NsaWVudCgpLCBhcmUgb25seSBzdXBwb3J0ZWQgaW4gQXBwIFJvdXRlciAoL2FwcCBkaXJlY3RvcnkpLlxuSWYgeW91J3JlIHVzaW5nIC9wYWdlcywgdHJ5IGdldEF1dGgoKSBpbnN0ZWFkLlxuT3JpZ2luYWwgZXJyb3I6ICR7ZX1gXG4gICAgKTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0U2NyaXB0Tm9uY2VGcm9tSGVhZGVyKGNzcEhlYWRlclZhbHVlKSB7XG4gIHZhciBfYTtcbiAgY29uc3QgZGlyZWN0aXZlcyA9IGNzcEhlYWRlclZhbHVlLnNwbGl0KFwiO1wiKS5tYXAoKGRpcmVjdGl2ZTIpID0+IGRpcmVjdGl2ZTIudHJpbSgpKTtcbiAgY29uc3QgZGlyZWN0aXZlID0gZGlyZWN0aXZlcy5maW5kKChkaXIpID0+IGRpci5zdGFydHNXaXRoKFwic2NyaXB0LXNyY1wiKSkgfHwgZGlyZWN0aXZlcy5maW5kKChkaXIpID0+IGRpci5zdGFydHNXaXRoKFwiZGVmYXVsdC1zcmNcIikpO1xuICBpZiAoIWRpcmVjdGl2ZSkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBub25jZSA9IChfYSA9IGRpcmVjdGl2ZS5zcGxpdChcIiBcIikuc2xpY2UoMSkubWFwKChzb3VyY2UpID0+IHNvdXJjZS50cmltKCkpLmZpbmQoKHNvdXJjZSkgPT4gc291cmNlLnN0YXJ0c1dpdGgoXCInbm9uY2UtXCIpICYmIHNvdXJjZS5sZW5ndGggPiA4ICYmIHNvdXJjZS5lbmRzV2l0aChcIidcIikpKSA9PSBudWxsID8gdm9pZCAwIDogX2Euc2xpY2UoNywgLTEpO1xuICBpZiAoIW5vbmNlKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICgvWyY+PFxcdTIwMjhcXHUyMDI5XS9nLnRlc3Qobm9uY2UpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJOb25jZSB2YWx1ZSBmcm9tIENvbnRlbnQtU2VjdXJpdHktUG9saWN5IGNvbnRhaW5lZCBpbnZhbGlkIEhUTUwgZXNjYXBlIGNoYXJhY3RlcnMsIHdoaWNoIGlzIGRpc2FsbG93ZWQgZm9yIHNlY3VyaXR5IHJlYXNvbnMuIE1ha2Ugc3VyZSB0aGF0IHlvdXIgbm9uY2UgdmFsdWUgZG9lcyBub3QgY29udGFpbiB0aGUgZm9sbG93aW5nIGNoYXJhY3RlcnM6IGA8YCwgYD5gLCBgJmBcIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIG5vbmNlO1xufVxuZXhwb3J0IHtcbiAgYnVpbGRSZXF1ZXN0TGlrZSxcbiAgZ2V0U2NyaXB0Tm9uY2VGcm9tSGVhZGVyLFxuICBpc1ByZXJlbmRlcmluZ0JhaWxvdXRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiTmV4dFJlcXVlc3QiLCJpc1ByZXJlbmRlcmluZ0JhaWxvdXQiLCJlIiwiRXJyb3IiLCJtZXNzYWdlIiwibG93ZXJDYXNlSW5wdXQiLCJ0b0xvd2VyQ2FzZSIsImR5bmFtaWNTZXJ2ZXJVc2FnZSIsImluY2x1ZGVzIiwiYmFpbE91dFByZXJlbmRlcmluZyIsInJvdXRlUmVnZXgiLCJ0ZXN0IiwiYnVpbGRSZXF1ZXN0TGlrZSIsImhlYWRlcnMiLCJyZXNvbHZlZEhlYWRlcnMiLCJnZXRTY3JpcHROb25jZUZyb21IZWFkZXIiLCJjc3BIZWFkZXJWYWx1ZSIsIl9hIiwiZGlyZWN0aXZlcyIsInNwbGl0IiwibWFwIiwiZGlyZWN0aXZlMiIsInRyaW0iLCJkaXJlY3RpdmUiLCJmaW5kIiwiZGlyIiwic3RhcnRzV2l0aCIsIm5vbmNlIiwic2xpY2UiLCJzb3VyY2UiLCJsZW5ndGgiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/chunk-BUSYA2B4.js":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/chunk-BUSYA2B4.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __commonJS: () => (/* binding */ __commonJS)\n/* harmony export */ });\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod)=>function __require() {\n        return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = {\n            exports: {}\n        }).exports, mod), mod.exports;\n    };\n //# sourceMappingURL=chunk-BUSYA2B4.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vY2h1bmstQlVTWUEyQjQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUlBLG9CQUFvQkMsT0FBT0MsbUJBQW1CO0FBQ2xELElBQUlDLGFBQWEsQ0FBQ0MsSUFBSUMsTUFBUSxTQUFTQztRQUNyQyxPQUFPRCxPQUFPLENBQUMsR0FBR0QsRUFBRSxDQUFDSixrQkFBa0JJLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDQyxNQUFNO1lBQUVFLFNBQVMsQ0FBQztRQUFFLEdBQUdBLE9BQU8sRUFBRUYsTUFBTUEsSUFBSUUsT0FBTztJQUNwRztBQUlFLENBQ0YsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL2NodW5rLUJVU1lBMkI0LmpzPzAyNzkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19jb21tb25KUyA9IChjYiwgbW9kKSA9PiBmdW5jdGlvbiBfX3JlcXVpcmUoKSB7XG4gIHJldHVybiBtb2QgfHwgKDAsIGNiW19fZ2V0T3duUHJvcE5hbWVzKGNiKVswXV0pKChtb2QgPSB7IGV4cG9ydHM6IHt9IH0pLmV4cG9ydHMsIG1vZCksIG1vZC5leHBvcnRzO1xufTtcblxuZXhwb3J0IHtcbiAgX19jb21tb25KU1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUJVU1lBMkI0LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2dldE93blByb3BOYW1lcyIsIk9iamVjdCIsImdldE93blByb3BlcnR5TmFtZXMiLCJfX2NvbW1vbkpTIiwiY2IiLCJtb2QiLCJfX3JlcXVpcmUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/chunk-BUSYA2B4.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/constants.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constants: () => (/* binding */ constants)\n/* harmony export */ });\n\nconst Headers = {\n    NextRewrite: \"x-middleware-rewrite\",\n    NextResume: \"x-middleware-next\",\n    NextRedirect: \"Location\",\n    // Used by next to identify internal navigation for app router\n    NextUrl: \"next-url\",\n    NextAction: \"next-action\",\n    // Used by next to identify internal navigation for pages router\n    NextjsData: \"x-nextjs-data\"\n};\nconst constants = {\n    Headers\n};\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBNkI7QUFDN0IsTUFBTUEsVUFBVTtJQUNkQyxhQUFhO0lBQ2JDLFlBQVk7SUFDWkMsY0FBYztJQUNkLDhEQUE4RDtJQUM5REMsU0FBUztJQUNUQyxZQUFZO0lBQ1osZ0VBQWdFO0lBQ2hFQyxZQUFZO0FBQ2Q7QUFDQSxNQUFNQyxZQUFZO0lBQ2hCUDtBQUNGO0FBR0UsQ0FDRixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vY29uc3RhbnRzLmpzPzA3NmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xuY29uc3QgSGVhZGVycyA9IHtcbiAgTmV4dFJld3JpdGU6IFwieC1taWRkbGV3YXJlLXJld3JpdGVcIixcbiAgTmV4dFJlc3VtZTogXCJ4LW1pZGRsZXdhcmUtbmV4dFwiLFxuICBOZXh0UmVkaXJlY3Q6IFwiTG9jYXRpb25cIixcbiAgLy8gVXNlZCBieSBuZXh0IHRvIGlkZW50aWZ5IGludGVybmFsIG5hdmlnYXRpb24gZm9yIGFwcCByb3V0ZXJcbiAgTmV4dFVybDogXCJuZXh0LXVybFwiLFxuICBOZXh0QWN0aW9uOiBcIm5leHQtYWN0aW9uXCIsXG4gIC8vIFVzZWQgYnkgbmV4dCB0byBpZGVudGlmeSBpbnRlcm5hbCBuYXZpZ2F0aW9uIGZvciBwYWdlcyByb3V0ZXJcbiAgTmV4dGpzRGF0YTogXCJ4LW5leHRqcy1kYXRhXCJcbn07XG5jb25zdCBjb25zdGFudHMgPSB7XG4gIEhlYWRlcnNcbn07XG5leHBvcnQge1xuICBjb25zdGFudHNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbIkhlYWRlcnMiLCJOZXh0UmV3cml0ZSIsIk5leHRSZXN1bWUiLCJOZXh0UmVkaXJlY3QiLCJOZXh0VXJsIiwiTmV4dEFjdGlvbiIsIk5leHRqc0RhdGEiLCJjb25zdGFudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/runtime/browser/safe-node-apis.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/runtime/browser/safe-node-apis.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _chunk_BUSYA2B4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunk-BUSYA2B4.js */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/chunk-BUSYA2B4.js\");\n\nvar require_safe_node_apis = (0,_chunk_BUSYA2B4_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({\n    \"src/runtime/browser/safe-node-apis.js\" (exports, module) {\n        const fs = void 0;\n        const path = void 0;\n        const cwd = void 0;\n        module.exports = {\n            fs,\n            path,\n            cwd\n        };\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (require_safe_node_apis()); //# sourceMappingURL=safe-node-apis.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vcnVudGltZS9icm93c2VyL3NhZmUtbm9kZS1hcGlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRWlDO0FBQ2pDLElBQUlDLHlCQUF5QkQsOERBQVVBLENBQUM7SUFDdEMseUNBQXdDRSxPQUFPLEVBQUVDLE1BQU07UUFDckQsTUFBTUMsS0FBSyxLQUFLO1FBQ2hCLE1BQU1DLE9BQU8sS0FBSztRQUNsQixNQUFNQyxNQUFNLEtBQUs7UUFDakJILE9BQU9ELE9BQU8sR0FBRztZQUFFRTtZQUFJQztZQUFNQztRQUFJO0lBQ25DO0FBQ0Y7QUFDQSxpRUFBZUwsd0JBQXdCQSxFQUFDLENBQ3hDLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9ydW50aW1lL2Jyb3dzZXIvc2FmZS1ub2RlLWFwaXMuanM/MWVmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBfX2NvbW1vbkpTXG59IGZyb20gXCIuLi8uLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xudmFyIHJlcXVpcmVfc2FmZV9ub2RlX2FwaXMgPSBfX2NvbW1vbkpTKHtcbiAgXCJzcmMvcnVudGltZS9icm93c2VyL3NhZmUtbm9kZS1hcGlzLmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgY29uc3QgZnMgPSB2b2lkIDA7XG4gICAgY29uc3QgcGF0aCA9IHZvaWQgMDtcbiAgICBjb25zdCBjd2QgPSB2b2lkIDA7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSB7IGZzLCBwYXRoLCBjd2QgfTtcbiAgfVxufSk7XG5leHBvcnQgZGVmYXVsdCByZXF1aXJlX3NhZmVfbm9kZV9hcGlzKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zYWZlLW5vZGUtYXBpcy5qcy5tYXAiXSwibmFtZXMiOlsiX19jb21tb25KUyIsInJlcXVpcmVfc2FmZV9ub2RlX2FwaXMiLCJleHBvcnRzIiwibW9kdWxlIiwiZnMiLCJwYXRoIiwiY3dkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/runtime/browser/safe-node-apis.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClerkProps: () => (/* binding */ buildClerkProps),\n/* harmony export */   getDynamicAuthData: () => (/* binding */ getDynamicAuthData)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _data_getAuthDataFromRequest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data/getAuthDataFromRequest */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/data/getAuthDataFromRequest.js\");\n\n\n\nconst buildClerkProps = (req, initialState = {})=>{\n    const sanitizedAuthObject = getDynamicAuthData(req, initialState);\n    const __clerk_ssr_state =  true ? JSON.parse(JSON.stringify(sanitizedAuthObject)) : 0;\n    return {\n        __clerk_ssr_state\n    };\n};\nfunction getDynamicAuthData(req, initialState = {}) {\n    const authObject = (0,_data_getAuthDataFromRequest__WEBPACK_IMPORTED_MODULE_1__.getAuthDataFromRequest)(req);\n    return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.makeAuthObjectSerializable)((0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.stripPrivateDataFromObject)({\n        ...authObject,\n        ...initialState\n    }));\n}\n //# sourceMappingURL=buildClerkProps.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2J1aWxkQ2xlcmtQcm9wcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThCO0FBQ21FO0FBQzFCO0FBQ3ZFLE1BQU1HLGtCQUFrQixDQUFDQyxLQUFLQyxlQUFlLENBQUMsQ0FBQztJQUM3QyxNQUFNQyxzQkFBc0JDLG1CQUFtQkgsS0FBS0M7SUFDcEQsTUFBTUcsb0JBQW9CQyxLQUFxQyxHQUFHQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLFNBQVMsQ0FBQ04sd0JBQXdCQSxDQUFtQkE7SUFDdkksT0FBTztRQUFFRTtJQUFrQjtBQUM3QjtBQUNBLFNBQVNELG1CQUFtQkgsR0FBRyxFQUFFQyxlQUFlLENBQUMsQ0FBQztJQUNoRCxNQUFNUSxhQUFhWCxvRkFBc0JBLENBQUNFO0lBQzFDLE9BQU9KLG1GQUEwQkEsQ0FBQ0MsbUZBQTBCQSxDQUFDO1FBQUUsR0FBR1ksVUFBVTtRQUFFLEdBQUdSLFlBQVk7SUFBQztBQUNoRztBQUlFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9idWlsZENsZXJrUHJvcHMuanM/NjhmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xuaW1wb3J0IHsgbWFrZUF1dGhPYmplY3RTZXJpYWxpemFibGUsIHN0cmlwUHJpdmF0ZURhdGFGcm9tT2JqZWN0IH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kL2ludGVybmFsXCI7XG5pbXBvcnQgeyBnZXRBdXRoRGF0YUZyb21SZXF1ZXN0IH0gZnJvbSBcIi4vZGF0YS9nZXRBdXRoRGF0YUZyb21SZXF1ZXN0XCI7XG5jb25zdCBidWlsZENsZXJrUHJvcHMgPSAocmVxLCBpbml0aWFsU3RhdGUgPSB7fSkgPT4ge1xuICBjb25zdCBzYW5pdGl6ZWRBdXRoT2JqZWN0ID0gZ2V0RHluYW1pY0F1dGhEYXRhKHJlcSwgaW5pdGlhbFN0YXRlKTtcbiAgY29uc3QgX19jbGVya19zc3Jfc3RhdGUgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNhbml0aXplZEF1dGhPYmplY3QpKSA6IHNhbml0aXplZEF1dGhPYmplY3Q7XG4gIHJldHVybiB7IF9fY2xlcmtfc3NyX3N0YXRlIH07XG59O1xuZnVuY3Rpb24gZ2V0RHluYW1pY0F1dGhEYXRhKHJlcSwgaW5pdGlhbFN0YXRlID0ge30pIHtcbiAgY29uc3QgYXV0aE9iamVjdCA9IGdldEF1dGhEYXRhRnJvbVJlcXVlc3QocmVxKTtcbiAgcmV0dXJuIG1ha2VBdXRoT2JqZWN0U2VyaWFsaXphYmxlKHN0cmlwUHJpdmF0ZURhdGFGcm9tT2JqZWN0KHsgLi4uYXV0aE9iamVjdCwgLi4uaW5pdGlhbFN0YXRlIH0pKTtcbn1cbmV4cG9ydCB7XG4gIGJ1aWxkQ2xlcmtQcm9wcyxcbiAgZ2V0RHluYW1pY0F1dGhEYXRhXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnVpbGRDbGVya1Byb3BzLmpzLm1hcCJdLCJuYW1lcyI6WyJtYWtlQXV0aE9iamVjdFNlcmlhbGl6YWJsZSIsInN0cmlwUHJpdmF0ZURhdGFGcm9tT2JqZWN0IiwiZ2V0QXV0aERhdGFGcm9tUmVxdWVzdCIsImJ1aWxkQ2xlcmtQcm9wcyIsInJlcSIsImluaXRpYWxTdGF0ZSIsInNhbml0aXplZEF1dGhPYmplY3QiLCJnZXREeW5hbWljQXV0aERhdGEiLCJfX2NsZXJrX3Nzcl9zdGF0ZSIsInByb2Nlc3MiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJhdXRoT2JqZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clerkClient: () => (/* binding */ clerkClient)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _app_router_server_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app-router/server/utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js\");\n/* harmony import */ var _createClerkClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createClerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createClerkClient.js\");\n/* harmony import */ var _headers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headers-utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\");\n/* harmony import */ var _middleware_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./middleware-storage */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/middleware-storage.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\n\n\nconst clerkClient = async ()=>{\n    var _a, _b;\n    let requestData;\n    try {\n        const request = await (0,_app_router_server_utils__WEBPACK_IMPORTED_MODULE_1__.buildRequestLike)();\n        const encryptedRequestData = (0,_headers_utils__WEBPACK_IMPORTED_MODULE_2__.getHeader)(request, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRequestData);\n        requestData = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.decryptClerkRequestData)(encryptedRequestData);\n    } catch (err) {\n        if (err && (0,_app_router_server_utils__WEBPACK_IMPORTED_MODULE_1__.isPrerenderingBailout)(err)) {\n            throw err;\n        }\n    }\n    const options = (_b = (_a = _middleware_storage__WEBPACK_IMPORTED_MODULE_4__.clerkMiddlewareRequestDataStorage.getStore()) == null ? void 0 : _a.get(\"requestData\")) != null ? _b : requestData;\n    if ((options == null ? void 0 : options.secretKey) || (options == null ? void 0 : options.publishableKey)) {\n        return (0,_createClerkClient__WEBPACK_IMPORTED_MODULE_5__.createClerkClientWithOptions)(options);\n    }\n    return (0,_createClerkClient__WEBPACK_IMPORTED_MODULE_5__.createClerkClientWithOptions)({});\n};\n //# sourceMappingURL=clerkClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NsZXJrQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBOEI7QUFDc0I7QUFDaUM7QUFDbEI7QUFDdkI7QUFDNkI7QUFDdkI7QUFDbEQsTUFBTU8sY0FBYztJQUNsQixJQUFJQyxJQUFJQztJQUNSLElBQUlDO0lBQ0osSUFBSTtRQUNGLE1BQU1DLFVBQVUsTUFBTVYsMEVBQWdCQTtRQUN0QyxNQUFNVyx1QkFBdUJSLHlEQUFTQSxDQUFDTyxTQUFTWCw4REFBU0EsQ0FBQ2EsT0FBTyxDQUFDQyxnQkFBZ0I7UUFDbEZKLGNBQWNKLCtEQUF1QkEsQ0FBQ007SUFDeEMsRUFBRSxPQUFPRyxLQUFLO1FBQ1osSUFBSUEsT0FBT2IsK0VBQXFCQSxDQUFDYSxNQUFNO1lBQ3JDLE1BQU1BO1FBQ1I7SUFDRjtJQUNBLE1BQU1DLFVBQVUsQ0FBQ1AsS0FBSyxDQUFDRCxLQUFLSCxrRkFBaUNBLENBQUNZLFFBQVEsRUFBQyxLQUFNLE9BQU8sS0FBSyxJQUFJVCxHQUFHVSxHQUFHLENBQUMsY0FBYSxLQUFNLE9BQU9ULEtBQUtDO0lBQ25JLElBQUksQ0FBQ00sV0FBVyxPQUFPLEtBQUssSUFBSUEsUUFBUUcsU0FBUyxLQUFNSCxDQUFBQSxXQUFXLE9BQU8sS0FBSyxJQUFJQSxRQUFRSSxjQUFjLEdBQUc7UUFDekcsT0FBT2pCLGdGQUE0QkEsQ0FBQ2E7SUFDdEM7SUFDQSxPQUFPYixnRkFBNEJBLENBQUMsQ0FBQztBQUN2QztBQUdFLENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jbGVya0NsaWVudC5qcz9iMWYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBjb25zdGFudHMgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvaW50ZXJuYWxcIjtcbmltcG9ydCB7IGJ1aWxkUmVxdWVzdExpa2UsIGlzUHJlcmVuZGVyaW5nQmFpbG91dCB9IGZyb20gXCIuLi9hcHAtcm91dGVyL3NlcnZlci91dGlsc1wiO1xuaW1wb3J0IHsgY3JlYXRlQ2xlcmtDbGllbnRXaXRoT3B0aW9ucyB9IGZyb20gXCIuL2NyZWF0ZUNsZXJrQ2xpZW50XCI7XG5pbXBvcnQgeyBnZXRIZWFkZXIgfSBmcm9tIFwiLi9oZWFkZXJzLXV0aWxzXCI7XG5pbXBvcnQgeyBjbGVya01pZGRsZXdhcmVSZXF1ZXN0RGF0YVN0b3JhZ2UgfSBmcm9tIFwiLi9taWRkbGV3YXJlLXN0b3JhZ2VcIjtcbmltcG9ydCB7IGRlY3J5cHRDbGVya1JlcXVlc3REYXRhIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmNvbnN0IGNsZXJrQ2xpZW50ID0gYXN5bmMgKCkgPT4ge1xuICB2YXIgX2EsIF9iO1xuICBsZXQgcmVxdWVzdERhdGE7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IGJ1aWxkUmVxdWVzdExpa2UoKTtcbiAgICBjb25zdCBlbmNyeXB0ZWRSZXF1ZXN0RGF0YSA9IGdldEhlYWRlcihyZXF1ZXN0LCBjb25zdGFudHMuSGVhZGVycy5DbGVya1JlcXVlc3REYXRhKTtcbiAgICByZXF1ZXN0RGF0YSA9IGRlY3J5cHRDbGVya1JlcXVlc3REYXRhKGVuY3J5cHRlZFJlcXVlc3REYXRhKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKGVyciAmJiBpc1ByZXJlbmRlcmluZ0JhaWxvdXQoZXJyKSkge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgfVxuICBjb25zdCBvcHRpb25zID0gKF9iID0gKF9hID0gY2xlcmtNaWRkbGV3YXJlUmVxdWVzdERhdGFTdG9yYWdlLmdldFN0b3JlKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5nZXQoXCJyZXF1ZXN0RGF0YVwiKSkgIT0gbnVsbCA/IF9iIDogcmVxdWVzdERhdGE7XG4gIGlmICgob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5zZWNyZXRLZXkpIHx8IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnB1Ymxpc2hhYmxlS2V5KSkge1xuICAgIHJldHVybiBjcmVhdGVDbGVya0NsaWVudFdpdGhPcHRpb25zKG9wdGlvbnMpO1xuICB9XG4gIHJldHVybiBjcmVhdGVDbGVya0NsaWVudFdpdGhPcHRpb25zKHt9KTtcbn07XG5leHBvcnQge1xuICBjbGVya0NsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsZXJrQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJjb25zdGFudHMiLCJidWlsZFJlcXVlc3RMaWtlIiwiaXNQcmVyZW5kZXJpbmdCYWlsb3V0IiwiY3JlYXRlQ2xlcmtDbGllbnRXaXRoT3B0aW9ucyIsImdldEhlYWRlciIsImNsZXJrTWlkZGxld2FyZVJlcXVlc3REYXRhU3RvcmFnZSIsImRlY3J5cHRDbGVya1JlcXVlc3REYXRhIiwiY2xlcmtDbGllbnQiLCJfYSIsIl9iIiwicmVxdWVzdERhdGEiLCJyZXF1ZXN0IiwiZW5jcnlwdGVkUmVxdWVzdERhdGEiLCJIZWFkZXJzIiwiQ2xlcmtSZXF1ZXN0RGF0YSIsImVyciIsIm9wdGlvbnMiLCJnZXRTdG9yZSIsImdldCIsInNlY3JldEtleSIsInB1Ymxpc2hhYmxlS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clerkMiddleware: () => (/* binding */ clerkMiddleware),\n/* harmony export */   createAuthenticateRequestOptions: () => (/* binding */ createAuthenticateRequestOptions)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(middleware)/./node_modules/next/dist/esm/api/navigation.js\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _utils_feature_flags__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/feature-flags */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _errorThrower__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./errorThrower */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\");\n/* harmony import */ var _keyless__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./keyless */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/keyless.js\");\n/* harmony import */ var _middleware_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./middleware-storage */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/middleware-storage.js\");\n/* harmony import */ var _nextErrors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./nextErrors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/nextErrors.js\");\n/* harmony import */ var _protect__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./protect */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst clerkMiddleware = (...args)=>{\n    const [request, event] = parseRequestAndEvent(args);\n    const [handler, params] = parseHandlerAndOptions(args);\n    return _middleware_storage__WEBPACK_IMPORTED_MODULE_4__.clerkMiddlewareRequestDataStorage.run(_middleware_storage__WEBPACK_IMPORTED_MODULE_4__.clerkMiddlewareRequestDataStore, ()=>{\n        const baseNextMiddleware = (0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_5__.withLogger)(\"clerkMiddleware\", (logger)=>async (request2, event2)=>{\n                const resolvedParams = typeof params === \"function\" ? params(request2) : params;\n                const keyless = (0,_keyless__WEBPACK_IMPORTED_MODULE_6__.getKeylessCookieValue)((name)=>{\n                    var _a;\n                    return (_a = request2.cookies.get(name)) == null ? void 0 : _a.value;\n                });\n                const publishableKey = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.assertKey)(resolvedParams.publishableKey || _constants__WEBPACK_IMPORTED_MODULE_8__.PUBLISHABLE_KEY || (keyless == null ? void 0 : keyless.publishableKey), ()=>_errorThrower__WEBPACK_IMPORTED_MODULE_9__.errorThrower.throwMissingPublishableKeyError());\n                const secretKey = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.assertKey)(resolvedParams.secretKey || _constants__WEBPACK_IMPORTED_MODULE_8__.SECRET_KEY || (keyless == null ? void 0 : keyless.secretKey), ()=>_errorThrower__WEBPACK_IMPORTED_MODULE_9__.errorThrower.throwMissingSecretKeyError());\n                const signInUrl = resolvedParams.signInUrl || _constants__WEBPACK_IMPORTED_MODULE_8__.SIGN_IN_URL;\n                const signUpUrl = resolvedParams.signUpUrl || _constants__WEBPACK_IMPORTED_MODULE_8__.SIGN_UP_URL;\n                const options = {\n                    publishableKey,\n                    secretKey,\n                    signInUrl,\n                    signUpUrl,\n                    ...resolvedParams\n                };\n                _middleware_storage__WEBPACK_IMPORTED_MODULE_4__.clerkMiddlewareRequestDataStore.set(\"requestData\", options);\n                const resolvedClerkClient = await (0,_clerkClient__WEBPACK_IMPORTED_MODULE_10__.clerkClient)();\n                resolvedClerkClient.telemetry.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_1__.eventMethodCalled)(\"clerkMiddleware\", {\n                    handler: Boolean(handler),\n                    satellite: Boolean(options.isSatellite),\n                    proxy: Boolean(options.proxyUrl)\n                }));\n                if (options.debug) {\n                    logger.enable();\n                }\n                const clerkRequest = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest)(request2);\n                logger.debug(\"options\", options);\n                logger.debug(\"url\", ()=>clerkRequest.toJSON());\n                const requestState = await resolvedClerkClient.authenticateRequest(clerkRequest, createAuthenticateRequestOptions(clerkRequest, options));\n                logger.debug(\"requestState\", ()=>({\n                        status: requestState.status,\n                        // @ts-expect-error : FIXME\n                        headers: JSON.stringify(Object.fromEntries(requestState.headers)),\n                        reason: requestState.reason\n                    }));\n                const locationHeader = requestState.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.Location);\n                if (locationHeader) {\n                    return new Response(null, {\n                        status: 307,\n                        headers: requestState.headers\n                    });\n                } else if (requestState.status === _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.Handshake) {\n                    throw new Error(\"Clerk: handshake status without redirect\");\n                }\n                const authObject = requestState.toAuth();\n                logger.debug(\"auth\", ()=>({\n                        auth: authObject,\n                        debug: authObject.debug()\n                    }));\n                const redirectToSignIn = createMiddlewareRedirectToSignIn(clerkRequest);\n                const protect = await createMiddlewareProtect(clerkRequest, authObject, redirectToSignIn);\n                const authObjWithMethods = Object.assign(authObject, {\n                    redirectToSignIn\n                });\n                const authHandler = ()=>Promise.resolve(authObjWithMethods);\n                authHandler.protect = protect;\n                let handlerResult = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].next();\n                try {\n                    const userHandlerResult = await _middleware_storage__WEBPACK_IMPORTED_MODULE_4__.clerkMiddlewareRequestDataStorage.run(_middleware_storage__WEBPACK_IMPORTED_MODULE_4__.clerkMiddlewareRequestDataStore, async ()=>handler == null ? void 0 : handler(authHandler, request2, event2));\n                    handlerResult = userHandlerResult || handlerResult;\n                } catch (e) {\n                    handlerResult = handleControlFlowErrors(e, clerkRequest, request2, requestState);\n                }\n                if (requestState.headers) {\n                    requestState.headers.forEach((value, key)=>{\n                        handlerResult.headers.append(key, value);\n                    });\n                }\n                if ((0,_utils__WEBPACK_IMPORTED_MODULE_11__.isRedirect)(handlerResult)) {\n                    logger.debug(\"handlerResult is redirect\");\n                    return (0,_utils__WEBPACK_IMPORTED_MODULE_11__.serverRedirectWithAuth)(clerkRequest, handlerResult, options);\n                }\n                if (options.debug) {\n                    (0,_utils__WEBPACK_IMPORTED_MODULE_7__.setRequestHeadersOnNextResponse)(handlerResult, clerkRequest, {\n                        [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug]: \"true\"\n                    });\n                }\n                const keylessKeysForRequestData = // Only pass keyless credentials when there are no explicit keys\n                secretKey === (keyless == null ? void 0 : keyless.secretKey) ? {\n                    publishableKey: keyless == null ? void 0 : keyless.publishableKey,\n                    secretKey: keyless == null ? void 0 : keyless.secretKey\n                } : {};\n                (0,_utils__WEBPACK_IMPORTED_MODULE_7__.decorateRequest)(clerkRequest, handlerResult, requestState, resolvedParams, keylessKeysForRequestData);\n                return handlerResult;\n            });\n        const keylessMiddleware = async (request2, event2)=>{\n            if (isKeylessSyncRequest(request2)) {\n                return returnBackFromKeylessSync(request2);\n            }\n            const resolvedParams = typeof params === \"function\" ? params(request2) : params;\n            const keyless = (0,_keyless__WEBPACK_IMPORTED_MODULE_6__.getKeylessCookieValue)((name)=>{\n                var _a;\n                return (_a = request2.cookies.get(name)) == null ? void 0 : _a.value;\n            });\n            const isMissingPublishableKey = !(resolvedParams.publishableKey || _constants__WEBPACK_IMPORTED_MODULE_8__.PUBLISHABLE_KEY || (keyless == null ? void 0 : keyless.publishableKey));\n            if (isMissingPublishableKey) {\n                const res = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].next();\n                (0,_utils__WEBPACK_IMPORTED_MODULE_7__.setRequestHeadersOnNextResponse)(res, request2, {\n                    [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus]: \"signed-out\"\n                });\n                return res;\n            }\n            return baseNextMiddleware(request2, event2);\n        };\n        const nextMiddleware = async (request2, event2)=>{\n            if (_utils_feature_flags__WEBPACK_IMPORTED_MODULE_12__.canUseKeyless) {\n                return keylessMiddleware(request2, event2);\n            }\n            return baseNextMiddleware(request2, event2);\n        };\n        if (request && event) {\n            return nextMiddleware(request, event);\n        }\n        return nextMiddleware;\n    });\n};\nconst parseRequestAndEvent = (args)=>{\n    return [\n        args[0] instanceof Request ? args[0] : void 0,\n        args[0] instanceof Request ? args[1] : void 0\n    ];\n};\nconst parseHandlerAndOptions = (args)=>{\n    return [\n        typeof args[0] === \"function\" ? args[0] : void 0,\n        (args.length === 2 ? args[1] : typeof args[0] === \"function\" ? {} : args[0]) || {}\n    ];\n};\nconst isKeylessSyncRequest = (request)=>request.nextUrl.pathname === \"/clerk-sync-keyless\";\nconst returnBackFromKeylessSync = (request)=>{\n    const returnUrl = request.nextUrl.searchParams.get(\"returnUrl\");\n    const url = new URL(request.url);\n    url.pathname = \"\";\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].redirect(returnUrl || url.toString());\n};\nconst createAuthenticateRequestOptions = (clerkRequest, options)=>{\n    return {\n        ...options,\n        ...(0,_utils__WEBPACK_IMPORTED_MODULE_7__.handleMultiDomainAndProxy)(clerkRequest, options)\n    };\n};\nconst createMiddlewareRedirectToSignIn = (clerkRequest)=>{\n    return (opts = {})=>{\n        const url = clerkRequest.clerkUrl.toString();\n        (0,_nextErrors__WEBPACK_IMPORTED_MODULE_13__.redirectToSignInError)(url, opts.returnBackUrl);\n    };\n};\nconst createMiddlewareProtect = (clerkRequest, authObject, redirectToSignIn)=>{\n    return async (params, options)=>{\n        const notFound = ()=>(0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.notFound)();\n        const redirect = (url)=>(0,_nextErrors__WEBPACK_IMPORTED_MODULE_13__.nextjsRedirectError)(url, {\n                redirectUrl: url\n            });\n        return (0,_protect__WEBPACK_IMPORTED_MODULE_14__.createProtect)({\n            request: clerkRequest,\n            redirect,\n            notFound,\n            authObject,\n            redirectToSignIn\n        })(params, options);\n    };\n};\nconst handleControlFlowErrors = (e, clerkRequest, nextRequest, requestState)=>{\n    if ((0,_nextErrors__WEBPACK_IMPORTED_MODULE_13__.isNextjsNotFoundError)(e)) {\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_11__.setHeader)(// This is an internal rewrite purely to trigger a not found error. We do not want Next.js to think that the\n        // destination URL is a valid page, so we use `nextRequest.url` as the base for the fake URL, which Next.js\n        // understands is an internal URL and won't run middleware against the request.\n        next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].rewrite(new URL(`/clerk_${Date.now()}`, nextRequest.url)), _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"protect-rewrite\");\n    }\n    if ((0,_nextErrors__WEBPACK_IMPORTED_MODULE_13__.isRedirectToSignInError)(e)) {\n        return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createRedirect)({\n            redirectAdapter: _utils__WEBPACK_IMPORTED_MODULE_7__.redirectAdapter,\n            baseUrl: clerkRequest.clerkUrl,\n            signInUrl: requestState.signInUrl,\n            signUpUrl: requestState.signUpUrl,\n            publishableKey: requestState.publishableKey\n        }).redirectToSignIn({\n            returnBackUrl: e.returnBackUrl\n        });\n    }\n    if ((0,_nextErrors__WEBPACK_IMPORTED_MODULE_13__.isNextjsRedirectError)(e)) {\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_7__.redirectAdapter)(e.redirectUrl);\n    }\n    throw e;\n};\n //# sourceMappingURL=clerkMiddleware.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/constants.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_URL: () => (/* binding */ API_URL),\n/* harmony export */   API_VERSION: () => (/* binding */ API_VERSION),\n/* harmony export */   CLERK_JS_URL: () => (/* binding */ CLERK_JS_URL),\n/* harmony export */   CLERK_JS_VERSION: () => (/* binding */ CLERK_JS_VERSION),\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   ENCRYPTION_KEY: () => (/* binding */ ENCRYPTION_KEY),\n/* harmony export */   IS_SATELLITE: () => (/* binding */ IS_SATELLITE),\n/* harmony export */   KEYLESS_DISABLED: () => (/* binding */ KEYLESS_DISABLED),\n/* harmony export */   PROXY_URL: () => (/* binding */ PROXY_URL),\n/* harmony export */   PUBLISHABLE_KEY: () => (/* binding */ PUBLISHABLE_KEY),\n/* harmony export */   SDK_METADATA: () => (/* binding */ SDK_METADATA),\n/* harmony export */   SECRET_KEY: () => (/* binding */ SECRET_KEY),\n/* harmony export */   SIGN_IN_URL: () => (/* binding */ SIGN_IN_URL),\n/* harmony export */   SIGN_UP_URL: () => (/* binding */ SIGN_UP_URL),\n/* harmony export */   TELEMETRY_DEBUG: () => (/* binding */ TELEMETRY_DEBUG),\n/* harmony export */   TELEMETRY_DISABLED: () => (/* binding */ TELEMETRY_DISABLED)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_apiUrlFromPublishableKey__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/apiUrlFromPublishableKey */ \"(middleware)/./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs\");\n/* harmony import */ var _clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/underscore */ \"(middleware)/./node_modules/@clerk/shared/dist/underscore.mjs\");\n\n\n\nconst CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || \"\";\nconst CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS_URL || \"\";\nconst API_VERSION = process.env.CLERK_API_VERSION || \"v1\";\nconst SECRET_KEY = process.env.CLERK_SECRET_KEY || \"\";\nconst PUBLISHABLE_KEY = \"pk_test_Y3VkZGx5LW5hcndoYWwtNDcuY2xlcmsuYWNjb3VudHMuZGV2JA\" || 0;\nconst ENCRYPTION_KEY = process.env.CLERK_ENCRYPTION_KEY || \"\";\nconst API_URL = process.env.CLERK_API_URL || (0,_clerk_shared_apiUrlFromPublishableKey__WEBPACK_IMPORTED_MODULE_0__.apiUrlFromPublishableKey)(PUBLISHABLE_KEY);\nconst DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || \"\";\nconst PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || \"\";\nconst IS_SATELLITE = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE) || false;\nconst SIGN_IN_URL = \"/sign-in\" || 0;\nconst SIGN_UP_URL = \"/sign-up\" || 0;\nconst SDK_METADATA = {\n    name: \"@clerk/nextjs\",\n    version: \"6.11.3\",\n    environment: \"development\"\n};\nconst TELEMETRY_DISABLED = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED);\nconst TELEMETRY_DEBUG = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG);\nconst KEYLESS_DISABLED = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.NEXT_PUBLIC_CLERK_KEYLESS_DISABLED) || false;\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBOEI7QUFDb0Q7QUFDOUI7QUFDcEQsTUFBTUUsbUJBQW1CQyxRQUFRQyxHQUFHLENBQUNDLDRCQUE0QixJQUFJO0FBQ3JFLE1BQU1DLGVBQWVILFFBQVFDLEdBQUcsQ0FBQ0csd0JBQXdCLElBQUk7QUFDN0QsTUFBTUMsY0FBY0wsUUFBUUMsR0FBRyxDQUFDSyxpQkFBaUIsSUFBSTtBQUNyRCxNQUFNQyxhQUFhUCxRQUFRQyxHQUFHLENBQUNPLGdCQUFnQixJQUFJO0FBQ25ELE1BQU1DLGtCQUFrQlQsNERBQTZDLElBQUksQ0FBRTtBQUMzRSxNQUFNVyxpQkFBaUJYLFFBQVFDLEdBQUcsQ0FBQ1csb0JBQW9CLElBQUk7QUFDM0QsTUFBTUMsVUFBVWIsUUFBUUMsR0FBRyxDQUFDYSxhQUFhLElBQUlqQixnR0FBd0JBLENBQUNZO0FBQ3RFLE1BQU1NLFNBQVNmLFFBQVFDLEdBQUcsQ0FBQ2Usd0JBQXdCLElBQUk7QUFDdkQsTUFBTUMsWUFBWWpCLFFBQVFDLEdBQUcsQ0FBQ2lCLDJCQUEyQixJQUFJO0FBQzdELE1BQU1DLGVBQWVyQixrRUFBUUEsQ0FBQ0UsUUFBUUMsR0FBRyxDQUFDbUIsOEJBQThCLEtBQUs7QUFDN0UsTUFBTUMsY0FBY3JCLFVBQXlDLElBQUksQ0FBRTtBQUNuRSxNQUFNdUIsY0FBY3ZCLFVBQXlDLElBQUksQ0FBRTtBQUNuRSxNQUFNeUIsZUFBZTtJQUNuQkMsTUFBTTtJQUNOQyxTQUFTO0lBQ1RDLGFBbEJGO0FBbUJBO0FBQ0EsTUFBTUMscUJBQXFCL0Isa0VBQVFBLENBQUNFLFFBQVFDLEdBQUcsQ0FBQzZCLG9DQUFvQztBQUNwRixNQUFNQyxrQkFBa0JqQyxrRUFBUUEsQ0FBQ0UsUUFBUUMsR0FBRyxDQUFDK0IsaUNBQWlDO0FBQzlFLE1BQU1DLG1CQUFtQm5DLGtFQUFRQSxDQUFDRSxRQUFRQyxHQUFHLENBQUNpQyxrQ0FBa0MsS0FBSztBQWtCbkYsQ0FDRixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NvbnN0YW50cy5qcz9jZDI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBhcGlVcmxGcm9tUHVibGlzaGFibGVLZXkgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9hcGlVcmxGcm9tUHVibGlzaGFibGVLZXlcIjtcbmltcG9ydCB7IGlzVHJ1dGh5IH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvdW5kZXJzY29yZVwiO1xuY29uc3QgQ0xFUktfSlNfVkVSU0lPTiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0pTX1ZFUlNJT04gfHwgXCJcIjtcbmNvbnN0IENMRVJLX0pTX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0pTX1VSTCB8fCBcIlwiO1xuY29uc3QgQVBJX1ZFUlNJT04gPSBwcm9jZXNzLmVudi5DTEVSS19BUElfVkVSU0lPTiB8fCBcInYxXCI7XG5jb25zdCBTRUNSRVRfS0VZID0gcHJvY2Vzcy5lbnYuQ0xFUktfU0VDUkVUX0tFWSB8fCBcIlwiO1xuY29uc3QgUFVCTElTSEFCTEVfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfUFVCTElTSEFCTEVfS0VZIHx8IFwiXCI7XG5jb25zdCBFTkNSWVBUSU9OX0tFWSA9IHByb2Nlc3MuZW52LkNMRVJLX0VOQ1JZUFRJT05fS0VZIHx8IFwiXCI7XG5jb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuQ0xFUktfQVBJX1VSTCB8fCBhcGlVcmxGcm9tUHVibGlzaGFibGVLZXkoUFVCTElTSEFCTEVfS0VZKTtcbmNvbnN0IERPTUFJTiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0RPTUFJTiB8fCBcIlwiO1xuY29uc3QgUFJPWFlfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfUFJPWFlfVVJMIHx8IFwiXCI7XG5jb25zdCBJU19TQVRFTExJVEUgPSBpc1RydXRoeShwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19JU19TQVRFTExJVEUpIHx8IGZhbHNlO1xuY29uc3QgU0lHTl9JTl9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19TSUdOX0lOX1VSTCB8fCBcIlwiO1xuY29uc3QgU0lHTl9VUF9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19TSUdOX1VQX1VSTCB8fCBcIlwiO1xuY29uc3QgU0RLX01FVEFEQVRBID0ge1xuICBuYW1lOiBcIkBjbGVyay9uZXh0anNcIixcbiAgdmVyc2lvbjogXCI2LjExLjNcIixcbiAgZW52aXJvbm1lbnQ6IHByb2Nlc3MuZW52Lk5PREVfRU5WXG59O1xuY29uc3QgVEVMRU1FVFJZX0RJU0FCTEVEID0gaXNUcnV0aHkocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfVEVMRU1FVFJZX0RJU0FCTEVEKTtcbmNvbnN0IFRFTEVNRVRSWV9ERUJVRyA9IGlzVHJ1dGh5KHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX1RFTEVNRVRSWV9ERUJVRyk7XG5jb25zdCBLRVlMRVNTX0RJU0FCTEVEID0gaXNUcnV0aHkocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfS0VZTEVTU19ESVNBQkxFRCkgfHwgZmFsc2U7XG5leHBvcnQge1xuICBBUElfVVJMLFxuICBBUElfVkVSU0lPTixcbiAgQ0xFUktfSlNfVVJMLFxuICBDTEVSS19KU19WRVJTSU9OLFxuICBET01BSU4sXG4gIEVOQ1JZUFRJT05fS0VZLFxuICBJU19TQVRFTExJVEUsXG4gIEtFWUxFU1NfRElTQUJMRUQsXG4gIFBST1hZX1VSTCxcbiAgUFVCTElTSEFCTEVfS0VZLFxuICBTREtfTUVUQURBVEEsXG4gIFNFQ1JFVF9LRVksXG4gIFNJR05fSU5fVVJMLFxuICBTSUdOX1VQX1VSTCxcbiAgVEVMRU1FVFJZX0RFQlVHLFxuICBURUxFTUVUUllfRElTQUJMRURcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbImFwaVVybEZyb21QdWJsaXNoYWJsZUtleSIsImlzVHJ1dGh5IiwiQ0xFUktfSlNfVkVSU0lPTiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19DTEVSS19KU19WRVJTSU9OIiwiQ0xFUktfSlNfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfSlNfVVJMIiwiQVBJX1ZFUlNJT04iLCJDTEVSS19BUElfVkVSU0lPTiIsIlNFQ1JFVF9LRVkiLCJDTEVSS19TRUNSRVRfS0VZIiwiUFVCTElTSEFCTEVfS0VZIiwiTkVYVF9QVUJMSUNfQ0xFUktfUFVCTElTSEFCTEVfS0VZIiwiRU5DUllQVElPTl9LRVkiLCJDTEVSS19FTkNSWVBUSU9OX0tFWSIsIkFQSV9VUkwiLCJDTEVSS19BUElfVVJMIiwiRE9NQUlOIiwiTkVYVF9QVUJMSUNfQ0xFUktfRE9NQUlOIiwiUFJPWFlfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfUFJPWFlfVVJMIiwiSVNfU0FURUxMSVRFIiwiTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFIiwiU0lHTl9JTl9VUkwiLCJORVhUX1BVQkxJQ19DTEVSS19TSUdOX0lOX1VSTCIsIlNJR05fVVBfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9VUF9VUkwiLCJTREtfTUVUQURBVEEiLCJuYW1lIiwidmVyc2lvbiIsImVudmlyb25tZW50IiwiVEVMRU1FVFJZX0RJU0FCTEVEIiwiTkVYVF9QVUJMSUNfQ0xFUktfVEVMRU1FVFJZX0RJU0FCTEVEIiwiVEVMRU1FVFJZX0RFQlVHIiwiTkVYVF9QVUJMSUNfQ0xFUktfVEVMRU1FVFJZX0RFQlVHIiwiS0VZTEVTU19ESVNBQkxFRCIsIk5FWFRfUFVCTElDX0NMRVJLX0tFWUxFU1NfRElTQUJMRUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createClerkClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/createClerkClient.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClerkClientWithOptions: () => (/* binding */ createClerkClientWithOptions)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/./node_modules/@clerk/backend/dist/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n\n\n\nconst clerkClientDefaultOptions = {\n    secretKey: _constants__WEBPACK_IMPORTED_MODULE_1__.SECRET_KEY,\n    publishableKey: _constants__WEBPACK_IMPORTED_MODULE_1__.PUBLISHABLE_KEY,\n    apiUrl: _constants__WEBPACK_IMPORTED_MODULE_1__.API_URL,\n    apiVersion: _constants__WEBPACK_IMPORTED_MODULE_1__.API_VERSION,\n    userAgent: `${\"@clerk/nextjs\"}@${\"6.11.3\"}`,\n    proxyUrl: _constants__WEBPACK_IMPORTED_MODULE_1__.PROXY_URL,\n    domain: _constants__WEBPACK_IMPORTED_MODULE_1__.DOMAIN,\n    isSatellite: _constants__WEBPACK_IMPORTED_MODULE_1__.IS_SATELLITE,\n    sdkMetadata: _constants__WEBPACK_IMPORTED_MODULE_1__.SDK_METADATA,\n    telemetry: {\n        disabled: _constants__WEBPACK_IMPORTED_MODULE_1__.TELEMETRY_DISABLED,\n        debug: _constants__WEBPACK_IMPORTED_MODULE_1__.TELEMETRY_DEBUG\n    }\n};\nconst createClerkClientWithOptions = (options)=>(0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.createClerkClient)({\n        ...clerkClientDefaultOptions,\n        ...options\n    });\n //# sourceMappingURL=createClerkClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NyZWF0ZUNsZXJrQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNxQjtBQVk5QjtBQUNyQixNQUFNVyw0QkFBNEI7SUFDaENDLFdBQVdKLGtEQUFVQTtJQUNyQkssZ0JBQWdCUCx1REFBZUE7SUFDL0JRLFFBQVFiLCtDQUFPQTtJQUNmYyxZQUFZYixtREFBV0E7SUFDdkJjLFdBQVcsQ0FBQyxFQUFFLGdCQUFnQixDQUFDLEVBQUUsU0FBUyxDQUFDO0lBQzNDQyxVQUFVWixpREFBU0E7SUFDbkJhLFFBQVFmLDhDQUFNQTtJQUNkZ0IsYUFBYWYsb0RBQVlBO0lBQ3pCZ0IsYUFBYWIsb0RBQVlBO0lBQ3pCYyxXQUFXO1FBQ1RDLFVBQVVaLDBEQUFrQkE7UUFDNUJhLE9BQU9kLHVEQUFlQTtJQUN4QjtBQUNGO0FBQ0EsTUFBTWUsK0JBQStCLENBQUNDLFVBQVl6QixpRUFBaUJBLENBQUM7UUFBRSxHQUFHVyx5QkFBeUI7UUFBRSxHQUFHYyxPQUFPO0lBQUM7QUFHN0csQ0FDRiw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NyZWF0ZUNsZXJrQ2xpZW50LmpzP2QxYzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUNsZXJrQ2xpZW50IH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kXCI7XG5pbXBvcnQge1xuICBBUElfVVJMLFxuICBBUElfVkVSU0lPTixcbiAgRE9NQUlOLFxuICBJU19TQVRFTExJVEUsXG4gIFBST1hZX1VSTCxcbiAgUFVCTElTSEFCTEVfS0VZLFxuICBTREtfTUVUQURBVEEsXG4gIFNFQ1JFVF9LRVksXG4gIFRFTEVNRVRSWV9ERUJVRyxcbiAgVEVMRU1FVFJZX0RJU0FCTEVEXG59IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuY29uc3QgY2xlcmtDbGllbnREZWZhdWx0T3B0aW9ucyA9IHtcbiAgc2VjcmV0S2V5OiBTRUNSRVRfS0VZLFxuICBwdWJsaXNoYWJsZUtleTogUFVCTElTSEFCTEVfS0VZLFxuICBhcGlVcmw6IEFQSV9VUkwsXG4gIGFwaVZlcnNpb246IEFQSV9WRVJTSU9OLFxuICB1c2VyQWdlbnQ6IGAke1wiQGNsZXJrL25leHRqc1wifUAke1wiNi4xMS4zXCJ9YCxcbiAgcHJveHlVcmw6IFBST1hZX1VSTCxcbiAgZG9tYWluOiBET01BSU4sXG4gIGlzU2F0ZWxsaXRlOiBJU19TQVRFTExJVEUsXG4gIHNka01ldGFkYXRhOiBTREtfTUVUQURBVEEsXG4gIHRlbGVtZXRyeToge1xuICAgIGRpc2FibGVkOiBURUxFTUVUUllfRElTQUJMRUQsXG4gICAgZGVidWc6IFRFTEVNRVRSWV9ERUJVR1xuICB9XG59O1xuY29uc3QgY3JlYXRlQ2xlcmtDbGllbnRXaXRoT3B0aW9ucyA9IChvcHRpb25zKSA9PiBjcmVhdGVDbGVya0NsaWVudCh7IC4uLmNsZXJrQ2xpZW50RGVmYXVsdE9wdGlvbnMsIC4uLm9wdGlvbnMgfSk7XG5leHBvcnQge1xuICBjcmVhdGVDbGVya0NsaWVudFdpdGhPcHRpb25zXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlQ2xlcmtDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUNsZXJrQ2xpZW50IiwiQVBJX1VSTCIsIkFQSV9WRVJTSU9OIiwiRE9NQUlOIiwiSVNfU0FURUxMSVRFIiwiUFJPWFlfVVJMIiwiUFVCTElTSEFCTEVfS0VZIiwiU0RLX01FVEFEQVRBIiwiU0VDUkVUX0tFWSIsIlRFTEVNRVRSWV9ERUJVRyIsIlRFTEVNRVRSWV9ESVNBQkxFRCIsImNsZXJrQ2xpZW50RGVmYXVsdE9wdGlvbnMiLCJzZWNyZXRLZXkiLCJwdWJsaXNoYWJsZUtleSIsImFwaVVybCIsImFwaVZlcnNpb24iLCJ1c2VyQWdlbnQiLCJwcm94eVVybCIsImRvbWFpbiIsImlzU2F0ZWxsaXRlIiwic2RrTWV0YWRhdGEiLCJ0ZWxlbWV0cnkiLCJkaXNhYmxlZCIsImRlYnVnIiwiY3JlYXRlQ2xlcmtDbGllbnRXaXRoT3B0aW9ucyIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createClerkClient.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncGetAuth: () => (/* binding */ createAsyncGetAuth),\n/* harmony export */   createSyncGetAuth: () => (/* binding */ createSyncGetAuth),\n/* harmony export */   getAuth: () => (/* binding */ getAuth)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/underscore */ \"(middleware)/./node_modules/@clerk/shared/dist/underscore.mjs\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _utils_sdk_versions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/sdk-versions */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/sdk-versions.js\");\n/* harmony import */ var _data_getAuthDataFromRequest__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data/getAuthDataFromRequest */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/data/getAuthDataFromRequest.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _headers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./headers-utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\n\n\n\n\nconst createAsyncGetAuth = ({ debugLoggerName, noAuthStatusMessage })=>(0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_2__.withLogger)(debugLoggerName, (logger)=>{\n        return async (req, opts)=>{\n            if ((0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)((0,_headers_utils__WEBPACK_IMPORTED_MODULE_3__.getHeader)(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug))) {\n                logger.enable();\n            }\n            if (!(0,_headers_utils__WEBPACK_IMPORTED_MODULE_3__.detectClerkMiddleware)(req)) {\n                if (_utils_sdk_versions__WEBPACK_IMPORTED_MODULE_4__.isNextWithUnstableServerActions) {\n                    (0,_utils__WEBPACK_IMPORTED_MODULE_5__.assertAuthStatus)(req, noAuthStatusMessage);\n                }\n                const missConfiguredMiddlewareLocation = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./fs/middleware-location.js */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/fs/middleware-location.js\")).then((m)=>m.suggestMiddlewareLocation()).catch(()=>void 0);\n                if (missConfiguredMiddlewareLocation) {\n                    throw new Error(missConfiguredMiddlewareLocation);\n                }\n                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.assertAuthStatus)(req, noAuthStatusMessage);\n            }\n            return (0,_data_getAuthDataFromRequest__WEBPACK_IMPORTED_MODULE_6__.getAuthDataFromRequest)(req, {\n                ...opts,\n                logger\n            });\n        };\n    });\nconst createSyncGetAuth = ({ debugLoggerName, noAuthStatusMessage })=>(0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_2__.withLogger)(debugLoggerName, (logger)=>{\n        return (req, opts)=>{\n            if ((0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)((0,_headers_utils__WEBPACK_IMPORTED_MODULE_3__.getHeader)(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug))) {\n                logger.enable();\n            }\n            (0,_utils__WEBPACK_IMPORTED_MODULE_5__.assertAuthStatus)(req, noAuthStatusMessage);\n            return (0,_data_getAuthDataFromRequest__WEBPACK_IMPORTED_MODULE_6__.getAuthDataFromRequest)(req, {\n                ...opts,\n                logger\n            });\n        };\n    });\nconst getAuth = createSyncGetAuth({\n    debugLoggerName: \"getAuth()\",\n    noAuthStatusMessage: (0,_errors__WEBPACK_IMPORTED_MODULE_7__.getAuthAuthHeaderMissing)()\n});\n //# sourceMappingURL=createGetAuth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NyZWF0ZUdldEF1dGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBOEI7QUFDc0I7QUFDQTtBQUNGO0FBQ3NCO0FBQ0Q7QUFDbkI7QUFDZTtBQUN4QjtBQUMzQyxNQUFNUyxxQkFBcUIsQ0FBQyxFQUMxQkMsZUFBZSxFQUNmQyxtQkFBbUIsRUFDcEIsR0FBS1QsOERBQVVBLENBQUNRLGlCQUFpQixDQUFDRTtRQUNqQyxPQUFPLE9BQU9DLEtBQUtDO1lBQ2pCLElBQUliLGtFQUFRQSxDQUFDTSx5REFBU0EsQ0FBQ00sS0FBS2IsOERBQVNBLENBQUNlLE9BQU8sQ0FBQ0MsV0FBVyxJQUFJO2dCQUMzREosT0FBT0ssTUFBTTtZQUNmO1lBQ0EsSUFBSSxDQUFDWCxxRUFBcUJBLENBQUNPLE1BQU07Z0JBQy9CLElBQUlWLGdGQUErQkEsRUFBRTtvQkFDbkNLLHdEQUFnQkEsQ0FBQ0ssS0FBS0Y7Z0JBQ3hCO2dCQUNBLE1BQU1PLG1DQUFtQyxNQUFNLDhNQUFxQyxDQUFDQyxJQUFJLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUMseUJBQXlCLElBQUlDLEtBQUssQ0FBQyxJQUFNLEtBQUs7Z0JBQ2pKLElBQUlKLGtDQUFrQztvQkFDcEMsTUFBTSxJQUFJSyxNQUFNTDtnQkFDbEI7Z0JBQ0FWLHdEQUFnQkEsQ0FBQ0ssS0FBS0Y7WUFDeEI7WUFDQSxPQUFPUCxvRkFBc0JBLENBQUNTLEtBQUs7Z0JBQUUsR0FBR0MsSUFBSTtnQkFBRUY7WUFBTztRQUN2RDtJQUNGO0FBQ0EsTUFBTVksb0JBQW9CLENBQUMsRUFDekJkLGVBQWUsRUFDZkMsbUJBQW1CLEVBQ3BCLEdBQUtULDhEQUFVQSxDQUFDUSxpQkFBaUIsQ0FBQ0U7UUFDakMsT0FBTyxDQUFDQyxLQUFLQztZQUNYLElBQUliLGtFQUFRQSxDQUFDTSx5REFBU0EsQ0FBQ00sS0FBS2IsOERBQVNBLENBQUNlLE9BQU8sQ0FBQ0MsV0FBVyxJQUFJO2dCQUMzREosT0FBT0ssTUFBTTtZQUNmO1lBQ0FULHdEQUFnQkEsQ0FBQ0ssS0FBS0Y7WUFDdEIsT0FBT1Asb0ZBQXNCQSxDQUFDUyxLQUFLO2dCQUFFLEdBQUdDLElBQUk7Z0JBQUVGO1lBQU87UUFDdkQ7SUFDRjtBQUNBLE1BQU1hLFVBQVVELGtCQUFrQjtJQUNoQ2QsaUJBQWlCO0lBQ2pCQyxxQkFBcUJOLGlFQUF3QkE7QUFDL0M7QUFLRSxDQUNGLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvY3JlYXRlR2V0QXV0aC5qcz8zOWNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBjb25zdGFudHMgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvaW50ZXJuYWxcIjtcbmltcG9ydCB7IGlzVHJ1dGh5IH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvdW5kZXJzY29yZVwiO1xuaW1wb3J0IHsgd2l0aExvZ2dlciB9IGZyb20gXCIuLi91dGlscy9kZWJ1Z0xvZ2dlclwiO1xuaW1wb3J0IHsgaXNOZXh0V2l0aFVuc3RhYmxlU2VydmVyQWN0aW9ucyB9IGZyb20gXCIuLi91dGlscy9zZGstdmVyc2lvbnNcIjtcbmltcG9ydCB7IGdldEF1dGhEYXRhRnJvbVJlcXVlc3QgfSBmcm9tIFwiLi9kYXRhL2dldEF1dGhEYXRhRnJvbVJlcXVlc3RcIjtcbmltcG9ydCB7IGdldEF1dGhBdXRoSGVhZGVyTWlzc2luZyB9IGZyb20gXCIuL2Vycm9yc1wiO1xuaW1wb3J0IHsgZGV0ZWN0Q2xlcmtNaWRkbGV3YXJlLCBnZXRIZWFkZXIgfSBmcm9tIFwiLi9oZWFkZXJzLXV0aWxzXCI7XG5pbXBvcnQgeyBhc3NlcnRBdXRoU3RhdHVzIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmNvbnN0IGNyZWF0ZUFzeW5jR2V0QXV0aCA9ICh7XG4gIGRlYnVnTG9nZ2VyTmFtZSxcbiAgbm9BdXRoU3RhdHVzTWVzc2FnZVxufSkgPT4gd2l0aExvZ2dlcihkZWJ1Z0xvZ2dlck5hbWUsIChsb2dnZXIpID0+IHtcbiAgcmV0dXJuIGFzeW5jIChyZXEsIG9wdHMpID0+IHtcbiAgICBpZiAoaXNUcnV0aHkoZ2V0SGVhZGVyKHJlcSwgY29uc3RhbnRzLkhlYWRlcnMuRW5hYmxlRGVidWcpKSkge1xuICAgICAgbG9nZ2VyLmVuYWJsZSgpO1xuICAgIH1cbiAgICBpZiAoIWRldGVjdENsZXJrTWlkZGxld2FyZShyZXEpKSB7XG4gICAgICBpZiAoaXNOZXh0V2l0aFVuc3RhYmxlU2VydmVyQWN0aW9ucykge1xuICAgICAgICBhc3NlcnRBdXRoU3RhdHVzKHJlcSwgbm9BdXRoU3RhdHVzTWVzc2FnZSk7XG4gICAgICB9XG4gICAgICBjb25zdCBtaXNzQ29uZmlndXJlZE1pZGRsZXdhcmVMb2NhdGlvbiA9IGF3YWl0IGltcG9ydChcIi4vZnMvbWlkZGxld2FyZS1sb2NhdGlvbi5qc1wiKS50aGVuKChtKSA9PiBtLnN1Z2dlc3RNaWRkbGV3YXJlTG9jYXRpb24oKSkuY2F0Y2goKCkgPT4gdm9pZCAwKTtcbiAgICAgIGlmIChtaXNzQ29uZmlndXJlZE1pZGRsZXdhcmVMb2NhdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWlzc0NvbmZpZ3VyZWRNaWRkbGV3YXJlTG9jYXRpb24pO1xuICAgICAgfVxuICAgICAgYXNzZXJ0QXV0aFN0YXR1cyhyZXEsIG5vQXV0aFN0YXR1c01lc3NhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0QXV0aERhdGFGcm9tUmVxdWVzdChyZXEsIHsgLi4ub3B0cywgbG9nZ2VyIH0pO1xuICB9O1xufSk7XG5jb25zdCBjcmVhdGVTeW5jR2V0QXV0aCA9ICh7XG4gIGRlYnVnTG9nZ2VyTmFtZSxcbiAgbm9BdXRoU3RhdHVzTWVzc2FnZVxufSkgPT4gd2l0aExvZ2dlcihkZWJ1Z0xvZ2dlck5hbWUsIChsb2dnZXIpID0+IHtcbiAgcmV0dXJuIChyZXEsIG9wdHMpID0+IHtcbiAgICBpZiAoaXNUcnV0aHkoZ2V0SGVhZGVyKHJlcSwgY29uc3RhbnRzLkhlYWRlcnMuRW5hYmxlRGVidWcpKSkge1xuICAgICAgbG9nZ2VyLmVuYWJsZSgpO1xuICAgIH1cbiAgICBhc3NlcnRBdXRoU3RhdHVzKHJlcSwgbm9BdXRoU3RhdHVzTWVzc2FnZSk7XG4gICAgcmV0dXJuIGdldEF1dGhEYXRhRnJvbVJlcXVlc3QocmVxLCB7IC4uLm9wdHMsIGxvZ2dlciB9KTtcbiAgfTtcbn0pO1xuY29uc3QgZ2V0QXV0aCA9IGNyZWF0ZVN5bmNHZXRBdXRoKHtcbiAgZGVidWdMb2dnZXJOYW1lOiBcImdldEF1dGgoKVwiLFxuICBub0F1dGhTdGF0dXNNZXNzYWdlOiBnZXRBdXRoQXV0aEhlYWRlck1pc3NpbmcoKVxufSk7XG5leHBvcnQge1xuICBjcmVhdGVBc3luY0dldEF1dGgsXG4gIGNyZWF0ZVN5bmNHZXRBdXRoLFxuICBnZXRBdXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlR2V0QXV0aC5qcy5tYXAiXSwibmFtZXMiOlsiY29uc3RhbnRzIiwiaXNUcnV0aHkiLCJ3aXRoTG9nZ2VyIiwiaXNOZXh0V2l0aFVuc3RhYmxlU2VydmVyQWN0aW9ucyIsImdldEF1dGhEYXRhRnJvbVJlcXVlc3QiLCJnZXRBdXRoQXV0aEhlYWRlck1pc3NpbmciLCJkZXRlY3RDbGVya01pZGRsZXdhcmUiLCJnZXRIZWFkZXIiLCJhc3NlcnRBdXRoU3RhdHVzIiwiY3JlYXRlQXN5bmNHZXRBdXRoIiwiZGVidWdMb2dnZXJOYW1lIiwibm9BdXRoU3RhdHVzTWVzc2FnZSIsImxvZ2dlciIsInJlcSIsIm9wdHMiLCJIZWFkZXJzIiwiRW5hYmxlRGVidWciLCJlbmFibGUiLCJtaXNzQ29uZmlndXJlZE1pZGRsZXdhcmVMb2NhdGlvbiIsInRoZW4iLCJtIiwic3VnZ2VzdE1pZGRsZXdhcmVMb2NhdGlvbiIsImNhdGNoIiwiRXJyb3IiLCJjcmVhdGVTeW5jR2V0QXV0aCIsImdldEF1dGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/data/getAuthDataFromRequest.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/data/getAuthDataFromRequest.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthDataFromRequest: () => (/* binding */ getAuthDataFromRequest)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_backend_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/backend/jwt */ \"(middleware)/./node_modules/@clerk/backend/dist/jwt/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _headers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../headers-utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\n\nfunction getAuthDataFromRequest(req, opts = {}) {\n    var _a, _b, _c;\n    const authStatus = (0,_headers_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthStatus\");\n    const authToken = (0,_headers_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthToken\");\n    const authMessage = (0,_headers_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthMessage\");\n    const authReason = (0,_headers_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthReason\");\n    const authSignature = (0,_headers_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthSignature\");\n    (_a = opts.logger) == null ? void 0 : _a.debug(\"headers\", {\n        authStatus,\n        authMessage,\n        authReason\n    });\n    const encryptedRequestData = (0,_headers_utils__WEBPACK_IMPORTED_MODULE_2__.getHeader)(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRequestData);\n    const decryptedRequestData = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.decryptClerkRequestData)(encryptedRequestData);\n    const options = {\n        secretKey: (opts == null ? void 0 : opts.secretKey) || decryptedRequestData.secretKey || _constants__WEBPACK_IMPORTED_MODULE_4__.SECRET_KEY,\n        publishableKey: decryptedRequestData.publishableKey || _constants__WEBPACK_IMPORTED_MODULE_4__.PUBLISHABLE_KEY,\n        apiUrl: _constants__WEBPACK_IMPORTED_MODULE_4__.API_URL,\n        apiVersion: _constants__WEBPACK_IMPORTED_MODULE_4__.API_VERSION,\n        authStatus,\n        authMessage,\n        authReason\n    };\n    (_b = opts.logger) == null ? void 0 : _b.debug(\"auth options\", options);\n    let authObject;\n    if (!authStatus || authStatus !== _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.SignedIn) {\n        authObject = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject)(options);\n    } else {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.assertTokenSignature)(authToken, options.secretKey, authSignature);\n        const jwt = (0,_clerk_backend_jwt__WEBPACK_IMPORTED_MODULE_1__.decodeJwt)(authToken);\n        (_c = opts.logger) == null ? void 0 : _c.debug(\"jwt\", jwt.raw);\n        authObject = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject)(options, jwt.raw.text, jwt.payload);\n    }\n    return authObject;\n}\n //# sourceMappingURL=getAuthDataFromRequest.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2RhdGEvZ2V0QXV0aERhdGFGcm9tUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUM7QUFDd0U7QUFDMUQ7QUFDa0M7QUFDYjtBQUNLO0FBQ3pFLFNBQVNhLHVCQUF1QkMsR0FBRyxFQUFFQyxPQUFPLENBQUMsQ0FBQztJQUM1QyxJQUFJQyxJQUFJQyxJQUFJQztJQUNaLE1BQU1DLGFBQWFWLHFFQUFxQkEsQ0FBQ0ssS0FBSztJQUM5QyxNQUFNTSxZQUFZWCxxRUFBcUJBLENBQUNLLEtBQUs7SUFDN0MsTUFBTU8sY0FBY1oscUVBQXFCQSxDQUFDSyxLQUFLO0lBQy9DLE1BQU1RLGFBQWFiLHFFQUFxQkEsQ0FBQ0ssS0FBSztJQUM5QyxNQUFNUyxnQkFBZ0JkLHFFQUFxQkEsQ0FBQ0ssS0FBSztJQUNoREUsQ0FBQUEsS0FBS0QsS0FBS1MsTUFBTSxLQUFLLE9BQU8sS0FBSyxJQUFJUixHQUFHUyxLQUFLLENBQUMsV0FBVztRQUFFTjtRQUFZRTtRQUFhQztJQUFXO0lBQ2hHLE1BQU1JLHVCQUF1QmhCLHlEQUFTQSxDQUFDSSxLQUFLYiw4REFBU0EsQ0FBQzBCLE9BQU8sQ0FBQ0MsZ0JBQWdCO0lBQzlFLE1BQU1DLHVCQUF1QmpCLCtEQUF1QkEsQ0FBQ2M7SUFDckQsTUFBTUksVUFBVTtRQUNkQyxXQUFXLENBQUNoQixRQUFRLE9BQU8sS0FBSyxJQUFJQSxLQUFLZ0IsU0FBUyxLQUFLRixxQkFBcUJFLFNBQVMsSUFBSXZCLGtEQUFVQTtRQUNuR3dCLGdCQUFnQkgscUJBQXFCRyxjQUFjLElBQUl6Qix1REFBZUE7UUFDdEUwQixRQUFRNUIsK0NBQU9BO1FBQ2Y2QixZQUFZNUIsbURBQVdBO1FBQ3ZCYTtRQUNBRTtRQUNBQztJQUNGO0lBQ0NMLENBQUFBLEtBQUtGLEtBQUtTLE1BQU0sS0FBSyxPQUFPLEtBQUssSUFBSVAsR0FBR1EsS0FBSyxDQUFDLGdCQUFnQks7SUFDL0QsSUFBSUs7SUFDSixJQUFJLENBQUNoQixjQUFjQSxlQUFlbkIsK0RBQVVBLENBQUNvQyxRQUFRLEVBQUU7UUFDckRELGFBQWFoQyw0RUFBbUJBLENBQUMyQjtJQUNuQyxPQUFPO1FBQ0xuQiw0REFBb0JBLENBQUNTLFdBQVdVLFFBQVFDLFNBQVMsRUFBRVI7UUFDbkQsTUFBTWMsTUFBTWpDLDZEQUFTQSxDQUFDZ0I7UUFDckJGLENBQUFBLEtBQUtILEtBQUtTLE1BQU0sS0FBSyxPQUFPLEtBQUssSUFBSU4sR0FBR08sS0FBSyxDQUFDLE9BQU9ZLElBQUlDLEdBQUc7UUFDN0RILGFBQWFqQywyRUFBa0JBLENBQUM0QixTQUFTTyxJQUFJQyxHQUFHLENBQUNDLElBQUksRUFBRUYsSUFBSUcsT0FBTztJQUNwRTtJQUNBLE9BQU9MO0FBQ1Q7QUFHRSxDQUNGLGtEQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvZGF0YS9nZXRBdXRoRGF0YUZyb21SZXF1ZXN0LmpzP2IxN2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCB7IEF1dGhTdGF0dXMsIGNvbnN0YW50cywgc2lnbmVkSW5BdXRoT2JqZWN0LCBzaWduZWRPdXRBdXRoT2JqZWN0IH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kL2ludGVybmFsXCI7XG5pbXBvcnQgeyBkZWNvZGVKd3QgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvand0XCI7XG5pbXBvcnQgeyBBUElfVVJMLCBBUElfVkVSU0lPTiwgUFVCTElTSEFCTEVfS0VZLCBTRUNSRVRfS0VZIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZ2V0QXV0aEtleUZyb21SZXF1ZXN0LCBnZXRIZWFkZXIgfSBmcm9tIFwiLi4vaGVhZGVycy11dGlsc1wiO1xuaW1wb3J0IHsgYXNzZXJ0VG9rZW5TaWduYXR1cmUsIGRlY3J5cHRDbGVya1JlcXVlc3REYXRhIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5mdW5jdGlvbiBnZXRBdXRoRGF0YUZyb21SZXF1ZXN0KHJlcSwgb3B0cyA9IHt9KSB7XG4gIHZhciBfYSwgX2IsIF9jO1xuICBjb25zdCBhdXRoU3RhdHVzID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoU3RhdHVzXCIpO1xuICBjb25zdCBhdXRoVG9rZW4gPSBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBcIkF1dGhUb2tlblwiKTtcbiAgY29uc3QgYXV0aE1lc3NhZ2UgPSBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBcIkF1dGhNZXNzYWdlXCIpO1xuICBjb25zdCBhdXRoUmVhc29uID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoUmVhc29uXCIpO1xuICBjb25zdCBhdXRoU2lnbmF0dXJlID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoU2lnbmF0dXJlXCIpO1xuICAoX2EgPSBvcHRzLmxvZ2dlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmRlYnVnKFwiaGVhZGVyc1wiLCB7IGF1dGhTdGF0dXMsIGF1dGhNZXNzYWdlLCBhdXRoUmVhc29uIH0pO1xuICBjb25zdCBlbmNyeXB0ZWRSZXF1ZXN0RGF0YSA9IGdldEhlYWRlcihyZXEsIGNvbnN0YW50cy5IZWFkZXJzLkNsZXJrUmVxdWVzdERhdGEpO1xuICBjb25zdCBkZWNyeXB0ZWRSZXF1ZXN0RGF0YSA9IGRlY3J5cHRDbGVya1JlcXVlc3REYXRhKGVuY3J5cHRlZFJlcXVlc3REYXRhKTtcbiAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICBzZWNyZXRLZXk6IChvcHRzID09IG51bGwgPyB2b2lkIDAgOiBvcHRzLnNlY3JldEtleSkgfHwgZGVjcnlwdGVkUmVxdWVzdERhdGEuc2VjcmV0S2V5IHx8IFNFQ1JFVF9LRVksXG4gICAgcHVibGlzaGFibGVLZXk6IGRlY3J5cHRlZFJlcXVlc3REYXRhLnB1Ymxpc2hhYmxlS2V5IHx8IFBVQkxJU0hBQkxFX0tFWSxcbiAgICBhcGlVcmw6IEFQSV9VUkwsXG4gICAgYXBpVmVyc2lvbjogQVBJX1ZFUlNJT04sXG4gICAgYXV0aFN0YXR1cyxcbiAgICBhdXRoTWVzc2FnZSxcbiAgICBhdXRoUmVhc29uXG4gIH07XG4gIChfYiA9IG9wdHMubG9nZ2VyKSA9PSBudWxsID8gdm9pZCAwIDogX2IuZGVidWcoXCJhdXRoIG9wdGlvbnNcIiwgb3B0aW9ucyk7XG4gIGxldCBhdXRoT2JqZWN0O1xuICBpZiAoIWF1dGhTdGF0dXMgfHwgYXV0aFN0YXR1cyAhPT0gQXV0aFN0YXR1cy5TaWduZWRJbikge1xuICAgIGF1dGhPYmplY3QgPSBzaWduZWRPdXRBdXRoT2JqZWN0KG9wdGlvbnMpO1xuICB9IGVsc2Uge1xuICAgIGFzc2VydFRva2VuU2lnbmF0dXJlKGF1dGhUb2tlbiwgb3B0aW9ucy5zZWNyZXRLZXksIGF1dGhTaWduYXR1cmUpO1xuICAgIGNvbnN0IGp3dCA9IGRlY29kZUp3dChhdXRoVG9rZW4pO1xuICAgIChfYyA9IG9wdHMubG9nZ2VyKSA9PSBudWxsID8gdm9pZCAwIDogX2MuZGVidWcoXCJqd3RcIiwgand0LnJhdyk7XG4gICAgYXV0aE9iamVjdCA9IHNpZ25lZEluQXV0aE9iamVjdChvcHRpb25zLCBqd3QucmF3LnRleHQsIGp3dC5wYXlsb2FkKTtcbiAgfVxuICByZXR1cm4gYXV0aE9iamVjdDtcbn1cbmV4cG9ydCB7XG4gIGdldEF1dGhEYXRhRnJvbVJlcXVlc3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBdXRoRGF0YUZyb21SZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6WyJBdXRoU3RhdHVzIiwiY29uc3RhbnRzIiwic2lnbmVkSW5BdXRoT2JqZWN0Iiwic2lnbmVkT3V0QXV0aE9iamVjdCIsImRlY29kZUp3dCIsIkFQSV9VUkwiLCJBUElfVkVSU0lPTiIsIlBVQkxJU0hBQkxFX0tFWSIsIlNFQ1JFVF9LRVkiLCJnZXRBdXRoS2V5RnJvbVJlcXVlc3QiLCJnZXRIZWFkZXIiLCJhc3NlcnRUb2tlblNpZ25hdHVyZSIsImRlY3J5cHRDbGVya1JlcXVlc3REYXRhIiwiZ2V0QXV0aERhdGFGcm9tUmVxdWVzdCIsInJlcSIsIm9wdHMiLCJfYSIsIl9iIiwiX2MiLCJhdXRoU3RhdHVzIiwiYXV0aFRva2VuIiwiYXV0aE1lc3NhZ2UiLCJhdXRoUmVhc29uIiwiYXV0aFNpZ25hdHVyZSIsImxvZ2dlciIsImRlYnVnIiwiZW5jcnlwdGVkUmVxdWVzdERhdGEiLCJIZWFkZXJzIiwiQ2xlcmtSZXF1ZXN0RGF0YSIsImRlY3J5cHRlZFJlcXVlc3REYXRhIiwib3B0aW9ucyIsInNlY3JldEtleSIsInB1Ymxpc2hhYmxlS2V5IiwiYXBpVXJsIiwiYXBpVmVyc2lvbiIsImF1dGhPYmplY3QiLCJTaWduZWRJbiIsImp3dCIsInJhdyIsInRleHQiLCJwYXlsb2FkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/data/getAuthDataFromRequest.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js":
/*!********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorThrower: () => (/* binding */ errorThrower)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/error */ \"(middleware)/./node_modules/@clerk/shared/dist/error.mjs\");\n\n\nconst errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower)({\n    packageName: \"@clerk/nextjs\"\n});\n //# sourceMappingURL=errorThrower.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2Vycm9yVGhyb3dlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QjtBQUMwQjtBQUN4RCxNQUFNQyxlQUFlRCxzRUFBaUJBLENBQUM7SUFBRUUsYUFBYTtBQUFnQjtBQUdwRSxDQUNGLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvZXJyb3JUaHJvd2VyLmpzPzU5OTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCB7IGJ1aWxkRXJyb3JUaHJvd2VyIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvZXJyb3JcIjtcbmNvbnN0IGVycm9yVGhyb3dlciA9IGJ1aWxkRXJyb3JUaHJvd2VyKHsgcGFja2FnZU5hbWU6IFwiQGNsZXJrL25leHRqc1wiIH0pO1xuZXhwb3J0IHtcbiAgZXJyb3JUaHJvd2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JUaHJvd2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJidWlsZEVycm9yVGhyb3dlciIsImVycm9yVGhyb3dlciIsInBhY2thZ2VOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/errors.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAuthHeaderMissing: () => (/* binding */ authAuthHeaderMissing),\n/* harmony export */   authSignatureInvalid: () => (/* binding */ authSignatureInvalid),\n/* harmony export */   encryptionKeyInvalid: () => (/* binding */ encryptionKeyInvalid),\n/* harmony export */   encryptionKeyInvalidDev: () => (/* binding */ encryptionKeyInvalidDev),\n/* harmony export */   getAuthAuthHeaderMissing: () => (/* binding */ getAuthAuthHeaderMissing),\n/* harmony export */   missingDomainAndProxy: () => (/* binding */ missingDomainAndProxy),\n/* harmony export */   missingSignInUrlInDev: () => (/* binding */ missingSignInUrlInDev)\n/* harmony export */ });\n\nconst missingDomainAndProxy = `\nMissing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl.\n\n1) With middleware\n   e.g. export default clerkMiddleware({domain:'YOUR_DOMAIN',isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_DOMAIN='YOUR_DOMAIN'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'\n   `;\nconst missingSignInUrlInDev = `\nInvalid signInUrl. A satellite application requires a signInUrl for development instances.\nCheck if signInUrl is missing from your configuration or if it is not an absolute URL\n\n1) With middleware\n   e.g. export default clerkMiddleware({signInUrl:'SOME_URL', isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_SIGN_IN_URL='SOME_URL'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'`;\nconst getAuthAuthHeaderMissing = ()=>authAuthHeaderMissing(\"getAuth\");\nconst authAuthHeaderMissing = (helperName = \"auth\", prefixSteps)=>`Clerk: ${helperName}() was called but Clerk can't detect usage of clerkMiddleware(). Please ensure the following:\n- ${prefixSteps ? [\n        ...prefixSteps,\n        \"\"\n    ].join(\"\\n- \") : \" \"}clerkMiddleware() is used in your Next.js Middleware.\n- Your Middleware matcher is configured to match this route or page.\n- If you are using the src directory, make sure the Middleware file is inside of it.\n\nFor more details, see https://clerk.com/docs/quickstarts/nextjs\n`;\nconst authSignatureInvalid = `Clerk: Unable to verify request, this usually means the Clerk middleware did not run. Ensure Clerk's middleware is properly integrated and matches the current route. For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware. (code=auth_signature_invalid)`;\nconst encryptionKeyInvalid = `Clerk: Unable to decrypt request data, this usually means the encryption key is invalid. Ensure the encryption key is properly set. For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys. (code=encryption_key_invalid)`;\nconst encryptionKeyInvalidDev = `Clerk: Unable to decrypt request data.\n\nRefresh the page if your .env file was just updated. If the issue persists, ensure the encryption key is valid and properly set.\n\nFor more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys. (code=encryption_key_invalid)`;\n //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThCO0FBQzlCLE1BQU1BLHdCQUF3QixDQUFDOzs7Ozs7OztHQVE1QixDQUFDO0FBQ0osTUFBTUMsd0JBQXdCLENBQUM7Ozs7Ozs7O3dDQVFTLENBQUM7QUFDekMsTUFBTUMsMkJBQTJCLElBQU1DLHNCQUFzQjtBQUM3RCxNQUFNQSx3QkFBd0IsQ0FBQ0MsYUFBYSxNQUFNLEVBQUVDLGNBQWdCLENBQUMsT0FBTyxFQUFFRCxXQUFXO0VBQ3ZGLEVBQUVDLGNBQWM7V0FBSUE7UUFBYTtLQUFHLENBQUNDLElBQUksQ0FBQyxVQUFVLElBQUk7Ozs7O0FBSzFELENBQUM7QUFDRCxNQUFNQyx1QkFBdUIsQ0FBQyx5UkFBeVIsQ0FBQztBQUN4VCxNQUFNQyx1QkFBdUIsQ0FBQyxvUUFBb1EsQ0FBQztBQUNuUyxNQUFNQywwQkFBMEIsQ0FBQzs7OztnSUFJK0YsQ0FBQztBQVMvSCxDQUNGLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvZXJyb3JzLmpzPzc5MjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmNvbnN0IG1pc3NpbmdEb21haW5BbmRQcm94eSA9IGBcbk1pc3NpbmcgZG9tYWluIGFuZCBwcm94eVVybC4gQSBzYXRlbGxpdGUgYXBwbGljYXRpb24gbmVlZHMgdG8gc3BlY2lmeSBhIGRvbWFpbiBvciBhIHByb3h5VXJsLlxuXG4xKSBXaXRoIG1pZGRsZXdhcmVcbiAgIGUuZy4gZXhwb3J0IGRlZmF1bHQgY2xlcmtNaWRkbGV3YXJlKHtkb21haW46J1lPVVJfRE9NQUlOJyxpc1NhdGVsbGl0ZTp0cnVlfSk7XG4yKSBXaXRoIGVudmlyb25tZW50IHZhcmlhYmxlcyBlLmcuXG4gICBORVhUX1BVQkxJQ19DTEVSS19ET01BSU49J1lPVVJfRE9NQUlOJ1xuICAgTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFPSd0cnVlJ1xuICAgYDtcbmNvbnN0IG1pc3NpbmdTaWduSW5VcmxJbkRldiA9IGBcbkludmFsaWQgc2lnbkluVXJsLiBBIHNhdGVsbGl0ZSBhcHBsaWNhdGlvbiByZXF1aXJlcyBhIHNpZ25JblVybCBmb3IgZGV2ZWxvcG1lbnQgaW5zdGFuY2VzLlxuQ2hlY2sgaWYgc2lnbkluVXJsIGlzIG1pc3NpbmcgZnJvbSB5b3VyIGNvbmZpZ3VyYXRpb24gb3IgaWYgaXQgaXMgbm90IGFuIGFic29sdXRlIFVSTFxuXG4xKSBXaXRoIG1pZGRsZXdhcmVcbiAgIGUuZy4gZXhwb3J0IGRlZmF1bHQgY2xlcmtNaWRkbGV3YXJlKHtzaWduSW5Vcmw6J1NPTUVfVVJMJywgaXNTYXRlbGxpdGU6dHJ1ZX0pO1xuMikgV2l0aCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZS5nLlxuICAgTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9JTl9VUkw9J1NPTUVfVVJMJ1xuICAgTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFPSd0cnVlJ2A7XG5jb25zdCBnZXRBdXRoQXV0aEhlYWRlck1pc3NpbmcgPSAoKSA9PiBhdXRoQXV0aEhlYWRlck1pc3NpbmcoXCJnZXRBdXRoXCIpO1xuY29uc3QgYXV0aEF1dGhIZWFkZXJNaXNzaW5nID0gKGhlbHBlck5hbWUgPSBcImF1dGhcIiwgcHJlZml4U3RlcHMpID0+IGBDbGVyazogJHtoZWxwZXJOYW1lfSgpIHdhcyBjYWxsZWQgYnV0IENsZXJrIGNhbid0IGRldGVjdCB1c2FnZSBvZiBjbGVya01pZGRsZXdhcmUoKS4gUGxlYXNlIGVuc3VyZSB0aGUgZm9sbG93aW5nOlxuLSAke3ByZWZpeFN0ZXBzID8gWy4uLnByZWZpeFN0ZXBzLCBcIlwiXS5qb2luKFwiXFxuLSBcIikgOiBcIiBcIn1jbGVya01pZGRsZXdhcmUoKSBpcyB1c2VkIGluIHlvdXIgTmV4dC5qcyBNaWRkbGV3YXJlLlxuLSBZb3VyIE1pZGRsZXdhcmUgbWF0Y2hlciBpcyBjb25maWd1cmVkIHRvIG1hdGNoIHRoaXMgcm91dGUgb3IgcGFnZS5cbi0gSWYgeW91IGFyZSB1c2luZyB0aGUgc3JjIGRpcmVjdG9yeSwgbWFrZSBzdXJlIHRoZSBNaWRkbGV3YXJlIGZpbGUgaXMgaW5zaWRlIG9mIGl0LlxuXG5Gb3IgbW9yZSBkZXRhaWxzLCBzZWUgaHR0cHM6Ly9jbGVyay5jb20vZG9jcy9xdWlja3N0YXJ0cy9uZXh0anNcbmA7XG5jb25zdCBhdXRoU2lnbmF0dXJlSW52YWxpZCA9IGBDbGVyazogVW5hYmxlIHRvIHZlcmlmeSByZXF1ZXN0LCB0aGlzIHVzdWFsbHkgbWVhbnMgdGhlIENsZXJrIG1pZGRsZXdhcmUgZGlkIG5vdCBydW4uIEVuc3VyZSBDbGVyaydzIG1pZGRsZXdhcmUgaXMgcHJvcGVybHkgaW50ZWdyYXRlZCBhbmQgbWF0Y2hlcyB0aGUgY3VycmVudCByb3V0ZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZTogaHR0cHM6Ly9jbGVyay5jb20vZG9jcy9yZWZlcmVuY2VzL25leHRqcy9jbGVyay1taWRkbGV3YXJlLiAoY29kZT1hdXRoX3NpZ25hdHVyZV9pbnZhbGlkKWA7XG5jb25zdCBlbmNyeXB0aW9uS2V5SW52YWxpZCA9IGBDbGVyazogVW5hYmxlIHRvIGRlY3J5cHQgcmVxdWVzdCBkYXRhLCB0aGlzIHVzdWFsbHkgbWVhbnMgdGhlIGVuY3J5cHRpb24ga2V5IGlzIGludmFsaWQuIEVuc3VyZSB0aGUgZW5jcnlwdGlvbiBrZXkgaXMgcHJvcGVybHkgc2V0LiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlOiBodHRwczovL2NsZXJrLmNvbS9kb2NzL3JlZmVyZW5jZXMvbmV4dGpzL2NsZXJrLW1pZGRsZXdhcmUjZHluYW1pYy1rZXlzLiAoY29kZT1lbmNyeXB0aW9uX2tleV9pbnZhbGlkKWA7XG5jb25zdCBlbmNyeXB0aW9uS2V5SW52YWxpZERldiA9IGBDbGVyazogVW5hYmxlIHRvIGRlY3J5cHQgcmVxdWVzdCBkYXRhLlxuXG5SZWZyZXNoIHRoZSBwYWdlIGlmIHlvdXIgLmVudiBmaWxlIHdhcyBqdXN0IHVwZGF0ZWQuIElmIHRoZSBpc3N1ZSBwZXJzaXN0cywgZW5zdXJlIHRoZSBlbmNyeXB0aW9uIGtleSBpcyB2YWxpZCBhbmQgcHJvcGVybHkgc2V0LlxuXG5Gb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlOiBodHRwczovL2NsZXJrLmNvbS9kb2NzL3JlZmVyZW5jZXMvbmV4dGpzL2NsZXJrLW1pZGRsZXdhcmUjZHluYW1pYy1rZXlzLiAoY29kZT1lbmNyeXB0aW9uX2tleV9pbnZhbGlkKWA7XG5leHBvcnQge1xuICBhdXRoQXV0aEhlYWRlck1pc3NpbmcsXG4gIGF1dGhTaWduYXR1cmVJbnZhbGlkLFxuICBlbmNyeXB0aW9uS2V5SW52YWxpZCxcbiAgZW5jcnlwdGlvbktleUludmFsaWREZXYsXG4gIGdldEF1dGhBdXRoSGVhZGVyTWlzc2luZyxcbiAgbWlzc2luZ0RvbWFpbkFuZFByb3h5LFxuICBtaXNzaW5nU2lnbkluVXJsSW5EZXZcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbIm1pc3NpbmdEb21haW5BbmRQcm94eSIsIm1pc3NpbmdTaWduSW5VcmxJbkRldiIsImdldEF1dGhBdXRoSGVhZGVyTWlzc2luZyIsImF1dGhBdXRoSGVhZGVyTWlzc2luZyIsImhlbHBlck5hbWUiLCJwcmVmaXhTdGVwcyIsImpvaW4iLCJhdXRoU2lnbmF0dXJlSW52YWxpZCIsImVuY3J5cHRpb25LZXlJbnZhbGlkIiwiZW5jcnlwdGlvbktleUludmFsaWREZXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/fs/middleware-location.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/fs/middleware-location.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasSrcAppDir: () => (/* binding */ hasSrcAppDir),\n/* harmony export */   suggestMiddlewareLocation: () => (/* binding */ suggestMiddlewareLocation)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/fs/utils.js\");\n\n\nfunction hasSrcAppDir() {\n    const { existsSync } = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.nodeFsOrThrow)();\n    const path = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.nodePathOrThrow)();\n    const cwd = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.nodeCwdOrThrow)();\n    const projectWithAppSrc = path.join(cwd(), \"src\", \"app\");\n    return !!existsSync(projectWithAppSrc);\n}\nfunction suggestMiddlewareLocation() {\n    const fileExtensions = [\n        \"ts\",\n        \"js\"\n    ];\n    const suggestionMessage = (extension, to, from)=>`Clerk: clerkMiddleware() was not run, your middleware file might be misplaced. Move your middleware file to ./${to}middleware.${extension}. Currently located at ./${from}middleware.${extension}`;\n    const { existsSync } = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.nodeFsOrThrow)();\n    const path = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.nodePathOrThrow)();\n    const cwd = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.nodeCwdOrThrow)();\n    const projectWithAppSrcPath = path.join(cwd(), \"src\", \"app\");\n    const projectWithAppPath = path.join(cwd(), \"app\");\n    const checkMiddlewareLocation = (basePath, to, from)=>{\n        for (const fileExtension of fileExtensions){\n            if (existsSync(path.join(basePath, `middleware.${fileExtension}`))) {\n                return suggestionMessage(fileExtension, to, from);\n            }\n        }\n        return void 0;\n    };\n    if (existsSync(projectWithAppSrcPath)) {\n        return checkMiddlewareLocation(projectWithAppSrcPath, \"src/\", \"src/app/\") || checkMiddlewareLocation(cwd(), \"src/\", \"\");\n    }\n    if (existsSync(projectWithAppPath)) {\n        return checkMiddlewareLocation(projectWithAppPath, \"\", \"app/\");\n    }\n    return void 0;\n}\n //# sourceMappingURL=middleware-location.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2ZzL21pZGRsZXdhcmUtbG9jYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ3dDO0FBQ3pFLFNBQVNHO0lBQ1AsTUFBTSxFQUFFQyxVQUFVLEVBQUUsR0FBR0gscURBQWFBO0lBQ3BDLE1BQU1JLE9BQU9ILHVEQUFlQTtJQUM1QixNQUFNSSxNQUFNTixzREFBY0E7SUFDMUIsTUFBTU8sb0JBQW9CRixLQUFLRyxJQUFJLENBQUNGLE9BQU8sT0FBTztJQUNsRCxPQUFPLENBQUMsQ0FBQ0YsV0FBV0c7QUFDdEI7QUFDQSxTQUFTRTtJQUNQLE1BQU1DLGlCQUFpQjtRQUFDO1FBQU07S0FBSztJQUNuQyxNQUFNQyxvQkFBb0IsQ0FBQ0MsV0FBV0MsSUFBSUMsT0FBUyxDQUFDLDhHQUE4RyxFQUFFRCxHQUFHLFdBQVcsRUFBRUQsVUFBVSx5QkFBeUIsRUFBRUUsS0FBSyxXQUFXLEVBQUVGLFVBQVUsQ0FBQztJQUN0UCxNQUFNLEVBQUVSLFVBQVUsRUFBRSxHQUFHSCxxREFBYUE7SUFDcEMsTUFBTUksT0FBT0gsdURBQWVBO0lBQzVCLE1BQU1JLE1BQU1OLHNEQUFjQTtJQUMxQixNQUFNZSx3QkFBd0JWLEtBQUtHLElBQUksQ0FBQ0YsT0FBTyxPQUFPO0lBQ3RELE1BQU1VLHFCQUFxQlgsS0FBS0csSUFBSSxDQUFDRixPQUFPO0lBQzVDLE1BQU1XLDBCQUEwQixDQUFDQyxVQUFVTCxJQUFJQztRQUM3QyxLQUFLLE1BQU1LLGlCQUFpQlQsZUFBZ0I7WUFDMUMsSUFBSU4sV0FBV0MsS0FBS0csSUFBSSxDQUFDVSxVQUFVLENBQUMsV0FBVyxFQUFFQyxjQUFjLENBQUMsSUFBSTtnQkFDbEUsT0FBT1Isa0JBQWtCUSxlQUFlTixJQUFJQztZQUM5QztRQUNGO1FBQ0EsT0FBTyxLQUFLO0lBQ2Q7SUFDQSxJQUFJVixXQUFXVyx3QkFBd0I7UUFDckMsT0FBT0Usd0JBQXdCRix1QkFBdUIsUUFBUSxlQUFlRSx3QkFBd0JYLE9BQU8sUUFBUTtJQUN0SDtJQUNBLElBQUlGLFdBQVdZLHFCQUFxQjtRQUNsQyxPQUFPQyx3QkFBd0JELG9CQUFvQixJQUFJO0lBQ3pEO0lBQ0EsT0FBTyxLQUFLO0FBQ2Q7QUFJRSxDQUNGLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvZnMvbWlkZGxld2FyZS1sb2NhdGlvbi5qcz8xMzg0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uLy4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBub2RlQ3dkT3JUaHJvdywgbm9kZUZzT3JUaHJvdywgbm9kZVBhdGhPclRocm93IH0gZnJvbSBcIi4vdXRpbHNcIjtcbmZ1bmN0aW9uIGhhc1NyY0FwcERpcigpIHtcbiAgY29uc3QgeyBleGlzdHNTeW5jIH0gPSBub2RlRnNPclRocm93KCk7XG4gIGNvbnN0IHBhdGggPSBub2RlUGF0aE9yVGhyb3coKTtcbiAgY29uc3QgY3dkID0gbm9kZUN3ZE9yVGhyb3coKTtcbiAgY29uc3QgcHJvamVjdFdpdGhBcHBTcmMgPSBwYXRoLmpvaW4oY3dkKCksIFwic3JjXCIsIFwiYXBwXCIpO1xuICByZXR1cm4gISFleGlzdHNTeW5jKHByb2plY3RXaXRoQXBwU3JjKTtcbn1cbmZ1bmN0aW9uIHN1Z2dlc3RNaWRkbGV3YXJlTG9jYXRpb24oKSB7XG4gIGNvbnN0IGZpbGVFeHRlbnNpb25zID0gW1widHNcIiwgXCJqc1wiXTtcbiAgY29uc3Qgc3VnZ2VzdGlvbk1lc3NhZ2UgPSAoZXh0ZW5zaW9uLCB0bywgZnJvbSkgPT4gYENsZXJrOiBjbGVya01pZGRsZXdhcmUoKSB3YXMgbm90IHJ1biwgeW91ciBtaWRkbGV3YXJlIGZpbGUgbWlnaHQgYmUgbWlzcGxhY2VkLiBNb3ZlIHlvdXIgbWlkZGxld2FyZSBmaWxlIHRvIC4vJHt0b31taWRkbGV3YXJlLiR7ZXh0ZW5zaW9ufS4gQ3VycmVudGx5IGxvY2F0ZWQgYXQgLi8ke2Zyb219bWlkZGxld2FyZS4ke2V4dGVuc2lvbn1gO1xuICBjb25zdCB7IGV4aXN0c1N5bmMgfSA9IG5vZGVGc09yVGhyb3coKTtcbiAgY29uc3QgcGF0aCA9IG5vZGVQYXRoT3JUaHJvdygpO1xuICBjb25zdCBjd2QgPSBub2RlQ3dkT3JUaHJvdygpO1xuICBjb25zdCBwcm9qZWN0V2l0aEFwcFNyY1BhdGggPSBwYXRoLmpvaW4oY3dkKCksIFwic3JjXCIsIFwiYXBwXCIpO1xuICBjb25zdCBwcm9qZWN0V2l0aEFwcFBhdGggPSBwYXRoLmpvaW4oY3dkKCksIFwiYXBwXCIpO1xuICBjb25zdCBjaGVja01pZGRsZXdhcmVMb2NhdGlvbiA9IChiYXNlUGF0aCwgdG8sIGZyb20pID0+IHtcbiAgICBmb3IgKGNvbnN0IGZpbGVFeHRlbnNpb24gb2YgZmlsZUV4dGVuc2lvbnMpIHtcbiAgICAgIGlmIChleGlzdHNTeW5jKHBhdGguam9pbihiYXNlUGF0aCwgYG1pZGRsZXdhcmUuJHtmaWxlRXh0ZW5zaW9ufWApKSkge1xuICAgICAgICByZXR1cm4gc3VnZ2VzdGlvbk1lc3NhZ2UoZmlsZUV4dGVuc2lvbiwgdG8sIGZyb20pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdm9pZCAwO1xuICB9O1xuICBpZiAoZXhpc3RzU3luYyhwcm9qZWN0V2l0aEFwcFNyY1BhdGgpKSB7XG4gICAgcmV0dXJuIGNoZWNrTWlkZGxld2FyZUxvY2F0aW9uKHByb2plY3RXaXRoQXBwU3JjUGF0aCwgXCJzcmMvXCIsIFwic3JjL2FwcC9cIikgfHwgY2hlY2tNaWRkbGV3YXJlTG9jYXRpb24oY3dkKCksIFwic3JjL1wiLCBcIlwiKTtcbiAgfVxuICBpZiAoZXhpc3RzU3luYyhwcm9qZWN0V2l0aEFwcFBhdGgpKSB7XG4gICAgcmV0dXJuIGNoZWNrTWlkZGxld2FyZUxvY2F0aW9uKHByb2plY3RXaXRoQXBwUGF0aCwgXCJcIiwgXCJhcHAvXCIpO1xuICB9XG4gIHJldHVybiB2b2lkIDA7XG59XG5leHBvcnQge1xuICBoYXNTcmNBcHBEaXIsXG4gIHN1Z2dlc3RNaWRkbGV3YXJlTG9jYXRpb25cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taWRkbGV3YXJlLWxvY2F0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJub2RlQ3dkT3JUaHJvdyIsIm5vZGVGc09yVGhyb3ciLCJub2RlUGF0aE9yVGhyb3ciLCJoYXNTcmNBcHBEaXIiLCJleGlzdHNTeW5jIiwicGF0aCIsImN3ZCIsInByb2plY3RXaXRoQXBwU3JjIiwiam9pbiIsInN1Z2dlc3RNaWRkbGV3YXJlTG9jYXRpb24iLCJmaWxlRXh0ZW5zaW9ucyIsInN1Z2dlc3Rpb25NZXNzYWdlIiwiZXh0ZW5zaW9uIiwidG8iLCJmcm9tIiwicHJvamVjdFdpdGhBcHBTcmNQYXRoIiwicHJvamVjdFdpdGhBcHBQYXRoIiwiY2hlY2tNaWRkbGV3YXJlTG9jYXRpb24iLCJiYXNlUGF0aCIsImZpbGVFeHRlbnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/fs/middleware-location.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/fs/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/fs/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nodeCwdOrThrow: () => (/* binding */ nodeCwdOrThrow),\n/* harmony export */   nodeFsOrThrow: () => (/* binding */ nodeFsOrThrow),\n/* harmony export */   nodePathOrThrow: () => (/* binding */ nodePathOrThrow)\n/* harmony export */ });\n/* harmony import */ var _safe_node_apis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! #safe-node-apis */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/runtime/browser/safe-node-apis.js\");\n\n\nconst throwMissingFsModule = (module)=>{\n    throw new Error(`Clerk: ${module} is missing. This is an internal error. Please contact Clerk's support.`);\n};\nconst nodeFsOrThrow = ()=>{\n    if (!_safe_node_apis__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fs) {\n        throwMissingFsModule(\"fs\");\n    }\n    return _safe_node_apis__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fs;\n};\nconst nodePathOrThrow = ()=>{\n    if (!_safe_node_apis__WEBPACK_IMPORTED_MODULE_0__[\"default\"].path) {\n        throwMissingFsModule(\"path\");\n    }\n    return _safe_node_apis__WEBPACK_IMPORTED_MODULE_0__[\"default\"].path;\n};\nconst nodeCwdOrThrow = ()=>{\n    if (!_safe_node_apis__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cwd) {\n        throwMissingFsModule(\"cwd\");\n    }\n    return _safe_node_apis__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cwd;\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2ZzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUM7QUFDUztBQUMxQyxNQUFNQyx1QkFBdUIsQ0FBQ0M7SUFDNUIsTUFBTSxJQUFJQyxNQUFNLENBQUMsT0FBTyxFQUFFRCxPQUFPLHVFQUF1RSxDQUFDO0FBQzNHO0FBQ0EsTUFBTUUsZ0JBQWdCO0lBQ3BCLElBQUksQ0FBQ0osMERBQWMsRUFBRTtRQUNuQkMscUJBQXFCO0lBQ3ZCO0lBQ0EsT0FBT0QsMERBQWM7QUFDdkI7QUFDQSxNQUFNTSxrQkFBa0I7SUFDdEIsSUFBSSxDQUFDTiw0REFBZ0IsRUFBRTtRQUNyQkMscUJBQXFCO0lBQ3ZCO0lBQ0EsT0FBT0QsNERBQWdCO0FBQ3pCO0FBQ0EsTUFBTVEsaUJBQWlCO0lBQ3JCLElBQUksQ0FBQ1IsMkRBQWUsRUFBRTtRQUNwQkMscUJBQXFCO0lBQ3ZCO0lBQ0EsT0FBT0QsMkRBQWU7QUFDeEI7QUFLRSxDQUNGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvZnMvdXRpbHMuanM/NDFmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi8uLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xuaW1wb3J0IG5vZGVSdW50aW1lIGZyb20gXCIjc2FmZS1ub2RlLWFwaXNcIjtcbmNvbnN0IHRocm93TWlzc2luZ0ZzTW9kdWxlID0gKG1vZHVsZSkgPT4ge1xuICB0aHJvdyBuZXcgRXJyb3IoYENsZXJrOiAke21vZHVsZX0gaXMgbWlzc2luZy4gVGhpcyBpcyBhbiBpbnRlcm5hbCBlcnJvci4gUGxlYXNlIGNvbnRhY3QgQ2xlcmsncyBzdXBwb3J0LmApO1xufTtcbmNvbnN0IG5vZGVGc09yVGhyb3cgPSAoKSA9PiB7XG4gIGlmICghbm9kZVJ1bnRpbWUuZnMpIHtcbiAgICB0aHJvd01pc3NpbmdGc01vZHVsZShcImZzXCIpO1xuICB9XG4gIHJldHVybiBub2RlUnVudGltZS5mcztcbn07XG5jb25zdCBub2RlUGF0aE9yVGhyb3cgPSAoKSA9PiB7XG4gIGlmICghbm9kZVJ1bnRpbWUucGF0aCkge1xuICAgIHRocm93TWlzc2luZ0ZzTW9kdWxlKFwicGF0aFwiKTtcbiAgfVxuICByZXR1cm4gbm9kZVJ1bnRpbWUucGF0aDtcbn07XG5jb25zdCBub2RlQ3dkT3JUaHJvdyA9ICgpID0+IHtcbiAgaWYgKCFub2RlUnVudGltZS5jd2QpIHtcbiAgICB0aHJvd01pc3NpbmdGc01vZHVsZShcImN3ZFwiKTtcbiAgfVxuICByZXR1cm4gbm9kZVJ1bnRpbWUuY3dkO1xufTtcbmV4cG9ydCB7XG4gIG5vZGVDd2RPclRocm93LFxuICBub2RlRnNPclRocm93LFxuICBub2RlUGF0aE9yVGhyb3dcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsibm9kZVJ1bnRpbWUiLCJ0aHJvd01pc3NpbmdGc01vZHVsZSIsIm1vZHVsZSIsIkVycm9yIiwibm9kZUZzT3JUaHJvdyIsImZzIiwibm9kZVBhdGhPclRocm93IiwicGF0aCIsIm5vZGVDd2RPclRocm93IiwiY3dkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/fs/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectClerkMiddleware: () => (/* binding */ detectClerkMiddleware),\n/* harmony export */   getAuthKeyFromRequest: () => (/* binding */ getAuthKeyFromRequest),\n/* harmony export */   getCustomAttributeFromRequest: () => (/* binding */ getCustomAttributeFromRequest),\n/* harmony export */   getHeader: () => (/* binding */ getHeader),\n/* harmony export */   isNextRequest: () => (/* binding */ isNextRequest),\n/* harmony export */   isRequestWebAPI: () => (/* binding */ isRequestWebAPI)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n\n\nfunction getCustomAttributeFromRequest(req, key) {\n    return key in req ? req[key] : void 0;\n}\nfunction getAuthKeyFromRequest(req, key) {\n    return getCustomAttributeFromRequest(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes[key]) || getHeader(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers[key]);\n}\nfunction getHeader(req, name) {\n    var _a, _b;\n    if (isNextRequest(req) || isRequestWebAPI(req)) {\n        return req.headers.get(name);\n    }\n    return req.headers[name] || req.headers[name.toLowerCase()] || ((_b = (_a = req.socket) == null ? void 0 : _a._httpMessage) == null ? void 0 : _b.getHeader(name));\n}\nfunction detectClerkMiddleware(req) {\n    return Boolean(getAuthKeyFromRequest(req, \"AuthStatus\"));\n}\nfunction isNextRequest(val) {\n    try {\n        const { headers, nextUrl, cookies } = val || {};\n        return typeof (headers == null ? void 0 : headers.get) === \"function\" && typeof (nextUrl == null ? void 0 : nextUrl.searchParams.get) === \"function\" && typeof (cookies == null ? void 0 : cookies.get) === \"function\";\n    } catch  {\n        return false;\n    }\n}\nfunction isRequestWebAPI(val) {\n    try {\n        const { headers } = val || {};\n        return typeof (headers == null ? void 0 : headers.get) === \"function\";\n    } catch  {\n        return false;\n    }\n}\n //# sourceMappingURL=headers-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2hlYWRlcnMtdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QjtBQUNzQjtBQUNwRCxTQUFTQyw4QkFBOEJDLEdBQUcsRUFBRUMsR0FBRztJQUM3QyxPQUFPQSxPQUFPRCxNQUFNQSxHQUFHLENBQUNDLElBQUksR0FBRyxLQUFLO0FBQ3RDO0FBQ0EsU0FBU0Msc0JBQXNCRixHQUFHLEVBQUVDLEdBQUc7SUFDckMsT0FBT0YsOEJBQThCQyxLQUFLRiw4REFBU0EsQ0FBQ0ssVUFBVSxDQUFDRixJQUFJLEtBQUtHLFVBQVVKLEtBQUtGLDhEQUFTQSxDQUFDTyxPQUFPLENBQUNKLElBQUk7QUFDL0c7QUFDQSxTQUFTRyxVQUFVSixHQUFHLEVBQUVNLElBQUk7SUFDMUIsSUFBSUMsSUFBSUM7SUFDUixJQUFJQyxjQUFjVCxRQUFRVSxnQkFBZ0JWLE1BQU07UUFDOUMsT0FBT0EsSUFBSVcsT0FBTyxDQUFDQyxHQUFHLENBQUNOO0lBQ3pCO0lBQ0EsT0FBT04sSUFBSVcsT0FBTyxDQUFDTCxLQUFLLElBQUlOLElBQUlXLE9BQU8sQ0FBQ0wsS0FBS08sV0FBVyxHQUFHLElBQUssRUFBQ0wsS0FBSyxDQUFDRCxLQUFLUCxJQUFJYyxNQUFNLEtBQUssT0FBTyxLQUFLLElBQUlQLEdBQUdRLFlBQVksS0FBSyxPQUFPLEtBQUssSUFBSVAsR0FBR0osU0FBUyxDQUFDRSxLQUFJO0FBQ2xLO0FBQ0EsU0FBU1Usc0JBQXNCaEIsR0FBRztJQUNoQyxPQUFPaUIsUUFBUWYsc0JBQXNCRixLQUFLO0FBQzVDO0FBQ0EsU0FBU1MsY0FBY1MsR0FBRztJQUN4QixJQUFJO1FBQ0YsTUFBTSxFQUFFUCxPQUFPLEVBQUVRLE9BQU8sRUFBRUMsT0FBTyxFQUFFLEdBQUdGLE9BQU8sQ0FBQztRQUM5QyxPQUFPLE9BQVFQLENBQUFBLFdBQVcsT0FBTyxLQUFLLElBQUlBLFFBQVFDLEdBQUcsTUFBTSxjQUFjLE9BQVFPLENBQUFBLFdBQVcsT0FBTyxLQUFLLElBQUlBLFFBQVFFLFlBQVksQ0FBQ1QsR0FBRyxNQUFNLGNBQWMsT0FBUVEsQ0FBQUEsV0FBVyxPQUFPLEtBQUssSUFBSUEsUUFBUVIsR0FBRyxNQUFNO0lBQzlNLEVBQUUsT0FBTTtRQUNOLE9BQU87SUFDVDtBQUNGO0FBQ0EsU0FBU0YsZ0JBQWdCUSxHQUFHO0lBQzFCLElBQUk7UUFDRixNQUFNLEVBQUVQLE9BQU8sRUFBRSxHQUFHTyxPQUFPLENBQUM7UUFDNUIsT0FBTyxPQUFRUCxDQUFBQSxXQUFXLE9BQU8sS0FBSyxJQUFJQSxRQUFRQyxHQUFHLE1BQU07SUFDN0QsRUFBRSxPQUFNO1FBQ04sT0FBTztJQUNUO0FBQ0Y7QUFRRSxDQUNGLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvaGVhZGVycy11dGlscy5qcz81YmIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBjb25zdGFudHMgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvaW50ZXJuYWxcIjtcbmZ1bmN0aW9uIGdldEN1c3RvbUF0dHJpYnV0ZUZyb21SZXF1ZXN0KHJlcSwga2V5KSB7XG4gIHJldHVybiBrZXkgaW4gcmVxID8gcmVxW2tleV0gOiB2b2lkIDA7XG59XG5mdW5jdGlvbiBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBrZXkpIHtcbiAgcmV0dXJuIGdldEN1c3RvbUF0dHJpYnV0ZUZyb21SZXF1ZXN0KHJlcSwgY29uc3RhbnRzLkF0dHJpYnV0ZXNba2V5XSkgfHwgZ2V0SGVhZGVyKHJlcSwgY29uc3RhbnRzLkhlYWRlcnNba2V5XSk7XG59XG5mdW5jdGlvbiBnZXRIZWFkZXIocmVxLCBuYW1lKSB7XG4gIHZhciBfYSwgX2I7XG4gIGlmIChpc05leHRSZXF1ZXN0KHJlcSkgfHwgaXNSZXF1ZXN0V2ViQVBJKHJlcSkpIHtcbiAgICByZXR1cm4gcmVxLmhlYWRlcnMuZ2V0KG5hbWUpO1xuICB9XG4gIHJldHVybiByZXEuaGVhZGVyc1tuYW1lXSB8fCByZXEuaGVhZGVyc1tuYW1lLnRvTG93ZXJDYXNlKCldIHx8ICgoX2IgPSAoX2EgPSByZXEuc29ja2V0KSA9PSBudWxsID8gdm9pZCAwIDogX2EuX2h0dHBNZXNzYWdlKSA9PSBudWxsID8gdm9pZCAwIDogX2IuZ2V0SGVhZGVyKG5hbWUpKTtcbn1cbmZ1bmN0aW9uIGRldGVjdENsZXJrTWlkZGxld2FyZShyZXEpIHtcbiAgcmV0dXJuIEJvb2xlYW4oZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoU3RhdHVzXCIpKTtcbn1cbmZ1bmN0aW9uIGlzTmV4dFJlcXVlc3QodmFsKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBoZWFkZXJzLCBuZXh0VXJsLCBjb29raWVzIH0gPSB2YWwgfHwge307XG4gICAgcmV0dXJuIHR5cGVvZiAoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5nZXQpID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIChuZXh0VXJsID09IG51bGwgPyB2b2lkIDAgOiBuZXh0VXJsLnNlYXJjaFBhcmFtcy5nZXQpID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIChjb29raWVzID09IG51bGwgPyB2b2lkIDAgOiBjb29raWVzLmdldCkgPT09IFwiZnVuY3Rpb25cIjtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBpc1JlcXVlc3RXZWJBUEkodmFsKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBoZWFkZXJzIH0gPSB2YWwgfHwge307XG4gICAgcmV0dXJuIHR5cGVvZiAoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5nZXQpID09PSBcImZ1bmN0aW9uXCI7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgZGV0ZWN0Q2xlcmtNaWRkbGV3YXJlLFxuICBnZXRBdXRoS2V5RnJvbVJlcXVlc3QsXG4gIGdldEN1c3RvbUF0dHJpYnV0ZUZyb21SZXF1ZXN0LFxuICBnZXRIZWFkZXIsXG4gIGlzTmV4dFJlcXVlc3QsXG4gIGlzUmVxdWVzdFdlYkFQSVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsImdldEN1c3RvbUF0dHJpYnV0ZUZyb21SZXF1ZXN0IiwicmVxIiwia2V5IiwiZ2V0QXV0aEtleUZyb21SZXF1ZXN0IiwiQXR0cmlidXRlcyIsImdldEhlYWRlciIsIkhlYWRlcnMiLCJuYW1lIiwiX2EiLCJfYiIsImlzTmV4dFJlcXVlc3QiLCJpc1JlcXVlc3RXZWJBUEkiLCJoZWFkZXJzIiwiZ2V0IiwidG9Mb3dlckNhc2UiLCJzb2NrZXQiLCJfaHR0cE1lc3NhZ2UiLCJkZXRlY3RDbGVya01pZGRsZXdhcmUiLCJCb29sZWFuIiwidmFsIiwibmV4dFVybCIsImNvb2tpZXMiLCJzZWFyY2hQYXJhbXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* reexport safe */ _app_router_server_auth__WEBPACK_IMPORTED_MODULE_2__.auth),\n/* harmony export */   buildClerkProps: () => (/* reexport safe */ _buildClerkProps__WEBPACK_IMPORTED_MODULE_3__.buildClerkProps),\n/* harmony export */   clerkClient: () => (/* reexport safe */ _clerkClient__WEBPACK_IMPORTED_MODULE_4__.clerkClient),\n/* harmony export */   clerkMiddleware: () => (/* reexport safe */ _clerkMiddleware__WEBPACK_IMPORTED_MODULE_5__.clerkMiddleware),\n/* harmony export */   createClerkClient: () => (/* reexport safe */ _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.createClerkClient),\n/* harmony export */   createRouteMatcher: () => (/* reexport safe */ _routeMatcher__WEBPACK_IMPORTED_MODULE_6__.createRouteMatcher),\n/* harmony export */   currentUser: () => (/* reexport safe */ _app_router_server_currentUser__WEBPACK_IMPORTED_MODULE_7__.currentUser),\n/* harmony export */   getAuth: () => (/* reexport safe */ _createGetAuth__WEBPACK_IMPORTED_MODULE_8__.getAuth),\n/* harmony export */   reverificationError: () => (/* reexport safe */ _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_1__.reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* reexport safe */ _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_1__.reverificationErrorResponse),\n/* harmony export */   verifyToken: () => (/* reexport safe */ _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.verifyToken)\n/* harmony export */ });\n/* harmony import */ var _routeMatcher__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./routeMatcher */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js\");\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/./node_modules/@clerk/backend/dist/index.mjs\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _createGetAuth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./createGetAuth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _buildClerkProps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buildClerkProps */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\");\n/* harmony import */ var _app_router_server_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app-router/server/auth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n/* harmony import */ var _app_router_server_currentUser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app-router/server/currentUser */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n/* harmony import */ var _clerkMiddleware__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clerkMiddleware */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js\");\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThCO0FBQ3NCO0FBQ1k7QUFDcEI7QUFDRjtBQUNVO0FBQ0g7QUFDYztBQUNYO0FBQ3VDO0FBYXpGLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcz84OTAyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVSb3V0ZU1hdGNoZXIgfSBmcm9tIFwiLi9yb3V0ZU1hdGNoZXJcIjtcbmltcG9ydCB7IHZlcmlmeVRva2VuLCBjcmVhdGVDbGVya0NsaWVudCB9IGZyb20gXCJAY2xlcmsvYmFja2VuZFwiO1xuaW1wb3J0IHsgY2xlcmtDbGllbnQgfSBmcm9tIFwiLi9jbGVya0NsaWVudFwiO1xuaW1wb3J0IHsgZ2V0QXV0aCB9IGZyb20gXCIuL2NyZWF0ZUdldEF1dGhcIjtcbmltcG9ydCB7IGJ1aWxkQ2xlcmtQcm9wcyB9IGZyb20gXCIuL2J1aWxkQ2xlcmtQcm9wc1wiO1xuaW1wb3J0IHsgYXV0aCB9IGZyb20gXCIuLi9hcHAtcm91dGVyL3NlcnZlci9hdXRoXCI7XG5pbXBvcnQgeyBjdXJyZW50VXNlciB9IGZyb20gXCIuLi9hcHAtcm91dGVyL3NlcnZlci9jdXJyZW50VXNlclwiO1xuaW1wb3J0IHsgY2xlcmtNaWRkbGV3YXJlIH0gZnJvbSBcIi4vY2xlcmtNaWRkbGV3YXJlXCI7XG5pbXBvcnQgeyByZXZlcmlmaWNhdGlvbkVycm9yUmVzcG9uc2UsIHJldmVyaWZpY2F0aW9uRXJyb3IgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvaW50ZXJuYWxcIjtcbmV4cG9ydCB7XG4gIGF1dGgsXG4gIGJ1aWxkQ2xlcmtQcm9wcyxcbiAgY2xlcmtDbGllbnQsXG4gIGNsZXJrTWlkZGxld2FyZSxcbiAgY3JlYXRlQ2xlcmtDbGllbnQsXG4gIGNyZWF0ZVJvdXRlTWF0Y2hlcixcbiAgY3VycmVudFVzZXIsXG4gIGdldEF1dGgsXG4gIHJldmVyaWZpY2F0aW9uRXJyb3IsXG4gIHJldmVyaWZpY2F0aW9uRXJyb3JSZXNwb25zZSxcbiAgdmVyaWZ5VG9rZW5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlUm91dGVNYXRjaGVyIiwidmVyaWZ5VG9rZW4iLCJjcmVhdGVDbGVya0NsaWVudCIsImNsZXJrQ2xpZW50IiwiZ2V0QXV0aCIsImJ1aWxkQ2xlcmtQcm9wcyIsImF1dGgiLCJjdXJyZW50VXNlciIsImNsZXJrTWlkZGxld2FyZSIsInJldmVyaWZpY2F0aW9uRXJyb3JSZXNwb25zZSIsInJldmVyaWZpY2F0aW9uRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/keyless.js":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/keyless.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getKeylessCookieName: () => (/* binding */ getKeylessCookieName),\n/* harmony export */   getKeylessCookieValue: () => (/* binding */ getKeylessCookieValue)\n/* harmony export */ });\n/* harmony import */ var crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto-js/enc-hex */ \"(middleware)/./node_modules/crypto-js/enc-hex.js\");\n/* harmony import */ var crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto-js/sha256 */ \"(middleware)/./node_modules/crypto-js/sha256.js\");\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_feature_flags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/feature-flags */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js\");\n\n\n\n\nconst keylessCookiePrefix = `__clerk_keys_`;\nconst getKeylessCookieName = ()=>{\n    const PATH = process.env.PWD;\n    if (!PATH) {\n        return `${keylessCookiePrefix}${0}`;\n    }\n    const lastThreeDirs = PATH.split(\"/\").filter(Boolean).slice(-3).reverse().join(\"/\");\n    const hash = hashString(lastThreeDirs);\n    return `${keylessCookiePrefix}${hash}`;\n};\nfunction hashString(str) {\n    return crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1___default()(str).toString((crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0___default())).slice(0, 16);\n}\nfunction getKeylessCookieValue(getter) {\n    if (!_utils_feature_flags__WEBPACK_IMPORTED_MODULE_2__.canUseKeyless) {\n        return void 0;\n    }\n    const keylessCookieName = getKeylessCookieName();\n    let keyless;\n    try {\n        if (keylessCookieName) {\n            keyless = JSON.parse(getter(keylessCookieName) || \"{}\");\n        }\n    } catch  {\n        keyless = void 0;\n    }\n    return keyless;\n}\n //# sourceMappingURL=keyless.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2tleWxlc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QjtBQUNNO0FBQ0U7QUFDaUI7QUFDdkQsTUFBTUcsc0JBQXNCLENBQUMsYUFBYSxDQUFDO0FBQzNDLE1BQU1DLHVCQUF1QjtJQUMzQixNQUFNQyxPQUFPQyxRQUFRQyxHQUFHLENBQUNDLEdBQUc7SUFDNUIsSUFBSSxDQUFDSCxNQUFNO1FBQ1QsT0FBTyxDQUFDLEVBQUVGLG9CQUFvQixFQUFFLEVBQUUsQ0FBQztJQUNyQztJQUNBLE1BQU1NLGdCQUFnQkosS0FBS0ssS0FBSyxDQUFDLEtBQUtDLE1BQU0sQ0FBQ0MsU0FBU0MsS0FBSyxDQUFDLENBQUMsR0FBR0MsT0FBTyxHQUFHQyxJQUFJLENBQUM7SUFDL0UsTUFBTUMsT0FBT0MsV0FBV1I7SUFDeEIsT0FBTyxDQUFDLEVBQUVOLG9CQUFvQixFQUFFYSxLQUFLLENBQUM7QUFDeEM7QUFDQSxTQUFTQyxXQUFXQyxHQUFHO0lBQ3JCLE9BQU9qQix1REFBTUEsQ0FBQ2lCLEtBQUtDLFFBQVEsQ0FBQ25CLDBEQUFHQSxFQUFFYSxLQUFLLENBQUMsR0FBRztBQUM1QztBQUNBLFNBQVNPLHNCQUFzQkMsTUFBTTtJQUNuQyxJQUFJLENBQUNuQiwrREFBYUEsRUFBRTtRQUNsQixPQUFPLEtBQUs7SUFDZDtJQUNBLE1BQU1vQixvQkFBb0JsQjtJQUMxQixJQUFJbUI7SUFDSixJQUFJO1FBQ0YsSUFBSUQsbUJBQW1CO1lBQ3JCQyxVQUFVQyxLQUFLQyxLQUFLLENBQUNKLE9BQU9DLHNCQUFzQjtRQUNwRDtJQUNGLEVBQUUsT0FBTTtRQUNOQyxVQUFVLEtBQUs7SUFDakI7SUFDQSxPQUFPQTtBQUNUO0FBSUUsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2tleWxlc3MuanM/ZGFiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xuaW1wb3J0IGhleCBmcm9tIFwiY3J5cHRvLWpzL2VuYy1oZXhcIjtcbmltcG9ydCBzaGEyNTYgZnJvbSBcImNyeXB0by1qcy9zaGEyNTZcIjtcbmltcG9ydCB7IGNhblVzZUtleWxlc3MgfSBmcm9tIFwiLi4vdXRpbHMvZmVhdHVyZS1mbGFnc1wiO1xuY29uc3Qga2V5bGVzc0Nvb2tpZVByZWZpeCA9IGBfX2NsZXJrX2tleXNfYDtcbmNvbnN0IGdldEtleWxlc3NDb29raWVOYW1lID0gKCkgPT4ge1xuICBjb25zdCBQQVRIID0gcHJvY2Vzcy5lbnYuUFdEO1xuICBpZiAoIVBBVEgpIHtcbiAgICByZXR1cm4gYCR7a2V5bGVzc0Nvb2tpZVByZWZpeH0kezB9YDtcbiAgfVxuICBjb25zdCBsYXN0VGhyZWVEaXJzID0gUEFUSC5zcGxpdChcIi9cIikuZmlsdGVyKEJvb2xlYW4pLnNsaWNlKC0zKS5yZXZlcnNlKCkuam9pbihcIi9cIik7XG4gIGNvbnN0IGhhc2ggPSBoYXNoU3RyaW5nKGxhc3RUaHJlZURpcnMpO1xuICByZXR1cm4gYCR7a2V5bGVzc0Nvb2tpZVByZWZpeH0ke2hhc2h9YDtcbn07XG5mdW5jdGlvbiBoYXNoU3RyaW5nKHN0cikge1xuICByZXR1cm4gc2hhMjU2KHN0cikudG9TdHJpbmcoaGV4KS5zbGljZSgwLCAxNik7XG59XG5mdW5jdGlvbiBnZXRLZXlsZXNzQ29va2llVmFsdWUoZ2V0dGVyKSB7XG4gIGlmICghY2FuVXNlS2V5bGVzcykge1xuICAgIHJldHVybiB2b2lkIDA7XG4gIH1cbiAgY29uc3Qga2V5bGVzc0Nvb2tpZU5hbWUgPSBnZXRLZXlsZXNzQ29va2llTmFtZSgpO1xuICBsZXQga2V5bGVzcztcbiAgdHJ5IHtcbiAgICBpZiAoa2V5bGVzc0Nvb2tpZU5hbWUpIHtcbiAgICAgIGtleWxlc3MgPSBKU09OLnBhcnNlKGdldHRlcihrZXlsZXNzQ29va2llTmFtZSkgfHwgXCJ7fVwiKTtcbiAgICB9XG4gIH0gY2F0Y2gge1xuICAgIGtleWxlc3MgPSB2b2lkIDA7XG4gIH1cbiAgcmV0dXJuIGtleWxlc3M7XG59XG5leHBvcnQge1xuICBnZXRLZXlsZXNzQ29va2llTmFtZSxcbiAgZ2V0S2V5bGVzc0Nvb2tpZVZhbHVlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2V5bGVzcy5qcy5tYXAiXSwibmFtZXMiOlsiaGV4Iiwic2hhMjU2IiwiY2FuVXNlS2V5bGVzcyIsImtleWxlc3NDb29raWVQcmVmaXgiLCJnZXRLZXlsZXNzQ29va2llTmFtZSIsIlBBVEgiLCJwcm9jZXNzIiwiZW52IiwiUFdEIiwibGFzdFRocmVlRGlycyIsInNwbGl0IiwiZmlsdGVyIiwiQm9vbGVhbiIsInNsaWNlIiwicmV2ZXJzZSIsImpvaW4iLCJoYXNoIiwiaGFzaFN0cmluZyIsInN0ciIsInRvU3RyaW5nIiwiZ2V0S2V5bGVzc0Nvb2tpZVZhbHVlIiwiZ2V0dGVyIiwia2V5bGVzc0Nvb2tpZU5hbWUiLCJrZXlsZXNzIiwiSlNPTiIsInBhcnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/keyless.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/middleware-storage.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/middleware-storage.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clerkMiddlewareRequestDataStorage: () => (/* binding */ clerkMiddlewareRequestDataStorage),\n/* harmony export */   clerkMiddlewareRequestDataStore: () => (/* binding */ clerkMiddlewareRequestDataStore)\n/* harmony export */ });\n/* harmony import */ var node_async_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\n/* harmony import */ var node_async_hooks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_async_hooks__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst clerkMiddlewareRequestDataStore = /* @__PURE__ */ new Map();\nconst clerkMiddlewareRequestDataStorage = new node_async_hooks__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorage();\n //# sourceMappingURL=middleware-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL21pZGRsZXdhcmUtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThCO0FBQ3VCO0FBQ3JELE1BQU1DLGtDQUFrQyxhQUFhLEdBQUcsSUFBSUM7QUFDNUQsTUFBTUMsb0NBQW9DLElBQUlILCtEQUFpQkE7QUFJN0QsQ0FDRiw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL21pZGRsZXdhcmUtc3RvcmFnZS5qcz9mNDM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBBc3luY0xvY2FsU3RvcmFnZSB9IGZyb20gXCJub2RlOmFzeW5jX2hvb2tzXCI7XG5jb25zdCBjbGVya01pZGRsZXdhcmVSZXF1ZXN0RGF0YVN0b3JlID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbmNvbnN0IGNsZXJrTWlkZGxld2FyZVJlcXVlc3REYXRhU3RvcmFnZSA9IG5ldyBBc3luY0xvY2FsU3RvcmFnZSgpO1xuZXhwb3J0IHtcbiAgY2xlcmtNaWRkbGV3YXJlUmVxdWVzdERhdGFTdG9yYWdlLFxuICBjbGVya01pZGRsZXdhcmVSZXF1ZXN0RGF0YVN0b3JlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlkZGxld2FyZS1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJBc3luY0xvY2FsU3RvcmFnZSIsImNsZXJrTWlkZGxld2FyZVJlcXVlc3REYXRhU3RvcmUiLCJNYXAiLCJjbGVya01pZGRsZXdhcmVSZXF1ZXN0RGF0YVN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/middleware-storage.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/nextErrors.js":
/*!******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/nextErrors.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HTTP_ERROR_FALLBACK_ERROR_CODE: () => (/* binding */ HTTP_ERROR_FALLBACK_ERROR_CODE),\n/* harmony export */   isHTTPAccessFallbackError: () => (/* binding */ isHTTPAccessFallbackError),\n/* harmony export */   isLegacyNextjsNotFoundError: () => (/* binding */ isLegacyNextjsNotFoundError),\n/* harmony export */   isNextjsNotFoundError: () => (/* binding */ isNextjsNotFoundError),\n/* harmony export */   isNextjsRedirectError: () => (/* binding */ isNextjsRedirectError),\n/* harmony export */   isRedirectToSignInError: () => (/* binding */ isRedirectToSignInError),\n/* harmony export */   nextjsRedirectError: () => (/* binding */ nextjsRedirectError),\n/* harmony export */   redirectToSignInError: () => (/* binding */ redirectToSignInError),\n/* harmony export */   whichHTTPAccessFallbackError: () => (/* binding */ whichHTTPAccessFallbackError)\n/* harmony export */ });\n\nconst CONTROL_FLOW_ERROR = {\n    REDIRECT_TO_URL: \"CLERK_PROTECT_REDIRECT_TO_URL\",\n    REDIRECT_TO_SIGN_IN: \"CLERK_PROTECT_REDIRECT_TO_SIGN_IN\"\n};\nconst LEGACY_NOT_FOUND_ERROR_CODE = \"NEXT_NOT_FOUND\";\nfunction isLegacyNextjsNotFoundError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"digest\" in error)) {\n        return false;\n    }\n    return error.digest === LEGACY_NOT_FOUND_ERROR_CODE;\n}\nconst HTTPAccessErrorStatusCodes = {\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    UNAUTHORIZED: 401\n};\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatusCodes));\nconst HTTP_ERROR_FALLBACK_ERROR_CODE = \"NEXT_HTTP_ERROR_FALLBACK\";\nfunction isHTTPAccessFallbackError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"digest\" in error) || typeof error.digest !== \"string\") {\n        return false;\n    }\n    const [prefix, httpStatus] = error.digest.split(\";\");\n    return prefix === HTTP_ERROR_FALLBACK_ERROR_CODE && ALLOWED_CODES.has(Number(httpStatus));\n}\nfunction whichHTTPAccessFallbackError(error) {\n    if (!isHTTPAccessFallbackError(error)) {\n        return void 0;\n    }\n    const [, httpStatus] = error.digest.split(\";\");\n    return Number(httpStatus);\n}\nfunction isNextjsNotFoundError(error) {\n    return isLegacyNextjsNotFoundError(error) || // Checks for the error thrown from `notFound()` for canary versions of next@15\n    whichHTTPAccessFallbackError(error) === HTTPAccessErrorStatusCodes.NOT_FOUND;\n}\nconst REDIRECT_ERROR_CODE = \"NEXT_REDIRECT\";\nfunction nextjsRedirectError(url, extra, type = \"replace\", statusCode = 307) {\n    const error = new Error(REDIRECT_ERROR_CODE);\n    error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`;\n    error.clerk_digest = CONTROL_FLOW_ERROR.REDIRECT_TO_URL;\n    Object.assign(error, extra);\n    throw error;\n}\nfunction redirectToSignInError(url, returnBackUrl) {\n    nextjsRedirectError(url, {\n        clerk_digest: CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN,\n        returnBackUrl: returnBackUrl === null ? \"\" : returnBackUrl || url\n    });\n}\nfunction isNextjsRedirectError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"digest\" in error) || typeof error.digest !== \"string\") {\n        return false;\n    }\n    const digest = error.digest.split(\";\");\n    const [errorCode, type] = digest;\n    const destination = digest.slice(2, -2).join(\";\");\n    const status = digest.at(-2);\n    const statusCode = Number(status);\n    return errorCode === REDIRECT_ERROR_CODE && (type === \"replace\" || type === \"push\") && typeof destination === \"string\" && !isNaN(statusCode) && statusCode === 307;\n}\nfunction isRedirectToSignInError(error) {\n    if (isNextjsRedirectError(error) && \"clerk_digest\" in error) {\n        return error.clerk_digest === CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN;\n    }\n    return false;\n}\n //# sourceMappingURL=nextErrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL25leHRFcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThCO0FBQzlCLE1BQU1BLHFCQUFxQjtJQUN6QkMsaUJBQWlCO0lBQ2pCQyxxQkFBcUI7QUFDdkI7QUFDQSxNQUFNQyw4QkFBOEI7QUFDcEMsU0FBU0MsNEJBQTRCQyxLQUFLO0lBQ3hDLElBQUksT0FBT0EsVUFBVSxZQUFZQSxVQUFVLFFBQVEsQ0FBRSxhQUFZQSxLQUFJLEdBQUk7UUFDdkUsT0FBTztJQUNUO0lBQ0EsT0FBT0EsTUFBTUMsTUFBTSxLQUFLSDtBQUMxQjtBQUNBLE1BQU1JLDZCQUE2QjtJQUNqQ0MsV0FBVztJQUNYQyxXQUFXO0lBQ1hDLGNBQWM7QUFDaEI7QUFDQSxNQUFNQyxnQkFBZ0IsSUFBSUMsSUFBSUMsT0FBT0MsTUFBTSxDQUFDUDtBQUM1QyxNQUFNUSxpQ0FBaUM7QUFDdkMsU0FBU0MsMEJBQTBCWCxLQUFLO0lBQ3RDLElBQUksT0FBT0EsVUFBVSxZQUFZQSxVQUFVLFFBQVEsQ0FBRSxhQUFZQSxLQUFJLEtBQU0sT0FBT0EsTUFBTUMsTUFBTSxLQUFLLFVBQVU7UUFDM0csT0FBTztJQUNUO0lBQ0EsTUFBTSxDQUFDVyxRQUFRQyxXQUFXLEdBQUdiLE1BQU1DLE1BQU0sQ0FBQ2EsS0FBSyxDQUFDO0lBQ2hELE9BQU9GLFdBQVdGLGtDQUFrQ0osY0FBY1MsR0FBRyxDQUFDQyxPQUFPSDtBQUMvRTtBQUNBLFNBQVNJLDZCQUE2QmpCLEtBQUs7SUFDekMsSUFBSSxDQUFDVywwQkFBMEJYLFFBQVE7UUFDckMsT0FBTyxLQUFLO0lBQ2Q7SUFDQSxNQUFNLEdBQUdhLFdBQVcsR0FBR2IsTUFBTUMsTUFBTSxDQUFDYSxLQUFLLENBQUM7SUFDMUMsT0FBT0UsT0FBT0g7QUFDaEI7QUFDQSxTQUFTSyxzQkFBc0JsQixLQUFLO0lBQ2xDLE9BQU9ELDRCQUE0QkMsVUFBVSwrRUFBK0U7SUFDNUhpQiw2QkFBNkJqQixXQUFXRSwyQkFBMkJDLFNBQVM7QUFDOUU7QUFDQSxNQUFNZ0Isc0JBQXNCO0FBQzVCLFNBQVNDLG9CQUFvQkMsR0FBRyxFQUFFQyxLQUFLLEVBQUVDLE9BQU8sU0FBUyxFQUFFQyxhQUFhLEdBQUc7SUFDekUsTUFBTXhCLFFBQVEsSUFBSXlCLE1BQU1OO0lBQ3hCbkIsTUFBTUMsTUFBTSxHQUFHLENBQUMsRUFBRWtCLG9CQUFvQixDQUFDLEVBQUVJLEtBQUssQ0FBQyxFQUFFRixJQUFJLENBQUMsRUFBRUcsV0FBVyxDQUFDLENBQUM7SUFDckV4QixNQUFNMEIsWUFBWSxHQUFHL0IsbUJBQW1CQyxlQUFlO0lBQ3ZEWSxPQUFPbUIsTUFBTSxDQUFDM0IsT0FBT3NCO0lBQ3JCLE1BQU10QjtBQUNSO0FBQ0EsU0FBUzRCLHNCQUFzQlAsR0FBRyxFQUFFUSxhQUFhO0lBQy9DVCxvQkFBb0JDLEtBQUs7UUFDdkJLLGNBQWMvQixtQkFBbUJFLG1CQUFtQjtRQUNwRGdDLGVBQWVBLGtCQUFrQixPQUFPLEtBQUtBLGlCQUFpQlI7SUFDaEU7QUFDRjtBQUNBLFNBQVNTLHNCQUFzQjlCLEtBQUs7SUFDbEMsSUFBSSxPQUFPQSxVQUFVLFlBQVlBLFVBQVUsUUFBUSxDQUFFLGFBQVlBLEtBQUksS0FBTSxPQUFPQSxNQUFNQyxNQUFNLEtBQUssVUFBVTtRQUMzRyxPQUFPO0lBQ1Q7SUFDQSxNQUFNQSxTQUFTRCxNQUFNQyxNQUFNLENBQUNhLEtBQUssQ0FBQztJQUNsQyxNQUFNLENBQUNpQixXQUFXUixLQUFLLEdBQUd0QjtJQUMxQixNQUFNK0IsY0FBYy9CLE9BQU9nQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUdDLElBQUksQ0FBQztJQUM3QyxNQUFNQyxTQUFTbEMsT0FBT21DLEVBQUUsQ0FBQyxDQUFDO0lBQzFCLE1BQU1aLGFBQWFSLE9BQU9tQjtJQUMxQixPQUFPSixjQUFjWix1QkFBd0JJLENBQUFBLFNBQVMsYUFBYUEsU0FBUyxNQUFLLEtBQU0sT0FBT1MsZ0JBQWdCLFlBQVksQ0FBQ0ssTUFBTWIsZUFBZUEsZUFBZTtBQUNqSztBQUNBLFNBQVNjLHdCQUF3QnRDLEtBQUs7SUFDcEMsSUFBSThCLHNCQUFzQjlCLFVBQVUsa0JBQWtCQSxPQUFPO1FBQzNELE9BQU9BLE1BQU0wQixZQUFZLEtBQUsvQixtQkFBbUJFLG1CQUFtQjtJQUN0RTtJQUNBLE9BQU87QUFDVDtBQVdFLENBQ0Ysc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9uZXh0RXJyb3JzLmpzP2YzZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmNvbnN0IENPTlRST0xfRkxPV19FUlJPUiA9IHtcbiAgUkVESVJFQ1RfVE9fVVJMOiBcIkNMRVJLX1BST1RFQ1RfUkVESVJFQ1RfVE9fVVJMXCIsXG4gIFJFRElSRUNUX1RPX1NJR05fSU46IFwiQ0xFUktfUFJPVEVDVF9SRURJUkVDVF9UT19TSUdOX0lOXCJcbn07XG5jb25zdCBMRUdBQ1lfTk9UX0ZPVU5EX0VSUk9SX0NPREUgPSBcIk5FWFRfTk9UX0ZPVU5EXCI7XG5mdW5jdGlvbiBpc0xlZ2FjeU5leHRqc05vdEZvdW5kRXJyb3IoZXJyb3IpIHtcbiAgaWYgKHR5cGVvZiBlcnJvciAhPT0gXCJvYmplY3RcIiB8fCBlcnJvciA9PT0gbnVsbCB8fCAhKFwiZGlnZXN0XCIgaW4gZXJyb3IpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiBlcnJvci5kaWdlc3QgPT09IExFR0FDWV9OT1RfRk9VTkRfRVJST1JfQ09ERTtcbn1cbmNvbnN0IEhUVFBBY2Nlc3NFcnJvclN0YXR1c0NvZGVzID0ge1xuICBOT1RfRk9VTkQ6IDQwNCxcbiAgRk9SQklEREVOOiA0MDMsXG4gIFVOQVVUSE9SSVpFRDogNDAxXG59O1xuY29uc3QgQUxMT1dFRF9DT0RFUyA9IG5ldyBTZXQoT2JqZWN0LnZhbHVlcyhIVFRQQWNjZXNzRXJyb3JTdGF0dXNDb2RlcykpO1xuY29uc3QgSFRUUF9FUlJPUl9GQUxMQkFDS19FUlJPUl9DT0RFID0gXCJORVhUX0hUVFBfRVJST1JfRkFMTEJBQ0tcIjtcbmZ1bmN0aW9uIGlzSFRUUEFjY2Vzc0ZhbGxiYWNrRXJyb3IoZXJyb3IpIHtcbiAgaWYgKHR5cGVvZiBlcnJvciAhPT0gXCJvYmplY3RcIiB8fCBlcnJvciA9PT0gbnVsbCB8fCAhKFwiZGlnZXN0XCIgaW4gZXJyb3IpIHx8IHR5cGVvZiBlcnJvci5kaWdlc3QgIT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgW3ByZWZpeCwgaHR0cFN0YXR1c10gPSBlcnJvci5kaWdlc3Quc3BsaXQoXCI7XCIpO1xuICByZXR1cm4gcHJlZml4ID09PSBIVFRQX0VSUk9SX0ZBTExCQUNLX0VSUk9SX0NPREUgJiYgQUxMT1dFRF9DT0RFUy5oYXMoTnVtYmVyKGh0dHBTdGF0dXMpKTtcbn1cbmZ1bmN0aW9uIHdoaWNoSFRUUEFjY2Vzc0ZhbGxiYWNrRXJyb3IoZXJyb3IpIHtcbiAgaWYgKCFpc0hUVFBBY2Nlc3NGYWxsYmFja0Vycm9yKGVycm9yKSkge1xuICAgIHJldHVybiB2b2lkIDA7XG4gIH1cbiAgY29uc3QgWywgaHR0cFN0YXR1c10gPSBlcnJvci5kaWdlc3Quc3BsaXQoXCI7XCIpO1xuICByZXR1cm4gTnVtYmVyKGh0dHBTdGF0dXMpO1xufVxuZnVuY3Rpb24gaXNOZXh0anNOb3RGb3VuZEVycm9yKGVycm9yKSB7XG4gIHJldHVybiBpc0xlZ2FjeU5leHRqc05vdEZvdW5kRXJyb3IoZXJyb3IpIHx8IC8vIENoZWNrcyBmb3IgdGhlIGVycm9yIHRocm93biBmcm9tIGBub3RGb3VuZCgpYCBmb3IgY2FuYXJ5IHZlcnNpb25zIG9mIG5leHRAMTVcbiAgd2hpY2hIVFRQQWNjZXNzRmFsbGJhY2tFcnJvcihlcnJvcikgPT09IEhUVFBBY2Nlc3NFcnJvclN0YXR1c0NvZGVzLk5PVF9GT1VORDtcbn1cbmNvbnN0IFJFRElSRUNUX0VSUk9SX0NPREUgPSBcIk5FWFRfUkVESVJFQ1RcIjtcbmZ1bmN0aW9uIG5leHRqc1JlZGlyZWN0RXJyb3IodXJsLCBleHRyYSwgdHlwZSA9IFwicmVwbGFjZVwiLCBzdGF0dXNDb2RlID0gMzA3KSB7XG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFJFRElSRUNUX0VSUk9SX0NPREUpO1xuICBlcnJvci5kaWdlc3QgPSBgJHtSRURJUkVDVF9FUlJPUl9DT0RFfTske3R5cGV9OyR7dXJsfTske3N0YXR1c0NvZGV9O2A7XG4gIGVycm9yLmNsZXJrX2RpZ2VzdCA9IENPTlRST0xfRkxPV19FUlJPUi5SRURJUkVDVF9UT19VUkw7XG4gIE9iamVjdC5hc3NpZ24oZXJyb3IsIGV4dHJhKTtcbiAgdGhyb3cgZXJyb3I7XG59XG5mdW5jdGlvbiByZWRpcmVjdFRvU2lnbkluRXJyb3IodXJsLCByZXR1cm5CYWNrVXJsKSB7XG4gIG5leHRqc1JlZGlyZWN0RXJyb3IodXJsLCB7XG4gICAgY2xlcmtfZGlnZXN0OiBDT05UUk9MX0ZMT1dfRVJST1IuUkVESVJFQ1RfVE9fU0lHTl9JTixcbiAgICByZXR1cm5CYWNrVXJsOiByZXR1cm5CYWNrVXJsID09PSBudWxsID8gXCJcIiA6IHJldHVybkJhY2tVcmwgfHwgdXJsXG4gIH0pO1xufVxuZnVuY3Rpb24gaXNOZXh0anNSZWRpcmVjdEVycm9yKGVycm9yKSB7XG4gIGlmICh0eXBlb2YgZXJyb3IgIT09IFwib2JqZWN0XCIgfHwgZXJyb3IgPT09IG51bGwgfHwgIShcImRpZ2VzdFwiIGluIGVycm9yKSB8fCB0eXBlb2YgZXJyb3IuZGlnZXN0ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IGRpZ2VzdCA9IGVycm9yLmRpZ2VzdC5zcGxpdChcIjtcIik7XG4gIGNvbnN0IFtlcnJvckNvZGUsIHR5cGVdID0gZGlnZXN0O1xuICBjb25zdCBkZXN0aW5hdGlvbiA9IGRpZ2VzdC5zbGljZSgyLCAtMikuam9pbihcIjtcIik7XG4gIGNvbnN0IHN0YXR1cyA9IGRpZ2VzdC5hdCgtMik7XG4gIGNvbnN0IHN0YXR1c0NvZGUgPSBOdW1iZXIoc3RhdHVzKTtcbiAgcmV0dXJuIGVycm9yQ29kZSA9PT0gUkVESVJFQ1RfRVJST1JfQ09ERSAmJiAodHlwZSA9PT0gXCJyZXBsYWNlXCIgfHwgdHlwZSA9PT0gXCJwdXNoXCIpICYmIHR5cGVvZiBkZXN0aW5hdGlvbiA9PT0gXCJzdHJpbmdcIiAmJiAhaXNOYU4oc3RhdHVzQ29kZSkgJiYgc3RhdHVzQ29kZSA9PT0gMzA3O1xufVxuZnVuY3Rpb24gaXNSZWRpcmVjdFRvU2lnbkluRXJyb3IoZXJyb3IpIHtcbiAgaWYgKGlzTmV4dGpzUmVkaXJlY3RFcnJvcihlcnJvcikgJiYgXCJjbGVya19kaWdlc3RcIiBpbiBlcnJvcikge1xuICAgIHJldHVybiBlcnJvci5jbGVya19kaWdlc3QgPT09IENPTlRST0xfRkxPV19FUlJPUi5SRURJUkVDVF9UT19TSUdOX0lOO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCB7XG4gIEhUVFBfRVJST1JfRkFMTEJBQ0tfRVJST1JfQ09ERSxcbiAgaXNIVFRQQWNjZXNzRmFsbGJhY2tFcnJvcixcbiAgaXNMZWdhY3lOZXh0anNOb3RGb3VuZEVycm9yLFxuICBpc05leHRqc05vdEZvdW5kRXJyb3IsXG4gIGlzTmV4dGpzUmVkaXJlY3RFcnJvcixcbiAgaXNSZWRpcmVjdFRvU2lnbkluRXJyb3IsXG4gIG5leHRqc1JlZGlyZWN0RXJyb3IsXG4gIHJlZGlyZWN0VG9TaWduSW5FcnJvcixcbiAgd2hpY2hIVFRQQWNjZXNzRmFsbGJhY2tFcnJvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leHRFcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbIkNPTlRST0xfRkxPV19FUlJPUiIsIlJFRElSRUNUX1RPX1VSTCIsIlJFRElSRUNUX1RPX1NJR05fSU4iLCJMRUdBQ1lfTk9UX0ZPVU5EX0VSUk9SX0NPREUiLCJpc0xlZ2FjeU5leHRqc05vdEZvdW5kRXJyb3IiLCJlcnJvciIsImRpZ2VzdCIsIkhUVFBBY2Nlc3NFcnJvclN0YXR1c0NvZGVzIiwiTk9UX0ZPVU5EIiwiRk9SQklEREVOIiwiVU5BVVRIT1JJWkVEIiwiQUxMT1dFRF9DT0RFUyIsIlNldCIsIk9iamVjdCIsInZhbHVlcyIsIkhUVFBfRVJST1JfRkFMTEJBQ0tfRVJST1JfQ09ERSIsImlzSFRUUEFjY2Vzc0ZhbGxiYWNrRXJyb3IiLCJwcmVmaXgiLCJodHRwU3RhdHVzIiwic3BsaXQiLCJoYXMiLCJOdW1iZXIiLCJ3aGljaEhUVFBBY2Nlc3NGYWxsYmFja0Vycm9yIiwiaXNOZXh0anNOb3RGb3VuZEVycm9yIiwiUkVESVJFQ1RfRVJST1JfQ09ERSIsIm5leHRqc1JlZGlyZWN0RXJyb3IiLCJ1cmwiLCJleHRyYSIsInR5cGUiLCJzdGF0dXNDb2RlIiwiRXJyb3IiLCJjbGVya19kaWdlc3QiLCJhc3NpZ24iLCJyZWRpcmVjdFRvU2lnbkluRXJyb3IiLCJyZXR1cm5CYWNrVXJsIiwiaXNOZXh0anNSZWRpcmVjdEVycm9yIiwiZXJyb3JDb2RlIiwiZGVzdGluYXRpb24iLCJzbGljZSIsImpvaW4iLCJzdGF0dXMiLCJhdCIsImlzTmFOIiwiaXNSZWRpcmVjdFRvU2lnbkluRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/nextErrors.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/nextFetcher.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/nextFetcher.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNextFetcher: () => (/* binding */ isNextFetcher)\n/* harmony export */ });\n\nfunction isNextFetcher(fetch) {\n    return \"__nextPatched\" in fetch && fetch.__nextPatched === true;\n}\n //# sourceMappingURL=nextFetcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL25leHRGZXRjaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBOEI7QUFDOUIsU0FBU0EsY0FBY0MsS0FBSztJQUMxQixPQUFPLG1CQUFtQkEsU0FBU0EsTUFBTUMsYUFBYSxLQUFLO0FBQzdEO0FBR0UsQ0FDRix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL25leHRGZXRjaGVyLmpzPzZiN2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmZ1bmN0aW9uIGlzTmV4dEZldGNoZXIoZmV0Y2gpIHtcbiAgcmV0dXJuIFwiX19uZXh0UGF0Y2hlZFwiIGluIGZldGNoICYmIGZldGNoLl9fbmV4dFBhdGNoZWQgPT09IHRydWU7XG59XG5leHBvcnQge1xuICBpc05leHRGZXRjaGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmV4dEZldGNoZXIuanMubWFwIl0sIm5hbWVzIjpbImlzTmV4dEZldGNoZXIiLCJmZXRjaCIsIl9fbmV4dFBhdGNoZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/nextFetcher.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/protect.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProtect: () => (/* binding */ createProtect)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\");\n/* harmony import */ var _nextFetcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nextFetcher */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/nextFetcher.js\");\n\n\n\n\nfunction createProtect(opts) {\n    const { redirectToSignIn, authObject, redirect, notFound, request } = opts;\n    return async (...args)=>{\n        var _a, _b, _c, _d, _e, _f;\n        const optionValuesAsParam = ((_a = args[0]) == null ? void 0 : _a.unauthenticatedUrl) || ((_b = args[0]) == null ? void 0 : _b.unauthorizedUrl);\n        const paramsOrFunction = optionValuesAsParam ? void 0 : args[0];\n        const unauthenticatedUrl = ((_c = args[0]) == null ? void 0 : _c.unauthenticatedUrl) || ((_d = args[1]) == null ? void 0 : _d.unauthenticatedUrl);\n        const unauthorizedUrl = ((_e = args[0]) == null ? void 0 : _e.unauthorizedUrl) || ((_f = args[1]) == null ? void 0 : _f.unauthorizedUrl);\n        const handleUnauthenticated = ()=>{\n            if (unauthenticatedUrl) {\n                return redirect(unauthenticatedUrl);\n            }\n            if (isPageRequest(request)) {\n                return redirectToSignIn();\n            }\n            return notFound();\n        };\n        const handleUnauthorized = ()=>{\n            if (unauthorizedUrl) {\n                return redirect(unauthorizedUrl);\n            }\n            return notFound();\n        };\n        if (!authObject.userId) {\n            return handleUnauthenticated();\n        }\n        if (!paramsOrFunction) {\n            return authObject;\n        }\n        if (typeof paramsOrFunction === \"function\") {\n            if (paramsOrFunction(authObject.has)) {\n                return authObject;\n            }\n            return handleUnauthorized();\n        }\n        if (authObject.has(paramsOrFunction)) {\n            return authObject;\n        }\n        return handleUnauthorized();\n    };\n}\nconst isServerActionRequest = (req)=>{\n    var _a, _b;\n    return !!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextUrl) && (((_a = req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.Accept)) == null ? void 0 : _a.includes(\"text/x-component\")) || ((_b = req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ContentType)) == null ? void 0 : _b.includes(\"multipart/form-data\")) || !!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextAction));\n};\nconst isPageRequest = (req)=>{\n    var _a;\n    return req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.SecFetchDest) === \"document\" || req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.SecFetchDest) === \"iframe\" || ((_a = req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.Accept)) == null ? void 0 : _a.includes(\"text/html\")) || isAppRouterInternalNavigation(req) || isPagesRouterInternalNavigation(req);\n};\nconst isAppRouterInternalNavigation = (req)=>!!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextUrl) && !isServerActionRequest(req) || isPagePathAvailable();\nconst isPagePathAvailable = ()=>{\n    const __fetch = globalThis.fetch;\n    if (!(0,_nextFetcher__WEBPACK_IMPORTED_MODULE_2__.isNextFetcher)(__fetch)) {\n        return false;\n    }\n    const { page, pagePath } = __fetch.__nextGetStaticStore().getStore() || {};\n    return Boolean(// available on next@14\n    pagePath || // available on next@15\n    page);\n};\nconst isPagesRouterInternalNavigation = (req)=>!!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextjsData);\n //# sourceMappingURL=protect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js":
/*!********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRouteMatcher: () => (/* binding */ createRouteMatcher)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_pathMatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/pathMatcher */ \"(middleware)/./node_modules/@clerk/shared/dist/pathMatcher.mjs\");\n\n\nconst createRouteMatcher = (routes)=>{\n    if (typeof routes === \"function\") {\n        return (req)=>routes(req);\n    }\n    const matcher = (0,_clerk_shared_pathMatcher__WEBPACK_IMPORTED_MODULE_0__.createPathMatcher)(routes);\n    return (req)=>matcher(req.nextUrl.pathname);\n};\n //# sourceMappingURL=routeMatcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL3JvdXRlTWF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QjtBQUNnQztBQUM5RCxNQUFNQyxxQkFBcUIsQ0FBQ0M7SUFDMUIsSUFBSSxPQUFPQSxXQUFXLFlBQVk7UUFDaEMsT0FBTyxDQUFDQyxNQUFRRCxPQUFPQztJQUN6QjtJQUNBLE1BQU1DLFVBQVVKLDRFQUFpQkEsQ0FBQ0U7SUFDbEMsT0FBTyxDQUFDQyxNQUFRQyxRQUFRRCxJQUFJRSxPQUFPLENBQUNDLFFBQVE7QUFDOUM7QUFHRSxDQUNGLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvcm91dGVNYXRjaGVyLmpzPzM2ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCB7IGNyZWF0ZVBhdGhNYXRjaGVyIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvcGF0aE1hdGNoZXJcIjtcbmNvbnN0IGNyZWF0ZVJvdXRlTWF0Y2hlciA9IChyb3V0ZXMpID0+IHtcbiAgaWYgKHR5cGVvZiByb3V0ZXMgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiAocmVxKSA9PiByb3V0ZXMocmVxKTtcbiAgfVxuICBjb25zdCBtYXRjaGVyID0gY3JlYXRlUGF0aE1hdGNoZXIocm91dGVzKTtcbiAgcmV0dXJuIChyZXEpID0+IG1hdGNoZXIocmVxLm5leHRVcmwucGF0aG5hbWUpO1xufTtcbmV4cG9ydCB7XG4gIGNyZWF0ZVJvdXRlTWF0Y2hlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlTWF0Y2hlci5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlUGF0aE1hdGNoZXIiLCJjcmVhdGVSb3V0ZU1hdGNoZXIiLCJyb3V0ZXMiLCJyZXEiLCJtYXRjaGVyIiwibmV4dFVybCIsInBhdGhuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertAuthStatus: () => (/* binding */ assertAuthStatus),\n/* harmony export */   assertKey: () => (/* binding */ assertKey),\n/* harmony export */   assertTokenSignature: () => (/* binding */ assertTokenSignature),\n/* harmony export */   decorateRequest: () => (/* binding */ decorateRequest),\n/* harmony export */   decryptClerkRequestData: () => (/* binding */ decryptClerkRequestData),\n/* harmony export */   encryptClerkRequestData: () => (/* binding */ encryptClerkRequestData),\n/* harmony export */   handleMultiDomainAndProxy: () => (/* binding */ handleMultiDomainAndProxy),\n/* harmony export */   redirectAdapter: () => (/* binding */ redirectAdapter),\n/* harmony export */   setRequestHeadersOnNextResponse: () => (/* binding */ setRequestHeadersOnNextResponse)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/logger */ \"(middleware)/./node_modules/@clerk/shared/dist/logger.mjs\");\n/* harmony import */ var _clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/proxy */ \"(middleware)/./node_modules/@clerk/shared/dist/proxy.mjs\");\n/* harmony import */ var _clerk_shared_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/utils */ \"(middleware)/./node_modules/@clerk/shared/dist/utils/index.mjs\");\n/* harmony import */ var crypto_js_aes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! crypto-js/aes */ \"(middleware)/./node_modules/crypto-js/aes.js\");\n/* harmony import */ var crypto_js_aes__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(crypto_js_aes__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! crypto-js/enc-utf8 */ \"(middleware)/./node_modules/crypto-js/enc-utf8.js\");\n/* harmony import */ var crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! crypto-js/hmac-sha1 */ \"(middleware)/./node_modules/crypto-js/hmac-sha1.js\");\n/* harmony import */ var crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\");\n/* harmony import */ var _utils_feature_flags__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/feature-flags */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _errorThrower__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./errorThrower */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\");\n/* harmony import */ var _headers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./headers-utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst OVERRIDE_HEADERS = \"x-middleware-override-headers\";\nconst MIDDLEWARE_HEADER_PREFIX = \"x-middleware-request\";\nconst setRequestHeadersOnNextResponse = (res, req, newHeaders)=>{\n    if (!res.headers.get(OVERRIDE_HEADERS)) {\n        res.headers.set(OVERRIDE_HEADERS, [\n            ...req.headers.keys()\n        ]);\n        req.headers.forEach((val, key)=>{\n            res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n        });\n    }\n    Object.entries(newHeaders).forEach(([key, val])=>{\n        res.headers.set(OVERRIDE_HEADERS, `${res.headers.get(OVERRIDE_HEADERS)},${key}`);\n        res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n    });\n};\nfunction decorateRequest(req, res, requestState, requestData, keylessMode) {\n    const { reason, message, status, token } = requestState;\n    if (!res) {\n        res = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_8__[\"default\"].next();\n    }\n    if (res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_9__.constants.Headers.NextRedirect)) {\n        return res;\n    }\n    let rewriteURL;\n    if (res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_9__.constants.Headers.NextResume) === \"1\") {\n        res.headers.delete(_constants__WEBPACK_IMPORTED_MODULE_9__.constants.Headers.NextResume);\n        rewriteURL = new URL(req.url);\n    }\n    const rewriteURLHeader = res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_9__.constants.Headers.NextRewrite);\n    if (rewriteURLHeader) {\n        const reqURL = new URL(req.url);\n        rewriteURL = new URL(rewriteURLHeader);\n        if (rewriteURL.origin !== reqURL.origin) {\n            return res;\n        }\n    }\n    if (rewriteURL) {\n        const clerkRequestData = encryptClerkRequestData(requestData, keylessMode);\n        setRequestHeadersOnNextResponse(res, req, {\n            [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus]: status,\n            [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthToken]: token || \"\",\n            [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthSignature]: token ? createTokenSignature(token, (requestData == null ? void 0 : requestData.secretKey) || _constants__WEBPACK_IMPORTED_MODULE_10__.SECRET_KEY || keylessMode.secretKey || \"\") : \"\",\n            [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthMessage]: message || \"\",\n            [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason]: reason || \"\",\n            [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkUrl]: req.clerkUrl.toString(),\n            ...clerkRequestData ? {\n                [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRequestData]: clerkRequestData\n            } : {}\n        });\n        res.headers.set(_constants__WEBPACK_IMPORTED_MODULE_9__.constants.Headers.NextRewrite, rewriteURL.href);\n    }\n    return res;\n}\nconst handleMultiDomainAndProxy = (clerkRequest, opts)=>{\n    const relativeOrAbsoluteProxyUrl = (0,_clerk_shared_utils__WEBPACK_IMPORTED_MODULE_4__.handleValueOrFn)(opts == null ? void 0 : opts.proxyUrl, clerkRequest.clerkUrl, _constants__WEBPACK_IMPORTED_MODULE_10__.PROXY_URL);\n    let proxyUrl;\n    if (!!relativeOrAbsoluteProxyUrl && !(0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__.isHttpOrHttps)(relativeOrAbsoluteProxyUrl)) {\n        proxyUrl = new URL(relativeOrAbsoluteProxyUrl, clerkRequest.clerkUrl).toString();\n    } else {\n        proxyUrl = relativeOrAbsoluteProxyUrl;\n    }\n    const isSatellite = (0,_clerk_shared_utils__WEBPACK_IMPORTED_MODULE_4__.handleValueOrFn)(opts.isSatellite, new URL(clerkRequest.url), _constants__WEBPACK_IMPORTED_MODULE_10__.IS_SATELLITE);\n    const domain = (0,_clerk_shared_utils__WEBPACK_IMPORTED_MODULE_4__.handleValueOrFn)(opts.domain, new URL(clerkRequest.url), _constants__WEBPACK_IMPORTED_MODULE_10__.DOMAIN);\n    const signInUrl = (opts == null ? void 0 : opts.signInUrl) || _constants__WEBPACK_IMPORTED_MODULE_10__.SIGN_IN_URL;\n    if (isSatellite && !proxyUrl && !domain) {\n        throw new Error(_errors__WEBPACK_IMPORTED_MODULE_11__.missingDomainAndProxy);\n    }\n    if (isSatellite && !(0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__.isHttpOrHttps)(signInUrl) && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__.isDevelopmentFromSecretKey)(opts.secretKey || _constants__WEBPACK_IMPORTED_MODULE_10__.SECRET_KEY)) {\n        throw new Error(_errors__WEBPACK_IMPORTED_MODULE_11__.missingSignInUrlInDev);\n    }\n    return {\n        proxyUrl,\n        isSatellite,\n        domain,\n        signInUrl\n    };\n};\nconst redirectAdapter = (url)=>{\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_8__[\"default\"].redirect(url, {\n        headers: {\n            [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo]: \"true\"\n        }\n    });\n};\nfunction assertAuthStatus(req, error) {\n    if (!(0,_headers_utils__WEBPACK_IMPORTED_MODULE_12__.detectClerkMiddleware)(req)) {\n        throw new Error(error);\n    }\n}\nfunction assertKey(key, onError) {\n    if (!key) {\n        onError();\n    }\n    return key;\n}\nfunction createTokenSignature(token, key) {\n    return crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_7___default()(token, key).toString();\n}\nfunction assertTokenSignature(token, key, signature) {\n    if (!signature) {\n        throw new Error(_errors__WEBPACK_IMPORTED_MODULE_11__.authSignatureInvalid);\n    }\n    const expectedSignature = createTokenSignature(token, key);\n    if (expectedSignature !== signature) {\n        throw new Error(_errors__WEBPACK_IMPORTED_MODULE_11__.authSignatureInvalid);\n    }\n}\nconst KEYLESS_ENCRYPTION_KEY = \"clerk_keyless_dummy_key\";\nfunction encryptClerkRequestData(requestData, keylessModeKeys) {\n    const isEmpty = (obj)=>{\n        if (!obj) {\n            return true;\n        }\n        return !Object.values(obj).some((v)=>v !== void 0);\n    };\n    if (isEmpty(requestData) && isEmpty(keylessModeKeys)) {\n        return;\n    }\n    if (requestData.secretKey && !_constants__WEBPACK_IMPORTED_MODULE_10__.ENCRYPTION_KEY) {\n        _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warnOnce(\"Clerk: Missing `CLERK_ENCRYPTION_KEY`. Required for propagating `secretKey` middleware option. See docs: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys\");\n        return;\n    }\n    const maybeKeylessEncryptionKey = (0,_clerk_shared_utils__WEBPACK_IMPORTED_MODULE_4__.isProductionEnvironment)() ? _constants__WEBPACK_IMPORTED_MODULE_10__.ENCRYPTION_KEY || assertKey(_constants__WEBPACK_IMPORTED_MODULE_10__.SECRET_KEY, ()=>_errorThrower__WEBPACK_IMPORTED_MODULE_13__.errorThrower.throwMissingSecretKeyError()) : _constants__WEBPACK_IMPORTED_MODULE_10__.ENCRYPTION_KEY || _constants__WEBPACK_IMPORTED_MODULE_10__.SECRET_KEY || KEYLESS_ENCRYPTION_KEY;\n    return crypto_js_aes__WEBPACK_IMPORTED_MODULE_5___default().encrypt(JSON.stringify({\n        ...keylessModeKeys,\n        ...requestData\n    }), maybeKeylessEncryptionKey).toString();\n}\nfunction decryptClerkRequestData(encryptedRequestData) {\n    if (!encryptedRequestData) {\n        return {};\n    }\n    const maybeKeylessEncryptionKey = (0,_clerk_shared_utils__WEBPACK_IMPORTED_MODULE_4__.isProductionEnvironment)() ? _constants__WEBPACK_IMPORTED_MODULE_10__.ENCRYPTION_KEY || _constants__WEBPACK_IMPORTED_MODULE_10__.SECRET_KEY : _constants__WEBPACK_IMPORTED_MODULE_10__.ENCRYPTION_KEY || _constants__WEBPACK_IMPORTED_MODULE_10__.SECRET_KEY || KEYLESS_ENCRYPTION_KEY;\n    try {\n        return decryptData(encryptedRequestData, maybeKeylessEncryptionKey);\n    } catch  {\n        if (_utils_feature_flags__WEBPACK_IMPORTED_MODULE_14__.canUseKeyless) {\n            try {\n                return decryptData(encryptedRequestData, KEYLESS_ENCRYPTION_KEY);\n            } catch  {\n                throwInvalidEncryptionKey();\n            }\n        }\n        throwInvalidEncryptionKey();\n    }\n}\nfunction throwInvalidEncryptionKey() {\n    if ((0,_clerk_shared_utils__WEBPACK_IMPORTED_MODULE_4__.isProductionEnvironment)()) {\n        throw new Error(_errors__WEBPACK_IMPORTED_MODULE_11__.encryptionKeyInvalid);\n    }\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_11__.encryptionKeyInvalidDev);\n}\nfunction decryptData(data, key) {\n    const decryptedBytes = crypto_js_aes__WEBPACK_IMPORTED_MODULE_5___default().decrypt(data, key);\n    const encoded = decryptedBytes.toString((crypto_js_enc_utf8__WEBPACK_IMPORTED_MODULE_6___default()));\n    return JSON.parse(encoded);\n}\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js":
/*!******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDebugLogger: () => (/* binding */ createDebugLogger),\n/* harmony export */   withLogger: () => (/* binding */ withLogger)\n/* harmony export */ });\n/* harmony import */ var next_package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/package.json */ \"(middleware)/./node_modules/next/package.json\");\n/* harmony import */ var _logFormatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logFormatter */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js\");\n\n\n\nconst createDebugLogger = (name, formatter)=>()=>{\n        const entries = [];\n        let isEnabled = false;\n        return {\n            enable: ()=>{\n                isEnabled = true;\n            },\n            debug: (...args)=>{\n                if (isEnabled) {\n                    entries.push(args.map((arg)=>typeof arg === \"function\" ? arg() : arg));\n                }\n            },\n            commit: ()=>{\n                if (isEnabled) {\n                    console.log(debugLogHeader(name));\n                    for (const log of entries){\n                        let output = formatter(log);\n                        output = output.split(\"\\n\").map((l)=>`  ${l}`).join(\"\\n\");\n                        if (process.env.VERCEL) {\n                            output = truncate(output, 4096);\n                        }\n                        console.log(output);\n                    }\n                    console.log(debugLogFooter(name));\n                }\n            }\n        };\n    };\nconst withLogger = (loggerFactoryOrName, handlerCtor)=>{\n    return (...args)=>{\n        const factory = typeof loggerFactoryOrName === \"string\" ? createDebugLogger(loggerFactoryOrName, _logFormatter__WEBPACK_IMPORTED_MODULE_1__.logFormatter) : loggerFactoryOrName;\n        const logger = factory();\n        const handler = handlerCtor(logger);\n        try {\n            const res = handler(...args);\n            if (typeof res === \"object\" && \"then\" in res && typeof res.then === \"function\") {\n                return res.then((val)=>{\n                    logger.commit();\n                    return val;\n                }).catch((err)=>{\n                    logger.commit();\n                    throw err;\n                });\n            }\n            logger.commit();\n            return res;\n        } catch (err) {\n            logger.commit();\n            throw err;\n        }\n    };\n};\nfunction debugLogHeader(name) {\n    return `[clerk debug start: ${name}]`;\n}\nfunction debugLogFooter(name) {\n    return `[clerk debug end: ${name}] (@clerk/nextjs=${\"6.11.3\"},next=${next_package_json__WEBPACK_IMPORTED_MODULE_0__.version},timestamp=${Math.round(/* @__PURE__ */ new Date().getTime() / 1e3)})`;\n}\nfunction truncate(str, maxLength) {\n    const encoder = new TextEncoder();\n    const decoder = new TextDecoder(\"utf-8\");\n    const encodedString = encoder.encode(str);\n    const truncatedString = encodedString.slice(0, maxLength);\n    return decoder.decode(truncatedString).replace(/\\uFFFD/g, \"\");\n}\n //# sourceMappingURL=debugLogger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvZGVidWdMb2dnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QjtBQUNVO0FBQ007QUFDOUMsTUFBTUUsb0JBQW9CLENBQUNDLE1BQU1DLFlBQWM7UUFDN0MsTUFBTUMsVUFBVSxFQUFFO1FBQ2xCLElBQUlDLFlBQVk7UUFDaEIsT0FBTztZQUNMQyxRQUFRO2dCQUNORCxZQUFZO1lBQ2Q7WUFDQUUsT0FBTyxDQUFDLEdBQUdDO2dCQUNULElBQUlILFdBQVc7b0JBQ2JELFFBQVFLLElBQUksQ0FBQ0QsS0FBS0UsR0FBRyxDQUFDLENBQUNDLE1BQVEsT0FBT0EsUUFBUSxhQUFhQSxRQUFRQTtnQkFDckU7WUFDRjtZQUNBQyxRQUFRO2dCQUNOLElBQUlQLFdBQVc7b0JBQ2JRLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZWI7b0JBQzNCLEtBQUssTUFBTVksT0FBT1YsUUFBUzt3QkFDekIsSUFBSVksU0FBU2IsVUFBVVc7d0JBQ3ZCRSxTQUFTQSxPQUFPQyxLQUFLLENBQUMsTUFBTVAsR0FBRyxDQUFDLENBQUNRLElBQU0sQ0FBQyxFQUFFLEVBQUVBLEVBQUUsQ0FBQyxFQUFFQyxJQUFJLENBQUM7d0JBQ3RELElBQUlDLFFBQVFDLEdBQUcsQ0FBQ0MsTUFBTSxFQUFFOzRCQUN0Qk4sU0FBU08sU0FBU1AsUUFBUTt3QkFDNUI7d0JBQ0FILFFBQVFDLEdBQUcsQ0FBQ0U7b0JBQ2Q7b0JBQ0FILFFBQVFDLEdBQUcsQ0FBQ1UsZUFBZXRCO2dCQUM3QjtZQUNGO1FBQ0Y7SUFDRjtBQUNBLE1BQU11QixhQUFhLENBQUNDLHFCQUFxQkM7SUFDdkMsT0FBTyxDQUFDLEdBQUduQjtRQUNULE1BQU1vQixVQUFVLE9BQU9GLHdCQUF3QixXQUFXekIsa0JBQWtCeUIscUJBQXFCMUIsdURBQVlBLElBQUkwQjtRQUNqSCxNQUFNRyxTQUFTRDtRQUNmLE1BQU1FLFVBQVVILFlBQVlFO1FBQzVCLElBQUk7WUFDRixNQUFNRSxNQUFNRCxXQUFXdEI7WUFDdkIsSUFBSSxPQUFPdUIsUUFBUSxZQUFZLFVBQVVBLE9BQU8sT0FBT0EsSUFBSUMsSUFBSSxLQUFLLFlBQVk7Z0JBQzlFLE9BQU9ELElBQUlDLElBQUksQ0FBQyxDQUFDQztvQkFDZkosT0FBT2pCLE1BQU07b0JBQ2IsT0FBT3FCO2dCQUNULEdBQUdDLEtBQUssQ0FBQyxDQUFDQztvQkFDUk4sT0FBT2pCLE1BQU07b0JBQ2IsTUFBTXVCO2dCQUNSO1lBQ0Y7WUFDQU4sT0FBT2pCLE1BQU07WUFDYixPQUFPbUI7UUFDVCxFQUFFLE9BQU9JLEtBQUs7WUFDWk4sT0FBT2pCLE1BQU07WUFDYixNQUFNdUI7UUFDUjtJQUNGO0FBQ0Y7QUFDQSxTQUFTcEIsZUFBZWIsSUFBSTtJQUMxQixPQUFPLENBQUMsb0JBQW9CLEVBQUVBLEtBQUssQ0FBQyxDQUFDO0FBQ3ZDO0FBQ0EsU0FBU3NCLGVBQWV0QixJQUFJO0lBQzFCLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRUEsS0FBSyxpQkFBaUIsRUFBRSxTQUFTLE1BQU0sRUFBRUgsc0RBQWUsQ0FBQyxXQUFXLEVBQUVzQyxLQUFLQyxLQUFLLENBQUMsYUFBYyxHQUFHLElBQUlDLE9BQVFDLE9BQU8sS0FBSyxLQUFLLENBQUMsQ0FBQztBQUMvSjtBQUNBLFNBQVNqQixTQUFTa0IsR0FBRyxFQUFFQyxTQUFTO0lBQzlCLE1BQU1DLFVBQVUsSUFBSUM7SUFDcEIsTUFBTUMsVUFBVSxJQUFJQyxZQUFZO0lBQ2hDLE1BQU1DLGdCQUFnQkosUUFBUUssTUFBTSxDQUFDUDtJQUNyQyxNQUFNUSxrQkFBa0JGLGNBQWNHLEtBQUssQ0FBQyxHQUFHUjtJQUMvQyxPQUFPRyxRQUFRTSxNQUFNLENBQUNGLGlCQUFpQkcsT0FBTyxDQUFDLFdBQVc7QUFDNUQ7QUFJRSxDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS91dGlscy9kZWJ1Z0xvZ2dlci5qcz85MWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgbmV4dFBrZyBmcm9tIFwibmV4dC9wYWNrYWdlLmpzb25cIjtcbmltcG9ydCB7IGxvZ0Zvcm1hdHRlciB9IGZyb20gXCIuL2xvZ0Zvcm1hdHRlclwiO1xuY29uc3QgY3JlYXRlRGVidWdMb2dnZXIgPSAobmFtZSwgZm9ybWF0dGVyKSA9PiAoKSA9PiB7XG4gIGNvbnN0IGVudHJpZXMgPSBbXTtcbiAgbGV0IGlzRW5hYmxlZCA9IGZhbHNlO1xuICByZXR1cm4ge1xuICAgIGVuYWJsZTogKCkgPT4ge1xuICAgICAgaXNFbmFibGVkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRlYnVnOiAoLi4uYXJncykgPT4ge1xuICAgICAgaWYgKGlzRW5hYmxlZCkge1xuICAgICAgICBlbnRyaWVzLnB1c2goYXJncy5tYXAoKGFyZykgPT4gdHlwZW9mIGFyZyA9PT0gXCJmdW5jdGlvblwiID8gYXJnKCkgOiBhcmcpKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNvbW1pdDogKCkgPT4ge1xuICAgICAgaWYgKGlzRW5hYmxlZCkge1xuICAgICAgICBjb25zb2xlLmxvZyhkZWJ1Z0xvZ0hlYWRlcihuYW1lKSk7XG4gICAgICAgIGZvciAoY29uc3QgbG9nIG9mIGVudHJpZXMpIHtcbiAgICAgICAgICBsZXQgb3V0cHV0ID0gZm9ybWF0dGVyKGxvZyk7XG4gICAgICAgICAgb3V0cHV0ID0gb3V0cHV0LnNwbGl0KFwiXFxuXCIpLm1hcCgobCkgPT4gYCAgJHtsfWApLmpvaW4oXCJcXG5cIik7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52LlZFUkNFTCkge1xuICAgICAgICAgICAgb3V0cHV0ID0gdHJ1bmNhdGUob3V0cHV0LCA0MDk2KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc29sZS5sb2cob3V0cHV0KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhkZWJ1Z0xvZ0Zvb3RlcihuYW1lKSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcbmNvbnN0IHdpdGhMb2dnZXIgPSAobG9nZ2VyRmFjdG9yeU9yTmFtZSwgaGFuZGxlckN0b3IpID0+IHtcbiAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3QgZmFjdG9yeSA9IHR5cGVvZiBsb2dnZXJGYWN0b3J5T3JOYW1lID09PSBcInN0cmluZ1wiID8gY3JlYXRlRGVidWdMb2dnZXIobG9nZ2VyRmFjdG9yeU9yTmFtZSwgbG9nRm9ybWF0dGVyKSA6IGxvZ2dlckZhY3RvcnlPck5hbWU7XG4gICAgY29uc3QgbG9nZ2VyID0gZmFjdG9yeSgpO1xuICAgIGNvbnN0IGhhbmRsZXIgPSBoYW5kbGVyQ3Rvcihsb2dnZXIpO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBoYW5kbGVyKC4uLmFyZ3MpO1xuICAgICAgaWYgKHR5cGVvZiByZXMgPT09IFwib2JqZWN0XCIgJiYgXCJ0aGVuXCIgaW4gcmVzICYmIHR5cGVvZiByZXMudGhlbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiByZXMudGhlbigodmFsKSA9PiB7XG4gICAgICAgICAgbG9nZ2VyLmNvbW1pdCgpO1xuICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICBsb2dnZXIuY29tbWl0KCk7XG4gICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGxvZ2dlci5jb21taXQoKTtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBsb2dnZXIuY29tbWl0KCk7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICB9O1xufTtcbmZ1bmN0aW9uIGRlYnVnTG9nSGVhZGVyKG5hbWUpIHtcbiAgcmV0dXJuIGBbY2xlcmsgZGVidWcgc3RhcnQ6ICR7bmFtZX1dYDtcbn1cbmZ1bmN0aW9uIGRlYnVnTG9nRm9vdGVyKG5hbWUpIHtcbiAgcmV0dXJuIGBbY2xlcmsgZGVidWcgZW5kOiAke25hbWV9XSAoQGNsZXJrL25leHRqcz0ke1wiNi4xMS4zXCJ9LG5leHQ9JHtuZXh0UGtnLnZlcnNpb259LHRpbWVzdGFtcD0ke01hdGgucm91bmQoKC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgLyAxZTMpfSlgO1xufVxuZnVuY3Rpb24gdHJ1bmNhdGUoc3RyLCBtYXhMZW5ndGgpIHtcbiAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKFwidXRmLThcIik7XG4gIGNvbnN0IGVuY29kZWRTdHJpbmcgPSBlbmNvZGVyLmVuY29kZShzdHIpO1xuICBjb25zdCB0cnVuY2F0ZWRTdHJpbmcgPSBlbmNvZGVkU3RyaW5nLnNsaWNlKDAsIG1heExlbmd0aCk7XG4gIHJldHVybiBkZWNvZGVyLmRlY29kZSh0cnVuY2F0ZWRTdHJpbmcpLnJlcGxhY2UoL1xcdUZGRkQvZywgXCJcIik7XG59XG5leHBvcnQge1xuICBjcmVhdGVEZWJ1Z0xvZ2dlcixcbiAgd2l0aExvZ2dlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnTG9nZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJuZXh0UGtnIiwibG9nRm9ybWF0dGVyIiwiY3JlYXRlRGVidWdMb2dnZXIiLCJuYW1lIiwiZm9ybWF0dGVyIiwiZW50cmllcyIsImlzRW5hYmxlZCIsImVuYWJsZSIsImRlYnVnIiwiYXJncyIsInB1c2giLCJtYXAiLCJhcmciLCJjb21taXQiLCJjb25zb2xlIiwibG9nIiwiZGVidWdMb2dIZWFkZXIiLCJvdXRwdXQiLCJzcGxpdCIsImwiLCJqb2luIiwicHJvY2VzcyIsImVudiIsIlZFUkNFTCIsInRydW5jYXRlIiwiZGVidWdMb2dGb290ZXIiLCJ3aXRoTG9nZ2VyIiwibG9nZ2VyRmFjdG9yeU9yTmFtZSIsImhhbmRsZXJDdG9yIiwiZmFjdG9yeSIsImxvZ2dlciIsImhhbmRsZXIiLCJyZXMiLCJ0aGVuIiwidmFsIiwiY2F0Y2giLCJlcnIiLCJ2ZXJzaW9uIiwiTWF0aCIsInJvdW5kIiwiRGF0ZSIsImdldFRpbWUiLCJzdHIiLCJtYXhMZW5ndGgiLCJlbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJkZWNvZGVyIiwiVGV4dERlY29kZXIiLCJlbmNvZGVkU3RyaW5nIiwiZW5jb2RlIiwidHJ1bmNhdGVkU3RyaW5nIiwic2xpY2UiLCJkZWNvZGUiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js":
/*!********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canUseKeyless: () => (/* binding */ canUseKeyless)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/utils */ \"(middleware)/./node_modules/@clerk/shared/dist/utils/index.mjs\");\n/* harmony import */ var _server_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _sdk_versions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sdk-versions */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/sdk-versions.js\");\n\n\n\n\nconst canUseKeyless = !_sdk_versions__WEBPACK_IMPORTED_MODULE_1__.isNextWithUnstableServerActions && // Next.js will inline the value of 'development' or 'production' on the client bundle, so this is client-safe.\n(0,_clerk_shared_utils__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentEnvironment)() && !_server_constants__WEBPACK_IMPORTED_MODULE_2__.KEYLESS_DISABLED;\n //# sourceMappingURL=feature-flags.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvZmVhdHVyZS1mbGFncy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThCO0FBQ2lDO0FBQ1I7QUFDVTtBQUNqRSxNQUFNRyxnQkFBZ0IsQ0FBQ0QsMEVBQStCQSxJQUFJLCtHQUErRztBQUN6S0YsNkVBQXdCQSxNQUFNLENBQUNDLCtEQUFnQkE7QUFHN0MsQ0FDRix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvZmVhdHVyZS1mbGFncy5qcz8yZjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBpc0RldmVsb3BtZW50RW52aXJvbm1lbnQgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC91dGlsc1wiO1xuaW1wb3J0IHsgS0VZTEVTU19ESVNBQkxFRCB9IGZyb20gXCIuLi9zZXJ2ZXIvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBpc05leHRXaXRoVW5zdGFibGVTZXJ2ZXJBY3Rpb25zIH0gZnJvbSBcIi4vc2RrLXZlcnNpb25zXCI7XG5jb25zdCBjYW5Vc2VLZXlsZXNzID0gIWlzTmV4dFdpdGhVbnN0YWJsZVNlcnZlckFjdGlvbnMgJiYgLy8gTmV4dC5qcyB3aWxsIGlubGluZSB0aGUgdmFsdWUgb2YgJ2RldmVsb3BtZW50JyBvciAncHJvZHVjdGlvbicgb24gdGhlIGNsaWVudCBidW5kbGUsIHNvIHRoaXMgaXMgY2xpZW50LXNhZmUuXG5pc0RldmVsb3BtZW50RW52aXJvbm1lbnQoKSAmJiAhS0VZTEVTU19ESVNBQkxFRDtcbmV4cG9ydCB7XG4gIGNhblVzZUtleWxlc3Ncbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZWF0dXJlLWZsYWdzLmpzLm1hcCJdLCJuYW1lcyI6WyJpc0RldmVsb3BtZW50RW52aXJvbm1lbnQiLCJLRVlMRVNTX0RJU0FCTEVEIiwiaXNOZXh0V2l0aFVuc3RhYmxlU2VydmVyQWN0aW9ucyIsImNhblVzZUtleWxlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _removeBasePath__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removeBasePath */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/removeBasePath.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _removeBasePath__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _removeBasePath__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./response */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/response.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _response__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _response__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _serverRedirectWithAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serverRedirectWithAuth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _serverRedirectWithAuth__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _serverRedirectWithAuth__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFpQztBQUNOO0FBQ2MsQ0FDekMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL2luZGV4LmpzP2VlYzQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vcmVtb3ZlQmFzZVBhdGhcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Jlc3BvbnNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZXJ2ZXJSZWRpcmVjdFdpdGhBdXRoXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logFormatter: () => (/* binding */ logFormatter)\n/* harmony export */ });\n\nconst maskSecretKey = (str)=>{\n    if (!str || typeof str !== \"string\") {\n        return str;\n    }\n    try {\n        return (str || \"\").replace(/^(sk_(live|test)_)(.+?)(.{3})$/, \"$1*********$4\");\n    } catch  {\n        return \"\";\n    }\n};\nconst logFormatter = (entry)=>{\n    return (Array.isArray(entry) ? entry : [\n        entry\n    ]).map((entry2)=>{\n        if (typeof entry2 === \"string\") {\n            return maskSecretKey(entry2);\n        }\n        const masked = Object.fromEntries(Object.entries(entry2).map(([k, v])=>[\n                k,\n                maskSecretKey(v)\n            ]));\n        return JSON.stringify(masked, null, 2);\n    }).join(\", \");\n};\n //# sourceMappingURL=logFormatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvbG9nRm9ybWF0dGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBOEI7QUFDOUIsTUFBTUEsZ0JBQWdCLENBQUNDO0lBQ3JCLElBQUksQ0FBQ0EsT0FBTyxPQUFPQSxRQUFRLFVBQVU7UUFDbkMsT0FBT0E7SUFDVDtJQUNBLElBQUk7UUFDRixPQUFPLENBQUNBLE9BQU8sRUFBQyxFQUFHQyxPQUFPLENBQUMsa0NBQWtDO0lBQy9ELEVBQUUsT0FBTTtRQUNOLE9BQU87SUFDVDtBQUNGO0FBQ0EsTUFBTUMsZUFBZSxDQUFDQztJQUNwQixPQUFPLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0YsU0FBU0EsUUFBUTtRQUFDQTtLQUFNLEVBQUVHLEdBQUcsQ0FBQyxDQUFDQztRQUNuRCxJQUFJLE9BQU9BLFdBQVcsVUFBVTtZQUM5QixPQUFPUixjQUFjUTtRQUN2QjtRQUNBLE1BQU1DLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0QsT0FBT0UsT0FBTyxDQUFDSixRQUFRRCxHQUFHLENBQUMsQ0FBQyxDQUFDTSxHQUFHQyxFQUFFLEdBQUs7Z0JBQUNEO2dCQUFHYixjQUFjYzthQUFHO1FBQzlGLE9BQU9DLEtBQUtDLFNBQVMsQ0FBQ1AsUUFBUSxNQUFNO0lBQ3RDLEdBQUdRLElBQUksQ0FBQztBQUNWO0FBR0UsQ0FDRix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvbG9nRm9ybWF0dGVyLmpzPzI1OTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmNvbnN0IG1hc2tTZWNyZXRLZXkgPSAoc3RyKSA9PiB7XG4gIGlmICghc3RyIHx8IHR5cGVvZiBzdHIgIT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIChzdHIgfHwgXCJcIikucmVwbGFjZSgvXihza18obGl2ZXx0ZXN0KV8pKC4rPykoLnszfSkkLywgXCIkMSoqKioqKioqKiQ0XCIpO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxufTtcbmNvbnN0IGxvZ0Zvcm1hdHRlciA9IChlbnRyeSkgPT4ge1xuICByZXR1cm4gKEFycmF5LmlzQXJyYXkoZW50cnkpID8gZW50cnkgOiBbZW50cnldKS5tYXAoKGVudHJ5MikgPT4ge1xuICAgIGlmICh0eXBlb2YgZW50cnkyID09PSBcInN0cmluZ1wiKSB7XG4gICAgICByZXR1cm4gbWFza1NlY3JldEtleShlbnRyeTIpO1xuICAgIH1cbiAgICBjb25zdCBtYXNrZWQgPSBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoZW50cnkyKS5tYXAoKFtrLCB2XSkgPT4gW2ssIG1hc2tTZWNyZXRLZXkodildKSk7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG1hc2tlZCwgbnVsbCwgMik7XG4gIH0pLmpvaW4oXCIsIFwiKTtcbn07XG5leHBvcnQge1xuICBsb2dGb3JtYXR0ZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dGb3JtYXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbIm1hc2tTZWNyZXRLZXkiLCJzdHIiLCJyZXBsYWNlIiwibG9nRm9ybWF0dGVyIiwiZW50cnkiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJlbnRyeTIiLCJtYXNrZWQiLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImVudHJpZXMiLCJrIiwidiIsIkpTT04iLCJzdHJpbmdpZnkiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/removeBasePath.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/removeBasePath.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeBasePath: () => (/* binding */ removeBasePath)\n/* harmony export */ });\n\nfunction removeBasePath(to) {\n    let destination = to;\n    const basePath = \"\";\n    if (basePath && destination.startsWith(basePath)) {\n        destination = destination.slice(basePath.length);\n    }\n    return destination;\n}\n //# sourceMappingURL=removeBasePath.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvcmVtb3ZlQmFzZVBhdGguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUE4QjtBQUM5QixTQUFTQSxlQUFlQyxFQUFFO0lBQ3hCLElBQUlDLGNBQWNEO0lBQ2xCLE1BQU1FLFdBQVdDLEVBQWtDO0lBQ25ELElBQUlELFlBQVlELFlBQVlLLFVBQVUsQ0FBQ0osV0FBVztRQUNoREQsY0FBY0EsWUFBWU0sS0FBSyxDQUFDTCxTQUFTTSxNQUFNO0lBQ2pEO0lBQ0EsT0FBT1A7QUFDVDtBQUdFLENBQ0YsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL3JlbW92ZUJhc2VQYXRoLmpzP2Y4YTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmZ1bmN0aW9uIHJlbW92ZUJhc2VQYXRoKHRvKSB7XG4gIGxldCBkZXN0aW5hdGlvbiA9IHRvO1xuICBjb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEg7XG4gIGlmIChiYXNlUGF0aCAmJiBkZXN0aW5hdGlvbi5zdGFydHNXaXRoKGJhc2VQYXRoKSkge1xuICAgIGRlc3RpbmF0aW9uID0gZGVzdGluYXRpb24uc2xpY2UoYmFzZVBhdGgubGVuZ3RoKTtcbiAgfVxuICByZXR1cm4gZGVzdGluYXRpb247XG59XG5leHBvcnQge1xuICByZW1vdmVCYXNlUGF0aFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW92ZUJhc2VQYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVCYXNlUGF0aCIsInRvIiwiZGVzdGluYXRpb24iLCJiYXNlUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUk9VVEVSX0JBU0VQQVRIIiwic3RhcnRzV2l0aCIsInNsaWNlIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/removeBasePath.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/response.js":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/response.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isRedirect: () => (/* binding */ isRedirect),\n/* harmony export */   setHeader: () => (/* binding */ setHeader)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\");\n\n\nconst isRedirect = (res)=>{\n    return res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.NextRedirect);\n};\nconst setHeader = (res, name, val)=>{\n    res.headers.set(name, val);\n    return res;\n};\n //# sourceMappingURL=response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThCO0FBQzRCO0FBQzFELE1BQU1FLGFBQWEsQ0FBQ0M7SUFDbEIsT0FBT0EsSUFBSUMsT0FBTyxDQUFDQyxHQUFHLENBQUNKLGlEQUFhQSxDQUFDSyxPQUFPLENBQUNDLFlBQVk7QUFDM0Q7QUFDQSxNQUFNQyxZQUFZLENBQUNMLEtBQUtNLE1BQU1DO0lBQzVCUCxJQUFJQyxPQUFPLENBQUNPLEdBQUcsQ0FBQ0YsTUFBTUM7SUFDdEIsT0FBT1A7QUFDVDtBQUlFLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL3Jlc3BvbnNlLmpzPzU2YmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCB7IGNvbnN0YW50cyBhcyBuZXh0Q29uc3RhbnRzIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuY29uc3QgaXNSZWRpcmVjdCA9IChyZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5oZWFkZXJzLmdldChuZXh0Q29uc3RhbnRzLkhlYWRlcnMuTmV4dFJlZGlyZWN0KTtcbn07XG5jb25zdCBzZXRIZWFkZXIgPSAocmVzLCBuYW1lLCB2YWwpID0+IHtcbiAgcmVzLmhlYWRlcnMuc2V0KG5hbWUsIHZhbCk7XG4gIHJldHVybiByZXM7XG59O1xuZXhwb3J0IHtcbiAgaXNSZWRpcmVjdCxcbiAgc2V0SGVhZGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsIm5leHRDb25zdGFudHMiLCJpc1JlZGlyZWN0IiwicmVzIiwiaGVhZGVycyIsImdldCIsIkhlYWRlcnMiLCJOZXh0UmVkaXJlY3QiLCJzZXRIZWFkZXIiLCJuYW1lIiwidmFsIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/sdk-versions.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/sdk-versions.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNext13: () => (/* binding */ isNext13),\n/* harmony export */   isNextWithUnstableServerActions: () => (/* binding */ isNextWithUnstableServerActions)\n/* harmony export */ });\n/* harmony import */ var next_package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/package.json */ \"(middleware)/./node_modules/next/package.json\");\n\n\nconst isNext13 = next_package_json__WEBPACK_IMPORTED_MODULE_0__.version.startsWith(\"13.\");\nconst isNextWithUnstableServerActions = isNext13 || next_package_json__WEBPACK_IMPORTED_MODULE_0__.version.startsWith(\"14.0\");\n //# sourceMappingURL=sdk-versions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvc2RrLXZlcnNpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNVO0FBQ3hDLE1BQU1DLFdBQVdELHNEQUFlLENBQUNHLFVBQVUsQ0FBQztBQUM1QyxNQUFNQyxrQ0FBa0NILFlBQVlELHNEQUFlLENBQUNHLFVBQVUsQ0FBQztBQUk3RSxDQUNGLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS91dGlscy9zZGstdmVyc2lvbnMuanM/MDNiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xuaW1wb3J0IG5leHRQa2cgZnJvbSBcIm5leHQvcGFja2FnZS5qc29uXCI7XG5jb25zdCBpc05leHQxMyA9IG5leHRQa2cudmVyc2lvbi5zdGFydHNXaXRoKFwiMTMuXCIpO1xuY29uc3QgaXNOZXh0V2l0aFVuc3RhYmxlU2VydmVyQWN0aW9ucyA9IGlzTmV4dDEzIHx8IG5leHRQa2cudmVyc2lvbi5zdGFydHNXaXRoKFwiMTQuMFwiKTtcbmV4cG9ydCB7XG4gIGlzTmV4dDEzLFxuICBpc05leHRXaXRoVW5zdGFibGVTZXJ2ZXJBY3Rpb25zXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLXZlcnNpb25zLmpzLm1hcCJdLCJuYW1lcyI6WyJuZXh0UGtnIiwiaXNOZXh0MTMiLCJ2ZXJzaW9uIiwic3RhcnRzV2l0aCIsImlzTmV4dFdpdGhVbnN0YWJsZVNlcnZlckFjdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/sdk-versions.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverRedirectWithAuth: () => (/* binding */ serverRedirectWithAuth)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/devBrowser */ \"(middleware)/./node_modules/@clerk/shared/dist/devBrowser.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n\n\n\n\n\nconst serverRedirectWithAuth = (clerkRequest, res, opts)=>{\n    const location = res.headers.get(\"location\");\n    const shouldAppendDevBrowser = res.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo) === \"true\";\n    if (shouldAppendDevBrowser && !!location && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_2__.isDevelopmentFromSecretKey)(opts.secretKey) && clerkRequest.clerkUrl.isCrossOrigin(location)) {\n        const dbJwt = clerkRequest.cookies.get(_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.DEV_BROWSER_JWT_KEY) || \"\";\n        const url = new URL(location);\n        const urlWithDevBrowser = (0,_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.setDevBrowserJWTInURL)(url, dbJwt);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].redirect(urlWithDevBrowser.href, res);\n    }\n    return res;\n};\n //# sourceMappingURL=serverRedirectWithAuth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvc2VydmVyUmVkaXJlY3RXaXRoQXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4QjtBQUNzQjtBQUNrQztBQUN0QjtBQUNyQjtBQUMzQyxNQUFNSyx5QkFBeUIsQ0FBQ0MsY0FBY0MsS0FBS0M7SUFDakQsTUFBTUMsV0FBV0YsSUFBSUcsT0FBTyxDQUFDQyxHQUFHLENBQUM7SUFDakMsTUFBTUMseUJBQXlCTCxJQUFJRyxPQUFPLENBQUNDLEdBQUcsQ0FBQ1gsOERBQVNBLENBQUNhLE9BQU8sQ0FBQ0MsZUFBZSxNQUFNO0lBQ3RGLElBQUlGLDBCQUEwQixDQUFDLENBQUNILFlBQVlOLDhFQUEwQkEsQ0FBQ0ssS0FBS08sU0FBUyxLQUFLVCxhQUFhVSxRQUFRLENBQUNDLGFBQWEsQ0FBQ1IsV0FBVztRQUN2SSxNQUFNUyxRQUFRWixhQUFhYSxPQUFPLENBQUNSLEdBQUcsQ0FBQ1YseUVBQW1CQSxLQUFLO1FBQy9ELE1BQU1tQixNQUFNLElBQUlDLElBQUlaO1FBQ3BCLE1BQU1hLG9CQUFvQnBCLCtFQUFxQkEsQ0FBQ2tCLEtBQUtGO1FBQ3JELE9BQU9kLDJGQUFxQixDQUFDa0Isa0JBQWtCRSxJQUFJLEVBQUVqQjtJQUN2RDtJQUNBLE9BQU9BO0FBQ1Q7QUFHRSxDQUNGLGtEQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS91dGlscy9zZXJ2ZXJSZWRpcmVjdFdpdGhBdXRoLmpzP2RiYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCB7IGNvbnN0YW50cyB9IGZyb20gXCJAY2xlcmsvYmFja2VuZC9pbnRlcm5hbFwiO1xuaW1wb3J0IHsgREVWX0JST1dTRVJfSldUX0tFWSwgc2V0RGV2QnJvd3NlckpXVEluVVJMIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvZGV2QnJvd3NlclwiO1xuaW1wb3J0IHsgaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXkgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9rZXlzXCI7XG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmNvbnN0IHNlcnZlclJlZGlyZWN0V2l0aEF1dGggPSAoY2xlcmtSZXF1ZXN0LCByZXMsIG9wdHMpID0+IHtcbiAgY29uc3QgbG9jYXRpb24gPSByZXMuaGVhZGVycy5nZXQoXCJsb2NhdGlvblwiKTtcbiAgY29uc3Qgc2hvdWxkQXBwZW5kRGV2QnJvd3NlciA9IHJlcy5oZWFkZXJzLmdldChjb25zdGFudHMuSGVhZGVycy5DbGVya1JlZGlyZWN0VG8pID09PSBcInRydWVcIjtcbiAgaWYgKHNob3VsZEFwcGVuZERldkJyb3dzZXIgJiYgISFsb2NhdGlvbiAmJiBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleShvcHRzLnNlY3JldEtleSkgJiYgY2xlcmtSZXF1ZXN0LmNsZXJrVXJsLmlzQ3Jvc3NPcmlnaW4obG9jYXRpb24pKSB7XG4gICAgY29uc3QgZGJKd3QgPSBjbGVya1JlcXVlc3QuY29va2llcy5nZXQoREVWX0JST1dTRVJfSldUX0tFWSkgfHwgXCJcIjtcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGxvY2F0aW9uKTtcbiAgICBjb25zdCB1cmxXaXRoRGV2QnJvd3NlciA9IHNldERldkJyb3dzZXJKV1RJblVSTCh1cmwsIGRiSnd0KTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybFdpdGhEZXZCcm93c2VyLmhyZWYsIHJlcyk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG5leHBvcnQge1xuICBzZXJ2ZXJSZWRpcmVjdFdpdGhBdXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VydmVyUmVkaXJlY3RXaXRoQXV0aC5qcy5tYXAiXSwibmFtZXMiOlsiY29uc3RhbnRzIiwiREVWX0JST1dTRVJfSldUX0tFWSIsInNldERldkJyb3dzZXJKV1RJblVSTCIsImlzRGV2ZWxvcG1lbnRGcm9tU2VjcmV0S2V5IiwiTmV4dFJlc3BvbnNlIiwic2VydmVyUmVkaXJlY3RXaXRoQXV0aCIsImNsZXJrUmVxdWVzdCIsInJlcyIsIm9wdHMiLCJsb2NhdGlvbiIsImhlYWRlcnMiLCJnZXQiLCJzaG91bGRBcHBlbmREZXZCcm93c2VyIiwiSGVhZGVycyIsIkNsZXJrUmVkaXJlY3RUbyIsInNlY3JldEtleSIsImNsZXJrVXJsIiwiaXNDcm9zc09yaWdpbiIsImRiSnd0IiwiY29va2llcyIsInVybCIsIlVSTCIsInVybFdpdGhEZXZCcm93c2VyIiwicmVkaXJlY3QiLCJocmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/cookie/dist/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cookie/dist/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */ const cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */ const cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */ const domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */ const pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst __toString = Object.prototype.toString;\nconst NullObject = /* @__PURE__ */ (()=>{\n    const C = function() {};\n    C.prototype = Object.create(null);\n    return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */ function parse(str, options) {\n    const obj = new NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2) return obj;\n    const dec = options?.decode || decode;\n    let index = 0;\n    do {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) break; // No more cookie pairs.\n        const colonIdx = str.indexOf(\";\", index);\n        const endIdx = colonIdx === -1 ? len : colonIdx;\n        if (eqIdx > endIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const keyStartIdx = startIndex(str, index, eqIdx);\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        const key = str.slice(keyStartIdx, keyEndIdx);\n        // only assign once\n        if (obj[key] === undefined) {\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\n            const value = dec(str.slice(valStartIdx, valEndIdx));\n            obj[key] = value;\n        }\n        index = endIdx + 1;\n    }while (index < len);\n    return obj;\n}\nfunction startIndex(str, index, max) {\n    do {\n        const code = str.charCodeAt(index);\n        if (code !== 0x20 /*   */  && code !== 0x09 /* \\t */ ) return index;\n    }while (++index < max);\n    return max;\n}\nfunction endIndex(str, index, min) {\n    while(index > min){\n        const code = str.charCodeAt(--index);\n        if (code !== 0x20 /*   */  && code !== 0x09 /* \\t */ ) return index + 1;\n    }\n    return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */ function serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(`argument name is invalid: ${name}`);\n    }\n    const value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(`argument val is invalid: ${val}`);\n    }\n    let str = name + \"=\" + value;\n    if (!options) return str;\n    if (options.maxAge !== undefined) {\n        if (!Number.isInteger(options.maxAge)) {\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n        }\n        str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n        if (!domainValueRegExp.test(options.domain)) {\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\n        }\n        str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n        if (!pathValueRegExp.test(options.path)) {\n            throw new TypeError(`option path is invalid: ${options.path}`);\n        }\n        str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n        if (!isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) {\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\n        }\n        str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (options.secure) {\n        str += \"; Secure\";\n    }\n    if (options.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (options.priority) {\n        const priority = typeof options.priority === \"string\" ? options.priority.toLowerCase() : undefined;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\n        }\n    }\n    if (options.sameSite) {\n        const sameSite = typeof options.sameSite === \"string\" ? options.sameSite.toLowerCase() : options.sameSite;\n        switch(sameSite){\n            case true:\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */ function decode(str) {\n    if (str.indexOf(\"%\") === -1) return str;\n    try {\n        return decodeURIComponent(str);\n    } catch (e) {\n        return str;\n    }\n}\n/**\n * Determine if value is a Date.\n */ function isDate(val) {\n    return __toString.call(val) === \"[object Date]\";\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/cookie/dist/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/aes.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/aes.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory, undef) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./enc-base64 */ \"(middleware)/./node_modules/crypto-js/enc-base64.js\"), __webpack_require__(/*! ./md5 */ \"(middleware)/./node_modules/crypto-js/md5.js\"), __webpack_require__(/*! ./evpkdf */ \"(middleware)/./node_modules/crypto-js/evpkdf.js\"), __webpack_require__(/*! ./cipher-core */ \"(middleware)/./node_modules/crypto-js/cipher-core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    (function() {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var BlockCipher = C_lib.BlockCipher;\n        var C_algo = C.algo;\n        // Lookup tables\n        var SBOX = [];\n        var INV_SBOX = [];\n        var SUB_MIX_0 = [];\n        var SUB_MIX_1 = [];\n        var SUB_MIX_2 = [];\n        var SUB_MIX_3 = [];\n        var INV_SUB_MIX_0 = [];\n        var INV_SUB_MIX_1 = [];\n        var INV_SUB_MIX_2 = [];\n        var INV_SUB_MIX_3 = [];\n        // Compute lookup tables\n        (function() {\n            // Compute double table\n            var d = [];\n            for(var i = 0; i < 256; i++){\n                if (i < 128) {\n                    d[i] = i << 1;\n                } else {\n                    d[i] = i << 1 ^ 0x11b;\n                }\n            }\n            // Walk GF(2^8)\n            var x = 0;\n            var xi = 0;\n            for(var i = 0; i < 256; i++){\n                // Compute sbox\n                var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;\n                sx = sx >>> 8 ^ sx & 0xff ^ 0x63;\n                SBOX[x] = sx;\n                INV_SBOX[sx] = x;\n                // Compute multiplication\n                var x2 = d[x];\n                var x4 = d[x2];\n                var x8 = d[x4];\n                // Compute sub bytes, mix columns tables\n                var t = d[sx] * 0x101 ^ sx * 0x1010100;\n                SUB_MIX_0[x] = t << 24 | t >>> 8;\n                SUB_MIX_1[x] = t << 16 | t >>> 16;\n                SUB_MIX_2[x] = t << 8 | t >>> 24;\n                SUB_MIX_3[x] = t;\n                // Compute inv sub bytes, inv mix columns tables\n                var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n                INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;\n                INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;\n                INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;\n                INV_SUB_MIX_3[sx] = t;\n                // Compute next counter\n                if (!x) {\n                    x = xi = 1;\n                } else {\n                    x = x2 ^ d[d[d[x8 ^ x2]]];\n                    xi ^= d[d[xi]];\n                }\n            }\n        })();\n        // Precomputed Rcon lookup\n        var RCON = [\n            0x00,\n            0x01,\n            0x02,\n            0x04,\n            0x08,\n            0x10,\n            0x20,\n            0x40,\n            0x80,\n            0x1b,\n            0x36\n        ];\n        /**\n\t     * AES block cipher algorithm.\n\t     */ var AES = C_algo.AES = BlockCipher.extend({\n            _doReset: function() {\n                var t;\n                // Skip reset of nRounds has been set before and key did not change\n                if (this._nRounds && this._keyPriorReset === this._key) {\n                    return;\n                }\n                // Shortcuts\n                var key = this._keyPriorReset = this._key;\n                var keyWords = key.words;\n                var keySize = key.sigBytes / 4;\n                // Compute number of rounds\n                var nRounds = this._nRounds = keySize + 6;\n                // Compute number of key schedule rows\n                var ksRows = (nRounds + 1) * 4;\n                // Compute key schedule\n                var keySchedule = this._keySchedule = [];\n                for(var ksRow = 0; ksRow < ksRows; ksRow++){\n                    if (ksRow < keySize) {\n                        keySchedule[ksRow] = keyWords[ksRow];\n                    } else {\n                        t = keySchedule[ksRow - 1];\n                        if (!(ksRow % keySize)) {\n                            // Rot word\n                            t = t << 8 | t >>> 24;\n                            // Sub word\n                            t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];\n                            // Mix Rcon\n                            t ^= RCON[ksRow / keySize | 0] << 24;\n                        } else if (keySize > 6 && ksRow % keySize == 4) {\n                            // Sub word\n                            t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];\n                        }\n                        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n                    }\n                }\n                // Compute inv key schedule\n                var invKeySchedule = this._invKeySchedule = [];\n                for(var invKsRow = 0; invKsRow < ksRows; invKsRow++){\n                    var ksRow = ksRows - invKsRow;\n                    if (invKsRow % 4) {\n                        var t = keySchedule[ksRow];\n                    } else {\n                        var t = keySchedule[ksRow - 4];\n                    }\n                    if (invKsRow < 4 || ksRow <= 4) {\n                        invKeySchedule[invKsRow] = t;\n                    } else {\n                        invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^ INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n                    }\n                }\n            },\n            encryptBlock: function(M, offset) {\n                this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n            },\n            decryptBlock: function(M, offset) {\n                // Swap 2nd and 4th rows\n                var t = M[offset + 1];\n                M[offset + 1] = M[offset + 3];\n                M[offset + 3] = t;\n                this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n                // Inv swap 2nd and 4th rows\n                var t = M[offset + 1];\n                M[offset + 1] = M[offset + 3];\n                M[offset + 3] = t;\n            },\n            _doCryptBlock: function(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n                // Shortcut\n                var nRounds = this._nRounds;\n                // Get input, add round key\n                var s0 = M[offset] ^ keySchedule[0];\n                var s1 = M[offset + 1] ^ keySchedule[1];\n                var s2 = M[offset + 2] ^ keySchedule[2];\n                var s3 = M[offset + 3] ^ keySchedule[3];\n                // Key schedule row counter\n                var ksRow = 4;\n                // Rounds\n                for(var round = 1; round < nRounds; round++){\n                    // Shift rows, sub bytes, mix columns, add round key\n                    var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n                    var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n                    var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n                    var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n                    // Update state\n                    s0 = t0;\n                    s1 = t1;\n                    s2 = t2;\n                    s3 = t3;\n                }\n                // Shift rows, sub bytes, add round key\n                var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n                var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n                var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n                var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n                // Set output\n                M[offset] = t0;\n                M[offset + 1] = t1;\n                M[offset + 2] = t2;\n                M[offset + 3] = t3;\n            },\n            keySize: 256 / 32\n        });\n        /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */ C.AES = BlockCipher._createHelper(AES);\n    })();\n    return CryptoJS.AES;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/aes.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/cipher-core.js":
/*!***********************************************!*\
  !*** ./node_modules/crypto-js/cipher-core.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory, undef) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./evpkdf */ \"(middleware)/./node_modules/crypto-js/evpkdf.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    /**\n\t * Cipher core components.\n\t */ CryptoJS.lib.Cipher || function(undefined) {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var Base = C_lib.Base;\n        var WordArray = C_lib.WordArray;\n        var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n        var C_enc = C.enc;\n        var Utf8 = C_enc.Utf8;\n        var Base64 = C_enc.Base64;\n        var C_algo = C.algo;\n        var EvpKDF = C_algo.EvpKDF;\n        /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */ var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n            /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */ cfg: Base.extend(),\n            /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */ createEncryptor: function(key, cfg) {\n                return this.create(this._ENC_XFORM_MODE, key, cfg);\n            },\n            /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */ createDecryptor: function(key, cfg) {\n                return this.create(this._DEC_XFORM_MODE, key, cfg);\n            },\n            /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */ init: function(xformMode, key, cfg) {\n                // Apply config defaults\n                this.cfg = this.cfg.extend(cfg);\n                // Store transform mode and key\n                this._xformMode = xformMode;\n                this._key = key;\n                // Set initial values\n                this.reset();\n            },\n            /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */ reset: function() {\n                // Reset data buffer\n                BufferedBlockAlgorithm.reset.call(this);\n                // Perform concrete-cipher logic\n                this._doReset();\n            },\n            /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */ process: function(dataUpdate) {\n                // Append\n                this._append(dataUpdate);\n                // Process available blocks\n                return this._process();\n            },\n            /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */ finalize: function(dataUpdate) {\n                // Final data update\n                if (dataUpdate) {\n                    this._append(dataUpdate);\n                }\n                // Perform concrete-cipher logic\n                var finalProcessedData = this._doFinalize();\n                return finalProcessedData;\n            },\n            keySize: 128 / 32,\n            ivSize: 128 / 32,\n            _ENC_XFORM_MODE: 1,\n            _DEC_XFORM_MODE: 2,\n            /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */ _createHelper: function() {\n                function selectCipherStrategy(key) {\n                    if (typeof key == \"string\") {\n                        return PasswordBasedCipher;\n                    } else {\n                        return SerializableCipher;\n                    }\n                }\n                return function(cipher) {\n                    return {\n                        encrypt: function(message, key, cfg) {\n                            return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n                        },\n                        decrypt: function(ciphertext, key, cfg) {\n                            return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n                        }\n                    };\n                };\n            }()\n        });\n        /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */ var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n            _doFinalize: function() {\n                // Process partial blocks\n                var finalProcessedBlocks = this._process(!!\"flush\");\n                return finalProcessedBlocks;\n            },\n            blockSize: 1\n        });\n        /**\n\t     * Mode namespace.\n\t     */ var C_mode = C.mode = {};\n        /**\n\t     * Abstract base block cipher mode template.\n\t     */ var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n            /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */ createEncryptor: function(cipher, iv) {\n                return this.Encryptor.create(cipher, iv);\n            },\n            /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */ createDecryptor: function(cipher, iv) {\n                return this.Decryptor.create(cipher, iv);\n            },\n            /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */ init: function(cipher, iv) {\n                this._cipher = cipher;\n                this._iv = iv;\n            }\n        });\n        /**\n\t     * Cipher Block Chaining mode.\n\t     */ var CBC = C_mode.CBC = function() {\n            /**\n\t         * Abstract base CBC mode.\n\t         */ var CBC = BlockCipherMode.extend();\n            /**\n\t         * CBC encryptor.\n\t         */ CBC.Encryptor = CBC.extend({\n                /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */ processBlock: function(words, offset) {\n                    // Shortcuts\n                    var cipher = this._cipher;\n                    var blockSize = cipher.blockSize;\n                    // XOR and encrypt\n                    xorBlock.call(this, words, offset, blockSize);\n                    cipher.encryptBlock(words, offset);\n                    // Remember this block to use with next block\n                    this._prevBlock = words.slice(offset, offset + blockSize);\n                }\n            });\n            /**\n\t         * CBC decryptor.\n\t         */ CBC.Decryptor = CBC.extend({\n                /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */ processBlock: function(words, offset) {\n                    // Shortcuts\n                    var cipher = this._cipher;\n                    var blockSize = cipher.blockSize;\n                    // Remember this block to use with next block\n                    var thisBlock = words.slice(offset, offset + blockSize);\n                    // Decrypt and XOR\n                    cipher.decryptBlock(words, offset);\n                    xorBlock.call(this, words, offset, blockSize);\n                    // This block becomes the previous block\n                    this._prevBlock = thisBlock;\n                }\n            });\n            function xorBlock(words, offset, blockSize) {\n                var block;\n                // Shortcut\n                var iv = this._iv;\n                // Choose mixing block\n                if (iv) {\n                    block = iv;\n                    // Remove IV for subsequent blocks\n                    this._iv = undefined;\n                } else {\n                    block = this._prevBlock;\n                }\n                // XOR blocks\n                for(var i = 0; i < blockSize; i++){\n                    words[offset + i] ^= block[i];\n                }\n            }\n            return CBC;\n        }();\n        /**\n\t     * Padding namespace.\n\t     */ var C_pad = C.pad = {};\n        /**\n\t     * PKCS #5/7 padding strategy.\n\t     */ var Pkcs7 = C_pad.Pkcs7 = {\n            /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */ pad: function(data, blockSize) {\n                // Shortcut\n                var blockSizeBytes = blockSize * 4;\n                // Count padding bytes\n                var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n                // Create padding word\n                var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;\n                // Create padding\n                var paddingWords = [];\n                for(var i = 0; i < nPaddingBytes; i += 4){\n                    paddingWords.push(paddingWord);\n                }\n                var padding = WordArray.create(paddingWords, nPaddingBytes);\n                // Add padding\n                data.concat(padding);\n            },\n            /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */ unpad: function(data) {\n                // Get number of padding bytes from last byte\n                var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\n                // Remove padding\n                data.sigBytes -= nPaddingBytes;\n            }\n        };\n        /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */ var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n            /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */ cfg: Cipher.cfg.extend({\n                mode: CBC,\n                padding: Pkcs7\n            }),\n            reset: function() {\n                var modeCreator;\n                // Reset cipher\n                Cipher.reset.call(this);\n                // Shortcuts\n                var cfg = this.cfg;\n                var iv = cfg.iv;\n                var mode = cfg.mode;\n                // Reset block mode\n                if (this._xformMode == this._ENC_XFORM_MODE) {\n                    modeCreator = mode.createEncryptor;\n                } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n                    modeCreator = mode.createDecryptor;\n                    // Keep at least one block in the buffer for unpadding\n                    this._minBufferSize = 1;\n                }\n                if (this._mode && this._mode.__creator == modeCreator) {\n                    this._mode.init(this, iv && iv.words);\n                } else {\n                    this._mode = modeCreator.call(mode, this, iv && iv.words);\n                    this._mode.__creator = modeCreator;\n                }\n            },\n            _doProcessBlock: function(words, offset) {\n                this._mode.processBlock(words, offset);\n            },\n            _doFinalize: function() {\n                var finalProcessedBlocks;\n                // Shortcut\n                var padding = this.cfg.padding;\n                // Finalize\n                if (this._xformMode == this._ENC_XFORM_MODE) {\n                    // Pad data\n                    padding.pad(this._data, this.blockSize);\n                    // Process final blocks\n                    finalProcessedBlocks = this._process(!!\"flush\");\n                } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n                    // Process final blocks\n                    finalProcessedBlocks = this._process(!!\"flush\");\n                    // Unpad data\n                    padding.unpad(finalProcessedBlocks);\n                }\n                return finalProcessedBlocks;\n            },\n            blockSize: 128 / 32\n        });\n        /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */ var CipherParams = C_lib.CipherParams = Base.extend({\n            /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */ init: function(cipherParams) {\n                this.mixIn(cipherParams);\n            },\n            /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */ toString: function(formatter) {\n                return (formatter || this.formatter).stringify(this);\n            }\n        });\n        /**\n\t     * Format namespace.\n\t     */ var C_format = C.format = {};\n        /**\n\t     * OpenSSL formatting strategy.\n\t     */ var OpenSSLFormatter = C_format.OpenSSL = {\n            /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */ stringify: function(cipherParams) {\n                var wordArray;\n                // Shortcuts\n                var ciphertext = cipherParams.ciphertext;\n                var salt = cipherParams.salt;\n                // Format\n                if (salt) {\n                    wordArray = WordArray.create([\n                        0x53616c74,\n                        0x65645f5f\n                    ]).concat(salt).concat(ciphertext);\n                } else {\n                    wordArray = ciphertext;\n                }\n                return wordArray.toString(Base64);\n            },\n            /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */ parse: function(openSSLStr) {\n                var salt;\n                // Parse base64\n                var ciphertext = Base64.parse(openSSLStr);\n                // Shortcut\n                var ciphertextWords = ciphertext.words;\n                // Test for salt\n                if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n                    // Extract salt\n                    salt = WordArray.create(ciphertextWords.slice(2, 4));\n                    // Remove salt from ciphertext\n                    ciphertextWords.splice(0, 4);\n                    ciphertext.sigBytes -= 16;\n                }\n                return CipherParams.create({\n                    ciphertext: ciphertext,\n                    salt: salt\n                });\n            }\n        };\n        /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */ var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n            /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */ cfg: Base.extend({\n                format: OpenSSLFormatter\n            }),\n            /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */ encrypt: function(cipher, message, key, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n                // Encrypt\n                var encryptor = cipher.createEncryptor(key, cfg);\n                var ciphertext = encryptor.finalize(message);\n                // Shortcut\n                var cipherCfg = encryptor.cfg;\n                // Create and return serializable cipher params\n                return CipherParams.create({\n                    ciphertext: ciphertext,\n                    key: key,\n                    iv: cipherCfg.iv,\n                    algorithm: cipher,\n                    mode: cipherCfg.mode,\n                    padding: cipherCfg.padding,\n                    blockSize: cipher.blockSize,\n                    formatter: cfg.format\n                });\n            },\n            /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */ decrypt: function(cipher, ciphertext, key, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n                // Convert string to CipherParams\n                ciphertext = this._parse(ciphertext, cfg.format);\n                // Decrypt\n                var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n                return plaintext;\n            },\n            /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */ _parse: function(ciphertext, format) {\n                if (typeof ciphertext == \"string\") {\n                    return format.parse(ciphertext, this);\n                } else {\n                    return ciphertext;\n                }\n            }\n        });\n        /**\n\t     * Key derivation function namespace.\n\t     */ var C_kdf = C.kdf = {};\n        /**\n\t     * OpenSSL key derivation function.\n\t     */ var OpenSSLKdf = C_kdf.OpenSSL = {\n            /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */ execute: function(password, keySize, ivSize, salt, hasher) {\n                // Generate random salt\n                if (!salt) {\n                    salt = WordArray.random(64 / 8);\n                }\n                // Derive key and IV\n                if (!hasher) {\n                    var key = EvpKDF.create({\n                        keySize: keySize + ivSize\n                    }).compute(password, salt);\n                } else {\n                    var key = EvpKDF.create({\n                        keySize: keySize + ivSize,\n                        hasher: hasher\n                    }).compute(password, salt);\n                }\n                // Separate key and IV\n                var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n                key.sigBytes = keySize * 4;\n                // Return params\n                return CipherParams.create({\n                    key: key,\n                    iv: iv,\n                    salt: salt\n                });\n            }\n        };\n        /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */ var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n            /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */ cfg: SerializableCipher.cfg.extend({\n                kdf: OpenSSLKdf\n            }),\n            /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */ encrypt: function(cipher, message, password, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n                // Derive key and other params\n                var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n                // Add IV to config\n                cfg.iv = derivedParams.iv;\n                // Encrypt\n                var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n                // Mix in derived params\n                ciphertext.mixIn(derivedParams);\n                return ciphertext;\n            },\n            /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */ decrypt: function(cipher, ciphertext, password, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n                // Convert string to CipherParams\n                ciphertext = this._parse(ciphertext, cfg.format);\n                // Derive key and other params\n                var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n                // Add IV to config\n                cfg.iv = derivedParams.iv;\n                // Decrypt\n                var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n                return plaintext;\n            }\n        });\n    }();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/cipher-core.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/core.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/core.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory();\n    } else {}\n})(void 0, function() {\n    /*globals window, global, require*/ /**\n\t * CryptoJS core components.\n\t */ var CryptoJS = CryptoJS || function(Math1, undefined) {\n        var crypto;\n        // Native crypto from window (Browser)\n        if (false) {}\n        // Native crypto in web worker (Browser)\n        if (typeof self !== \"undefined\" && self.crypto) {\n            crypto = self.crypto;\n        }\n        // Native crypto from worker\n        if (typeof globalThis !== \"undefined\" && globalThis.crypto) {\n            crypto = globalThis.crypto;\n        }\n        // Native (experimental IE 11) crypto from window (Browser)\n        if (!crypto && \"undefined\" !== \"undefined\" && 0) {}\n        // Native crypto from global (NodeJS)\n        if (!crypto && typeof __webpack_require__.g !== \"undefined\" && __webpack_require__.g.crypto) {\n            crypto = __webpack_require__.g.crypto;\n        }\n        // Native crypto import via require (NodeJS)\n        if (!crypto && \"function\" === \"function\") {\n            try {\n                crypto = __webpack_require__(/*! crypto */ \"?599d\");\n            } catch (err) {}\n        }\n        /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */ var cryptoSecureRandomInt = function() {\n            if (crypto) {\n                // Use getRandomValues method (Browser)\n                if (typeof crypto.getRandomValues === \"function\") {\n                    try {\n                        return crypto.getRandomValues(new Uint32Array(1))[0];\n                    } catch (err) {}\n                }\n                // Use randomBytes method (NodeJS)\n                if (typeof crypto.randomBytes === \"function\") {\n                    try {\n                        return crypto.randomBytes(4).readInt32LE();\n                    } catch (err) {}\n                }\n            }\n            throw new Error(\"Native crypto module could not be used to get secure random number.\");\n        };\n        /*\n\t     * Local polyfill of Object.create\n\n\t     */ var create = Object.create || function() {\n            function F() {}\n            return function(obj) {\n                var subtype;\n                F.prototype = obj;\n                subtype = new F();\n                F.prototype = null;\n                return subtype;\n            };\n        }();\n        /**\n\t     * CryptoJS namespace.\n\t     */ var C = {};\n        /**\n\t     * Library namespace.\n\t     */ var C_lib = C.lib = {};\n        /**\n\t     * Base object for prototypal inheritance.\n\t     */ var Base = C_lib.Base = function() {\n            return {\n                /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */ extend: function(overrides) {\n                    // Spawn\n                    var subtype = create(this);\n                    // Augment\n                    if (overrides) {\n                        subtype.mixIn(overrides);\n                    }\n                    // Create default initializer\n                    if (!subtype.hasOwnProperty(\"init\") || this.init === subtype.init) {\n                        subtype.init = function() {\n                            subtype.$super.init.apply(this, arguments);\n                        };\n                    }\n                    // Initializer's prototype is the subtype object\n                    subtype.init.prototype = subtype;\n                    // Reference supertype\n                    subtype.$super = this;\n                    return subtype;\n                },\n                /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */ create: function() {\n                    var instance = this.extend();\n                    instance.init.apply(instance, arguments);\n                    return instance;\n                },\n                /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */ init: function() {},\n                /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */ mixIn: function(properties) {\n                    for(var propertyName in properties){\n                        if (properties.hasOwnProperty(propertyName)) {\n                            this[propertyName] = properties[propertyName];\n                        }\n                    }\n                    // IE won't copy toString using the loop above\n                    if (properties.hasOwnProperty(\"toString\")) {\n                        this.toString = properties.toString;\n                    }\n                },\n                /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */ clone: function() {\n                    return this.init.prototype.extend(this);\n                }\n            };\n        }();\n        /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */ var WordArray = C_lib.WordArray = Base.extend({\n            /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */ init: function(words, sigBytes) {\n                words = this.words = words || [];\n                if (sigBytes != undefined) {\n                    this.sigBytes = sigBytes;\n                } else {\n                    this.sigBytes = words.length * 4;\n                }\n            },\n            /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */ toString: function(encoder) {\n                return (encoder || Hex).stringify(this);\n            },\n            /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */ concat: function(wordArray) {\n                // Shortcuts\n                var thisWords = this.words;\n                var thatWords = wordArray.words;\n                var thisSigBytes = this.sigBytes;\n                var thatSigBytes = wordArray.sigBytes;\n                // Clamp excess bits\n                this.clamp();\n                // Concat\n                if (thisSigBytes % 4) {\n                    // Copy one byte at a time\n                    for(var i = 0; i < thatSigBytes; i++){\n                        var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n                        thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;\n                    }\n                } else {\n                    // Copy one word at a time\n                    for(var j = 0; j < thatSigBytes; j += 4){\n                        thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];\n                    }\n                }\n                this.sigBytes += thatSigBytes;\n                // Chainable\n                return this;\n            },\n            /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */ clamp: function() {\n                // Shortcuts\n                var words = this.words;\n                var sigBytes = this.sigBytes;\n                // Clamp\n                words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;\n                words.length = Math1.ceil(sigBytes / 4);\n            },\n            /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */ clone: function() {\n                var clone = Base.clone.call(this);\n                clone.words = this.words.slice(0);\n                return clone;\n            },\n            /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */ random: function(nBytes) {\n                var words = [];\n                for(var i = 0; i < nBytes; i += 4){\n                    words.push(cryptoSecureRandomInt());\n                }\n                return new WordArray.init(words, nBytes);\n            }\n        });\n        /**\n\t     * Encoder namespace.\n\t     */ var C_enc = C.enc = {};\n        /**\n\t     * Hex encoding strategy.\n\t     */ var Hex = C_enc.Hex = {\n            /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */ stringify: function(wordArray) {\n                // Shortcuts\n                var words = wordArray.words;\n                var sigBytes = wordArray.sigBytes;\n                // Convert\n                var hexChars = [];\n                for(var i = 0; i < sigBytes; i++){\n                    var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n                    hexChars.push((bite >>> 4).toString(16));\n                    hexChars.push((bite & 0x0f).toString(16));\n                }\n                return hexChars.join(\"\");\n            },\n            /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */ parse: function(hexStr) {\n                // Shortcut\n                var hexStrLength = hexStr.length;\n                // Convert\n                var words = [];\n                for(var i = 0; i < hexStrLength; i += 2){\n                    words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;\n                }\n                return new WordArray.init(words, hexStrLength / 2);\n            }\n        };\n        /**\n\t     * Latin1 encoding strategy.\n\t     */ var Latin1 = C_enc.Latin1 = {\n            /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */ stringify: function(wordArray) {\n                // Shortcuts\n                var words = wordArray.words;\n                var sigBytes = wordArray.sigBytes;\n                // Convert\n                var latin1Chars = [];\n                for(var i = 0; i < sigBytes; i++){\n                    var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n                    latin1Chars.push(String.fromCharCode(bite));\n                }\n                return latin1Chars.join(\"\");\n            },\n            /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */ parse: function(latin1Str) {\n                // Shortcut\n                var latin1StrLength = latin1Str.length;\n                // Convert\n                var words = [];\n                for(var i = 0; i < latin1StrLength; i++){\n                    words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;\n                }\n                return new WordArray.init(words, latin1StrLength);\n            }\n        };\n        /**\n\t     * UTF-8 encoding strategy.\n\t     */ var Utf8 = C_enc.Utf8 = {\n            /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */ stringify: function(wordArray) {\n                try {\n                    return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n                } catch (e) {\n                    throw new Error(\"Malformed UTF-8 data\");\n                }\n            },\n            /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */ parse: function(utf8Str) {\n                return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n            }\n        };\n        /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */ var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n            /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */ reset: function() {\n                // Initial values\n                this._data = new WordArray.init();\n                this._nDataBytes = 0;\n            },\n            /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */ _append: function(data) {\n                // Convert string to WordArray, else assume WordArray already\n                if (typeof data == \"string\") {\n                    data = Utf8.parse(data);\n                }\n                // Append\n                this._data.concat(data);\n                this._nDataBytes += data.sigBytes;\n            },\n            /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */ _process: function(doFlush) {\n                var processedWords;\n                // Shortcuts\n                var data = this._data;\n                var dataWords = data.words;\n                var dataSigBytes = data.sigBytes;\n                var blockSize = this.blockSize;\n                var blockSizeBytes = blockSize * 4;\n                // Count blocks ready\n                var nBlocksReady = dataSigBytes / blockSizeBytes;\n                if (doFlush) {\n                    // Round up to include partial blocks\n                    nBlocksReady = Math1.ceil(nBlocksReady);\n                } else {\n                    // Round down to include only full blocks,\n                    // less the number of blocks that must remain in the buffer\n                    nBlocksReady = Math1.max((nBlocksReady | 0) - this._minBufferSize, 0);\n                }\n                // Count words ready\n                var nWordsReady = nBlocksReady * blockSize;\n                // Count bytes ready\n                var nBytesReady = Math1.min(nWordsReady * 4, dataSigBytes);\n                // Process blocks\n                if (nWordsReady) {\n                    for(var offset = 0; offset < nWordsReady; offset += blockSize){\n                        // Perform concrete-algorithm logic\n                        this._doProcessBlock(dataWords, offset);\n                    }\n                    // Remove processed words\n                    processedWords = dataWords.splice(0, nWordsReady);\n                    data.sigBytes -= nBytesReady;\n                }\n                // Return processed words\n                return new WordArray.init(processedWords, nBytesReady);\n            },\n            /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */ clone: function() {\n                var clone = Base.clone.call(this);\n                clone._data = this._data.clone();\n                return clone;\n            },\n            _minBufferSize: 0\n        });\n        /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */ var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n            /**\n\t         * Configuration options.\n\t         */ cfg: Base.extend(),\n            /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */ init: function(cfg) {\n                // Apply config defaults\n                this.cfg = this.cfg.extend(cfg);\n                // Set initial values\n                this.reset();\n            },\n            /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */ reset: function() {\n                // Reset data buffer\n                BufferedBlockAlgorithm.reset.call(this);\n                // Perform concrete-hasher logic\n                this._doReset();\n            },\n            /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */ update: function(messageUpdate) {\n                // Append\n                this._append(messageUpdate);\n                // Update the hash\n                this._process();\n                // Chainable\n                return this;\n            },\n            /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */ finalize: function(messageUpdate) {\n                // Final message update\n                if (messageUpdate) {\n                    this._append(messageUpdate);\n                }\n                // Perform concrete-hasher logic\n                var hash = this._doFinalize();\n                return hash;\n            },\n            blockSize: 512 / 32,\n            /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */ _createHelper: function(hasher) {\n                return function(message, cfg) {\n                    return new hasher.init(cfg).finalize(message);\n                };\n            },\n            /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */ _createHmacHelper: function(hasher) {\n                return function(message, key) {\n                    return new C_algo.HMAC.init(hasher, key).finalize(message);\n                };\n            }\n        });\n        /**\n\t     * Algorithm namespace.\n\t     */ var C_algo = C.algo = {};\n        return C;\n    }(Math);\n    return CryptoJS;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/core.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/enc-base64.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-js/enc-base64.js ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    (function() {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var WordArray = C_lib.WordArray;\n        var C_enc = C.enc;\n        /**\n\t     * Base64 encoding strategy.\n\t     */ var Base64 = C_enc.Base64 = {\n            /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */ stringify: function(wordArray) {\n                // Shortcuts\n                var words = wordArray.words;\n                var sigBytes = wordArray.sigBytes;\n                var map = this._map;\n                // Clamp excess bits\n                wordArray.clamp();\n                // Convert\n                var base64Chars = [];\n                for(var i = 0; i < sigBytes; i += 3){\n                    var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n                    var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;\n                    var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;\n                    var triplet = byte1 << 16 | byte2 << 8 | byte3;\n                    for(var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++){\n                        base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));\n                    }\n                }\n                // Add padding\n                var paddingChar = map.charAt(64);\n                if (paddingChar) {\n                    while(base64Chars.length % 4){\n                        base64Chars.push(paddingChar);\n                    }\n                }\n                return base64Chars.join(\"\");\n            },\n            /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */ parse: function(base64Str) {\n                // Shortcuts\n                var base64StrLength = base64Str.length;\n                var map = this._map;\n                var reverseMap = this._reverseMap;\n                if (!reverseMap) {\n                    reverseMap = this._reverseMap = [];\n                    for(var j = 0; j < map.length; j++){\n                        reverseMap[map.charCodeAt(j)] = j;\n                    }\n                }\n                // Ignore padding\n                var paddingChar = map.charAt(64);\n                if (paddingChar) {\n                    var paddingIndex = base64Str.indexOf(paddingChar);\n                    if (paddingIndex !== -1) {\n                        base64StrLength = paddingIndex;\n                    }\n                }\n                // Convert\n                return parseLoop(base64Str, base64StrLength, reverseMap);\n            },\n            _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n        };\n        function parseLoop(base64Str, base64StrLength, reverseMap) {\n            var words = [];\n            var nBytes = 0;\n            for(var i = 0; i < base64StrLength; i++){\n                if (i % 4) {\n                    var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;\n                    var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;\n                    var bitsCombined = bits1 | bits2;\n                    words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;\n                    nBytes++;\n                }\n            }\n            return WordArray.create(words, nBytes);\n        }\n    })();\n    return CryptoJS.enc.Base64;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/enc-base64.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/enc-hex.js":
/*!*******************************************!*\
  !*** ./node_modules/crypto-js/enc-hex.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    return CryptoJS.enc.Hex;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1qcy9lbmMtaGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBRSxVQUFVQSxJQUFJLEVBQUVDLE9BQU87SUFDeEIsSUFBSSxJQUEyQixFQUFFO1FBQ2hDLFdBQVc7UUFDWEUsT0FBT0QsT0FBTyxHQUFHQSxVQUFVRCxRQUFRRyxtQkFBT0EsQ0FBQyw2REFBUTtJQUNwRCxPQUNLLEVBT0o7QUFDRixHQUFFLFFBQU0sU0FBVUcsUUFBUTtJQUV6QixPQUFPQSxTQUFTQyxHQUFHLENBQUNDLEdBQUc7QUFFeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1qcy9lbmMtaGV4LmpzP2U3MzgiXSwic291cmNlc0NvbnRlbnQiOlsiOyhmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkge1xuXHRpZiAodHlwZW9mIGV4cG9ydHMgPT09IFwib2JqZWN0XCIpIHtcblx0XHQvLyBDb21tb25KU1xuXHRcdG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZShcIi4vY29yZVwiKSk7XG5cdH1cblx0ZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyBBTURcblx0XHRkZWZpbmUoW1wiLi9jb3JlXCJdLCBmYWN0b3J5KTtcblx0fVxuXHRlbHNlIHtcblx0XHQvLyBHbG9iYWwgKGJyb3dzZXIpXG5cdFx0ZmFjdG9yeShyb290LkNyeXB0b0pTKTtcblx0fVxufSh0aGlzLCBmdW5jdGlvbiAoQ3J5cHRvSlMpIHtcblxuXHRyZXR1cm4gQ3J5cHRvSlMuZW5jLkhleDtcblxufSkpOyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJyZXF1aXJlIiwiZGVmaW5lIiwiYW1kIiwiQ3J5cHRvSlMiLCJlbmMiLCJIZXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/enc-hex.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/enc-utf8.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/enc-utf8.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    return CryptoJS.enc.Utf8;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1qcy9lbmMtdXRmOC5qcyIsIm1hcHBpbmdzIjoiO0FBQUUsVUFBVUEsSUFBSSxFQUFFQyxPQUFPO0lBQ3hCLElBQUksSUFBMkIsRUFBRTtRQUNoQyxXQUFXO1FBQ1hFLE9BQU9ELE9BQU8sR0FBR0EsVUFBVUQsUUFBUUcsbUJBQU9BLENBQUMsNkRBQVE7SUFDcEQsT0FDSyxFQU9KO0FBQ0YsR0FBRSxRQUFNLFNBQVVHLFFBQVE7SUFFekIsT0FBT0EsU0FBU0MsR0FBRyxDQUFDQyxJQUFJO0FBRXpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jcnlwdG8tanMvZW5jLXV0ZjguanM/ODdiMiJdLCJzb3VyY2VzQ29udGVudCI6WyI7KGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG5cdGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gXCJvYmplY3RcIikge1xuXHRcdC8vIENvbW1vbkpTXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKFwiLi9jb3JlXCIpKTtcblx0fVxuXHRlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIEFNRFxuXHRcdGRlZmluZShbXCIuL2NvcmVcIl0sIGZhY3RvcnkpO1xuXHR9XG5cdGVsc2Uge1xuXHRcdC8vIEdsb2JhbCAoYnJvd3Nlcilcblx0XHRmYWN0b3J5KHJvb3QuQ3J5cHRvSlMpO1xuXHR9XG59KHRoaXMsIGZ1bmN0aW9uIChDcnlwdG9KUykge1xuXG5cdHJldHVybiBDcnlwdG9KUy5lbmMuVXRmODtcblxufSkpOyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJyZXF1aXJlIiwiZGVmaW5lIiwiYW1kIiwiQ3J5cHRvSlMiLCJlbmMiLCJVdGY4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/enc-utf8.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/evpkdf.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/evpkdf.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory, undef) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./sha1 */ \"(middleware)/./node_modules/crypto-js/sha1.js\"), __webpack_require__(/*! ./hmac */ \"(middleware)/./node_modules/crypto-js/hmac.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    (function() {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var Base = C_lib.Base;\n        var WordArray = C_lib.WordArray;\n        var C_algo = C.algo;\n        var MD5 = C_algo.MD5;\n        /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */ var EvpKDF = C_algo.EvpKDF = Base.extend({\n            /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */ cfg: Base.extend({\n                keySize: 128 / 32,\n                hasher: MD5,\n                iterations: 1\n            }),\n            /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */ init: function(cfg) {\n                this.cfg = this.cfg.extend(cfg);\n            },\n            /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */ compute: function(password, salt) {\n                var block;\n                // Shortcut\n                var cfg = this.cfg;\n                // Init hasher\n                var hasher = cfg.hasher.create();\n                // Initial values\n                var derivedKey = WordArray.create();\n                // Shortcuts\n                var derivedKeyWords = derivedKey.words;\n                var keySize = cfg.keySize;\n                var iterations = cfg.iterations;\n                // Generate key\n                while(derivedKeyWords.length < keySize){\n                    if (block) {\n                        hasher.update(block);\n                    }\n                    block = hasher.update(password).finalize(salt);\n                    hasher.reset();\n                    // Iterations\n                    for(var i = 1; i < iterations; i++){\n                        block = hasher.finalize(block);\n                        hasher.reset();\n                    }\n                    derivedKey.concat(block);\n                }\n                derivedKey.sigBytes = keySize * 4;\n                return derivedKey;\n            }\n        });\n        /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */ C.EvpKDF = function(password, salt, cfg) {\n            return EvpKDF.create(cfg).compute(password, salt);\n        };\n    })();\n    return CryptoJS.EvpKDF;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/evpkdf.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/hmac-sha1.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/hmac-sha1.js ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory, undef) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./sha1 */ \"(middleware)/./node_modules/crypto-js/sha1.js\"), __webpack_require__(/*! ./hmac */ \"(middleware)/./node_modules/crypto-js/hmac.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    return CryptoJS.HmacSHA1;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1qcy9obWFjLXNoYTEuanMiLCJtYXBwaW5ncyI6IjtBQUFFLFVBQVVBLElBQUksRUFBRUMsT0FBTyxFQUFFQyxLQUFLO0lBQy9CLElBQUksSUFBMkIsRUFBRTtRQUNoQyxXQUFXO1FBQ1hFLE9BQU9ELE9BQU8sR0FBR0EsVUFBVUYsUUFBUUksbUJBQU9BLENBQUMsNkRBQVEsR0FBR0EsbUJBQU9BLENBQUMsNkRBQVEsR0FBR0EsbUJBQU9BLENBQUMsNkRBQVE7SUFDMUYsT0FDSyxFQU9KO0FBQ0YsR0FBRSxRQUFNLFNBQVVHLFFBQVE7SUFFekIsT0FBT0EsU0FBU0MsUUFBUTtBQUV6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY3J5cHRvLWpzL2htYWMtc2hhMS5qcz8xNTM1Il0sInNvdXJjZXNDb250ZW50IjpbIjsoZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnksIHVuZGVmKSB7XG5cdGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gXCJvYmplY3RcIikge1xuXHRcdC8vIENvbW1vbkpTXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKFwiLi9jb3JlXCIpLCByZXF1aXJlKFwiLi9zaGExXCIpLCByZXF1aXJlKFwiLi9obWFjXCIpKTtcblx0fVxuXHRlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIEFNRFxuXHRcdGRlZmluZShbXCIuL2NvcmVcIiwgXCIuL3NoYTFcIiwgXCIuL2htYWNcIl0sIGZhY3RvcnkpO1xuXHR9XG5cdGVsc2Uge1xuXHRcdC8vIEdsb2JhbCAoYnJvd3Nlcilcblx0XHRmYWN0b3J5KHJvb3QuQ3J5cHRvSlMpO1xuXHR9XG59KHRoaXMsIGZ1bmN0aW9uIChDcnlwdG9KUykge1xuXG5cdHJldHVybiBDcnlwdG9KUy5IbWFjU0hBMTtcblxufSkpOyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsInVuZGVmIiwiZXhwb3J0cyIsIm1vZHVsZSIsInJlcXVpcmUiLCJkZWZpbmUiLCJhbWQiLCJDcnlwdG9KUyIsIkhtYWNTSEExIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/hmac-sha1.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/hmac.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/hmac.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    (function() {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var Base = C_lib.Base;\n        var C_enc = C.enc;\n        var Utf8 = C_enc.Utf8;\n        var C_algo = C.algo;\n        /**\n\t     * HMAC algorithm.\n\t     */ var HMAC = C_algo.HMAC = Base.extend({\n            /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */ init: function(hasher, key) {\n                // Init hasher\n                hasher = this._hasher = new hasher.init();\n                // Convert string to WordArray, else assume WordArray already\n                if (typeof key == \"string\") {\n                    key = Utf8.parse(key);\n                }\n                // Shortcuts\n                var hasherBlockSize = hasher.blockSize;\n                var hasherBlockSizeBytes = hasherBlockSize * 4;\n                // Allow arbitrary length keys\n                if (key.sigBytes > hasherBlockSizeBytes) {\n                    key = hasher.finalize(key);\n                }\n                // Clamp excess bits\n                key.clamp();\n                // Clone key for inner and outer pads\n                var oKey = this._oKey = key.clone();\n                var iKey = this._iKey = key.clone();\n                // Shortcuts\n                var oKeyWords = oKey.words;\n                var iKeyWords = iKey.words;\n                // XOR keys with pad constants\n                for(var i = 0; i < hasherBlockSize; i++){\n                    oKeyWords[i] ^= 0x5c5c5c5c;\n                    iKeyWords[i] ^= 0x36363636;\n                }\n                oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n                // Set initial values\n                this.reset();\n            },\n            /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */ reset: function() {\n                // Shortcut\n                var hasher = this._hasher;\n                // Reset\n                hasher.reset();\n                hasher.update(this._iKey);\n            },\n            /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */ update: function(messageUpdate) {\n                this._hasher.update(messageUpdate);\n                // Chainable\n                return this;\n            },\n            /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */ finalize: function(messageUpdate) {\n                // Shortcut\n                var hasher = this._hasher;\n                // Compute HMAC\n                var innerHash = hasher.finalize(messageUpdate);\n                hasher.reset();\n                var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n                return hmac;\n            }\n        });\n    })();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/hmac.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/md5.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/md5.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    (function(Math1) {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var WordArray = C_lib.WordArray;\n        var Hasher = C_lib.Hasher;\n        var C_algo = C.algo;\n        // Constants table\n        var T = [];\n        // Compute constants\n        (function() {\n            for(var i = 0; i < 64; i++){\n                T[i] = Math1.abs(Math1.sin(i + 1)) * 0x100000000 | 0;\n            }\n        })();\n        /**\n\t     * MD5 hash algorithm.\n\t     */ var MD5 = C_algo.MD5 = Hasher.extend({\n            _doReset: function() {\n                this._hash = new WordArray.init([\n                    0x67452301,\n                    0xefcdab89,\n                    0x98badcfe,\n                    0x10325476\n                ]);\n            },\n            _doProcessBlock: function(M, offset) {\n                // Swap endian\n                for(var i = 0; i < 16; i++){\n                    // Shortcuts\n                    var offset_i = offset + i;\n                    var M_offset_i = M[offset_i];\n                    M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;\n                }\n                // Shortcuts\n                var H = this._hash.words;\n                var M_offset_0 = M[offset + 0];\n                var M_offset_1 = M[offset + 1];\n                var M_offset_2 = M[offset + 2];\n                var M_offset_3 = M[offset + 3];\n                var M_offset_4 = M[offset + 4];\n                var M_offset_5 = M[offset + 5];\n                var M_offset_6 = M[offset + 6];\n                var M_offset_7 = M[offset + 7];\n                var M_offset_8 = M[offset + 8];\n                var M_offset_9 = M[offset + 9];\n                var M_offset_10 = M[offset + 10];\n                var M_offset_11 = M[offset + 11];\n                var M_offset_12 = M[offset + 12];\n                var M_offset_13 = M[offset + 13];\n                var M_offset_14 = M[offset + 14];\n                var M_offset_15 = M[offset + 15];\n                // Working variables\n                var a = H[0];\n                var b = H[1];\n                var c = H[2];\n                var d = H[3];\n                // Computation\n                a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n                d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n                c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n                b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n                a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n                d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n                c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n                b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n                a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n                d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n                c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n                b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n                a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n                d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n                c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n                b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n                a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n                d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n                c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n                b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n                a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n                d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n                c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n                b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n                a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n                d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n                c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n                b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n                a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n                d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n                c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n                b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n                a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n                d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n                c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n                b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n                a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n                d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n                c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n                b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n                a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n                d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n                c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n                b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n                a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n                d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n                c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n                b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n                a = II(a, b, c, d, M_offset_0, 6, T[48]);\n                d = II(d, a, b, c, M_offset_7, 10, T[49]);\n                c = II(c, d, a, b, M_offset_14, 15, T[50]);\n                b = II(b, c, d, a, M_offset_5, 21, T[51]);\n                a = II(a, b, c, d, M_offset_12, 6, T[52]);\n                d = II(d, a, b, c, M_offset_3, 10, T[53]);\n                c = II(c, d, a, b, M_offset_10, 15, T[54]);\n                b = II(b, c, d, a, M_offset_1, 21, T[55]);\n                a = II(a, b, c, d, M_offset_8, 6, T[56]);\n                d = II(d, a, b, c, M_offset_15, 10, T[57]);\n                c = II(c, d, a, b, M_offset_6, 15, T[58]);\n                b = II(b, c, d, a, M_offset_13, 21, T[59]);\n                a = II(a, b, c, d, M_offset_4, 6, T[60]);\n                d = II(d, a, b, c, M_offset_11, 10, T[61]);\n                c = II(c, d, a, b, M_offset_2, 15, T[62]);\n                b = II(b, c, d, a, M_offset_9, 21, T[63]);\n                // Intermediate hash value\n                H[0] = H[0] + a | 0;\n                H[1] = H[1] + b | 0;\n                H[2] = H[2] + c | 0;\n                H[3] = H[3] + d | 0;\n            },\n            _doFinalize: function() {\n                // Shortcuts\n                var data = this._data;\n                var dataWords = data.words;\n                var nBitsTotal = this._nDataBytes * 8;\n                var nBitsLeft = data.sigBytes * 8;\n                // Add padding\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n                var nBitsTotalH = Math1.floor(nBitsTotal / 0x100000000);\n                var nBitsTotalL = nBitsTotal;\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff | (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff | (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;\n                data.sigBytes = (dataWords.length + 1) * 4;\n                // Hash final blocks\n                this._process();\n                // Shortcuts\n                var hash = this._hash;\n                var H = hash.words;\n                // Swap endian\n                for(var i = 0; i < 4; i++){\n                    // Shortcut\n                    var H_i = H[i];\n                    H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;\n                }\n                // Return final computed hash\n                return hash;\n            },\n            clone: function() {\n                var clone = Hasher.clone.call(this);\n                clone._hash = this._hash.clone();\n                return clone;\n            }\n        });\n        function FF(a, b, c, d, x, s, t) {\n            var n = a + (b & c | ~b & d) + x + t;\n            return (n << s | n >>> 32 - s) + b;\n        }\n        function GG(a, b, c, d, x, s, t) {\n            var n = a + (b & d | c & ~d) + x + t;\n            return (n << s | n >>> 32 - s) + b;\n        }\n        function HH(a, b, c, d, x, s, t) {\n            var n = a + (b ^ c ^ d) + x + t;\n            return (n << s | n >>> 32 - s) + b;\n        }\n        function II(a, b, c, d, x, s, t) {\n            var n = a + (c ^ (b | ~d)) + x + t;\n            return (n << s | n >>> 32 - s) + b;\n        }\n        /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */ C.MD5 = Hasher._createHelper(MD5);\n        /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */ C.HmacMD5 = Hasher._createHmacHelper(MD5);\n    })(Math);\n    return CryptoJS.MD5;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/md5.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/sha1.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/sha1.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    (function() {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var WordArray = C_lib.WordArray;\n        var Hasher = C_lib.Hasher;\n        var C_algo = C.algo;\n        // Reusable object\n        var W = [];\n        /**\n\t     * SHA-1 hash algorithm.\n\t     */ var SHA1 = C_algo.SHA1 = Hasher.extend({\n            _doReset: function() {\n                this._hash = new WordArray.init([\n                    0x67452301,\n                    0xefcdab89,\n                    0x98badcfe,\n                    0x10325476,\n                    0xc3d2e1f0\n                ]);\n            },\n            _doProcessBlock: function(M, offset) {\n                // Shortcut\n                var H = this._hash.words;\n                // Working variables\n                var a = H[0];\n                var b = H[1];\n                var c = H[2];\n                var d = H[3];\n                var e = H[4];\n                // Computation\n                for(var i = 0; i < 80; i++){\n                    if (i < 16) {\n                        W[i] = M[offset + i] | 0;\n                    } else {\n                        var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n                        W[i] = n << 1 | n >>> 31;\n                    }\n                    var t = (a << 5 | a >>> 27) + e + W[i];\n                    if (i < 20) {\n                        t += (b & c | ~b & d) + 0x5a827999;\n                    } else if (i < 40) {\n                        t += (b ^ c ^ d) + 0x6ed9eba1;\n                    } else if (i < 60) {\n                        t += (b & c | b & d | c & d) - 0x70e44324;\n                    } else /* if (i < 80) */ {\n                        t += (b ^ c ^ d) - 0x359d3e2a;\n                    }\n                    e = d;\n                    d = c;\n                    c = b << 30 | b >>> 2;\n                    b = a;\n                    a = t;\n                }\n                // Intermediate hash value\n                H[0] = H[0] + a | 0;\n                H[1] = H[1] + b | 0;\n                H[2] = H[2] + c | 0;\n                H[3] = H[3] + d | 0;\n                H[4] = H[4] + e | 0;\n            },\n            _doFinalize: function() {\n                // Shortcuts\n                var data = this._data;\n                var dataWords = data.words;\n                var nBitsTotal = this._nDataBytes * 8;\n                var nBitsLeft = data.sigBytes * 8;\n                // Add padding\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n                data.sigBytes = dataWords.length * 4;\n                // Hash final blocks\n                this._process();\n                // Return final computed hash\n                return this._hash;\n            },\n            clone: function() {\n                var clone = Hasher.clone.call(this);\n                clone._hash = this._hash.clone();\n                return clone;\n            }\n        });\n        /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */ C.SHA1 = Hasher._createHelper(SHA1);\n        /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */ C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n    })();\n    return CryptoJS.SHA1;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/sha1.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/sha256.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha256.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n(function(root, factory) {\n    if (true) {\n        // CommonJS\n        module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n    } else {}\n})(void 0, function(CryptoJS) {\n    (function(Math1) {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var WordArray = C_lib.WordArray;\n        var Hasher = C_lib.Hasher;\n        var C_algo = C.algo;\n        // Initialization and round constants tables\n        var H = [];\n        var K = [];\n        // Compute constants\n        (function() {\n            function isPrime(n) {\n                var sqrtN = Math1.sqrt(n);\n                for(var factor = 2; factor <= sqrtN; factor++){\n                    if (!(n % factor)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            function getFractionalBits(n) {\n                return (n - (n | 0)) * 0x100000000 | 0;\n            }\n            var n = 2;\n            var nPrime = 0;\n            while(nPrime < 64){\n                if (isPrime(n)) {\n                    if (nPrime < 8) {\n                        H[nPrime] = getFractionalBits(Math1.pow(n, 1 / 2));\n                    }\n                    K[nPrime] = getFractionalBits(Math1.pow(n, 1 / 3));\n                    nPrime++;\n                }\n                n++;\n            }\n        })();\n        // Reusable object\n        var W = [];\n        /**\n\t     * SHA-256 hash algorithm.\n\t     */ var SHA256 = C_algo.SHA256 = Hasher.extend({\n            _doReset: function() {\n                this._hash = new WordArray.init(H.slice(0));\n            },\n            _doProcessBlock: function(M, offset) {\n                // Shortcut\n                var H = this._hash.words;\n                // Working variables\n                var a = H[0];\n                var b = H[1];\n                var c = H[2];\n                var d = H[3];\n                var e = H[4];\n                var f = H[5];\n                var g = H[6];\n                var h = H[7];\n                // Computation\n                for(var i = 0; i < 64; i++){\n                    if (i < 16) {\n                        W[i] = M[offset + i] | 0;\n                    } else {\n                        var gamma0x = W[i - 15];\n                        var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;\n                        var gamma1x = W[i - 2];\n                        var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;\n                        W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n                    }\n                    var ch = e & f ^ ~e & g;\n                    var maj = a & b ^ a & c ^ b & c;\n                    var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);\n                    var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\n                    var t1 = h + sigma1 + ch + K[i] + W[i];\n                    var t2 = sigma0 + maj;\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = d + t1 | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = t1 + t2 | 0;\n                }\n                // Intermediate hash value\n                H[0] = H[0] + a | 0;\n                H[1] = H[1] + b | 0;\n                H[2] = H[2] + c | 0;\n                H[3] = H[3] + d | 0;\n                H[4] = H[4] + e | 0;\n                H[5] = H[5] + f | 0;\n                H[6] = H[6] + g | 0;\n                H[7] = H[7] + h | 0;\n            },\n            _doFinalize: function() {\n                // Shortcuts\n                var data = this._data;\n                var dataWords = data.words;\n                var nBitsTotal = this._nDataBytes * 8;\n                var nBitsLeft = data.sigBytes * 8;\n                // Add padding\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math1.floor(nBitsTotal / 0x100000000);\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n                data.sigBytes = dataWords.length * 4;\n                // Hash final blocks\n                this._process();\n                // Return final computed hash\n                return this._hash;\n            },\n            clone: function() {\n                var clone = Hasher.clone.call(this);\n                clone._hash = this._hash.clone();\n                return clone;\n            }\n        });\n        /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */ C.SHA256 = Hasher._createHelper(SHA256);\n        /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */ C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n    })(Math);\n    return CryptoJS.SHA256;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/sha256.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/dot-case/dist.es2015/index.js":
/*!****************************************************!*\
  !*** ./node_modules/dot-case/dist.es2015/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dotCase: () => (/* binding */ dotCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var no_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! no-case */ \"(middleware)/./node_modules/no-case/dist.es2015/index.js\");\n\n\nfunction dotCase(input, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return (0,no_case__WEBPACK_IMPORTED_MODULE_0__.noCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({\n        delimiter: \".\"\n    }, options));\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2RvdC1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUNBO0FBQzFCLFNBQVNFLFFBQVFDLEtBQUssRUFBRUMsT0FBTztJQUNsQyxJQUFJQSxZQUFZLEtBQUssR0FBRztRQUFFQSxVQUFVLENBQUM7SUFBRztJQUN4QyxPQUFPSCwrQ0FBTUEsQ0FBQ0UsT0FBT0gsK0NBQVFBLENBQUM7UUFBRUssV0FBVztJQUFJLEdBQUdEO0FBQ3RELEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kb3QtY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcz82ZTQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBub0Nhc2UgfSBmcm9tIFwibm8tY2FzZVwiO1xuZXhwb3J0IGZ1bmN0aW9uIGRvdENhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHJldHVybiBub0Nhc2UoaW5wdXQsIF9fYXNzaWduKHsgZGVsaW1pdGVyOiBcIi5cIiB9LCBvcHRpb25zKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiX19hc3NpZ24iLCJub0Nhc2UiLCJkb3RDYXNlIiwiaW5wdXQiLCJvcHRpb25zIiwiZGVsaW1pdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/dot-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/lower-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/lower-case/dist.es2015/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localeLowerCase: () => (/* binding */ localeLowerCase),\n/* harmony export */   lowerCase: () => (/* binding */ lowerCase)\n/* harmony export */ });\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */ var SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"i\",\n            I: \"ı\",\n            İ: \"i\"\n        }\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"i\",\n            I: \"ı\",\n            İ: \"i\"\n        }\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"i̇\",\n            J: \"j̇\",\n            Į: \"į̇\",\n            Ì: \"i̇̀\",\n            Í: \"i̇́\",\n            Ĩ: \"i̇̃\"\n        }\n    }\n};\n/**\n * Localized lower case.\n */ function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang) return lowerCase(str.replace(lang.regexp, function(m) {\n        return lang.map[m];\n    }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */ function lowerCase(str) {\n    return str.toLowerCase();\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2xvd2VyLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Q0FFQyxHQUNELElBQUlBLG1CQUFtQjtJQUNuQkMsSUFBSTtRQUNBQyxRQUFRO1FBQ1JDLEtBQUs7WUFDREMsR0FBRztZQUNIQyxHQUFHO1lBQ0hDLElBQUk7UUFDUjtJQUNKO0lBQ0FDLElBQUk7UUFDQUwsUUFBUTtRQUNSQyxLQUFLO1lBQ0RDLEdBQUc7WUFDSEMsR0FBRztZQUNIQyxJQUFJO1FBQ1I7SUFDSjtJQUNBRSxJQUFJO1FBQ0FOLFFBQVE7UUFDUkMsS0FBSztZQUNERSxHQUFHO1lBQ0hJLEdBQUc7WUFDSEMsR0FBRztZQUNIQyxHQUFHO1lBQ0hDLEdBQUc7WUFDSEMsR0FBRztRQUNQO0lBQ0o7QUFDSjtBQUNBOztDQUVDLEdBQ00sU0FBU0MsZ0JBQWdCQyxHQUFHLEVBQUVDLE1BQU07SUFDdkMsSUFBSUMsT0FBT2pCLGdCQUFnQixDQUFDZ0IsT0FBT0UsV0FBVyxHQUFHO0lBQ2pELElBQUlELE1BQ0EsT0FBT0UsVUFBVUosSUFBSUssT0FBTyxDQUFDSCxLQUFLZixNQUFNLEVBQUUsU0FBVW1CLENBQUM7UUFBSSxPQUFPSixLQUFLZCxHQUFHLENBQUNrQixFQUFFO0lBQUU7SUFDakYsT0FBT0YsVUFBVUo7QUFDckI7QUFDQTs7Q0FFQyxHQUNNLFNBQVNJLFVBQVVKLEdBQUc7SUFDekIsT0FBT0EsSUFBSUcsV0FBVztBQUMxQixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG93ZXItY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcz85MDZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU291cmNlOiBmdHA6Ly9mdHAudW5pY29kZS5vcmcvUHVibGljL1VDRC9sYXRlc3QvdWNkL1NwZWNpYWxDYXNpbmcudHh0XG4gKi9cbnZhciBTVVBQT1JURURfTE9DQUxFID0ge1xuICAgIHRyOiB7XG4gICAgICAgIHJlZ2V4cDogL1xcdTAxMzB8XFx1MDA0OXxcXHUwMDQ5XFx1MDMwNy9nLFxuICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIMSwOiBcIlxcdTAwNjlcIixcbiAgICAgICAgICAgIEk6IFwiXFx1MDEzMVwiLFxuICAgICAgICAgICAgScyHOiBcIlxcdTAwNjlcIixcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIGF6OiB7XG4gICAgICAgIHJlZ2V4cDogL1xcdTAxMzAvZyxcbiAgICAgICAgbWFwOiB7XG4gICAgICAgICAgICDEsDogXCJcXHUwMDY5XCIsXG4gICAgICAgICAgICBJOiBcIlxcdTAxMzFcIixcbiAgICAgICAgICAgIEnMhzogXCJcXHUwMDY5XCIsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBsdDoge1xuICAgICAgICByZWdleHA6IC9cXHUwMDQ5fFxcdTAwNEF8XFx1MDEyRXxcXHUwMENDfFxcdTAwQ0R8XFx1MDEyOC9nLFxuICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIEk6IFwiXFx1MDA2OVxcdTAzMDdcIixcbiAgICAgICAgICAgIEo6IFwiXFx1MDA2QVxcdTAzMDdcIixcbiAgICAgICAgICAgIMSuOiBcIlxcdTAxMkZcXHUwMzA3XCIsXG4gICAgICAgICAgICDDjDogXCJcXHUwMDY5XFx1MDMwN1xcdTAzMDBcIixcbiAgICAgICAgICAgIMONOiBcIlxcdTAwNjlcXHUwMzA3XFx1MDMwMVwiLFxuICAgICAgICAgICAgxKg6IFwiXFx1MDA2OVxcdTAzMDdcXHUwMzAzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4vKipcbiAqIExvY2FsaXplZCBsb3dlciBjYXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9jYWxlTG93ZXJDYXNlKHN0ciwgbG9jYWxlKSB7XG4gICAgdmFyIGxhbmcgPSBTVVBQT1JURURfTE9DQUxFW2xvY2FsZS50b0xvd2VyQ2FzZSgpXTtcbiAgICBpZiAobGFuZylcbiAgICAgICAgcmV0dXJuIGxvd2VyQ2FzZShzdHIucmVwbGFjZShsYW5nLnJlZ2V4cCwgZnVuY3Rpb24gKG0pIHsgcmV0dXJuIGxhbmcubWFwW21dOyB9KSk7XG4gICAgcmV0dXJuIGxvd2VyQ2FzZShzdHIpO1xufVxuLyoqXG4gKiBMb3dlciBjYXNlIGFzIGEgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb3dlckNhc2Uoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIlNVUFBPUlRFRF9MT0NBTEUiLCJ0ciIsInJlZ2V4cCIsIm1hcCIsIsSwIiwiSSIsIknMhyIsImF6IiwibHQiLCJKIiwixK4iLCLDjCIsIsONIiwixKgiLCJsb2NhbGVMb3dlckNhc2UiLCJzdHIiLCJsb2NhbGUiLCJsYW5nIiwidG9Mb3dlckNhc2UiLCJsb3dlckNhc2UiLCJyZXBsYWNlIiwibSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/lower-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/map-obj/index.js":
/*!***************************************!*\
  !*** ./node_modules/map-obj/index.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("\nconst isObject = (value)=>typeof value === \"object\" && value !== null;\nconst mapObjectSkip = Symbol(\"skip\");\n// Customized for this use-case\nconst isObjectCustom = (value)=>isObject(value) && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\nconst mapObject = (object, mapper, options, isSeen = new WeakMap())=>{\n    options = {\n        deep: false,\n        target: {},\n        ...options\n    };\n    if (isSeen.has(object)) {\n        return isSeen.get(object);\n    }\n    isSeen.set(object, options.target);\n    const { target } = options;\n    delete options.target;\n    const mapArray = (array)=>array.map((element)=>isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);\n    if (Array.isArray(object)) {\n        return mapArray(object);\n    }\n    for (const [key, value] of Object.entries(object)){\n        const mapResult = mapper(key, value, object);\n        if (mapResult === mapObjectSkip) {\n            continue;\n        }\n        let [newKey, newValue, { shouldRecurse = true } = {}] = mapResult;\n        // Drop `__proto__` keys.\n        if (newKey === \"__proto__\") {\n            continue;\n        }\n        if (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n            newValue = Array.isArray(newValue) ? mapArray(newValue) : mapObject(newValue, mapper, options, isSeen);\n        }\n        target[newKey] = newValue;\n    }\n    return target;\n};\nmodule.exports = (object, mapper, options)=>{\n    if (!isObject(object)) {\n        throw new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n    }\n    return mapObject(object, mapper, options);\n};\nmodule.exports.mapObjectSkip = mapObjectSkip;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL21hcC1vYmovaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxXQUFXQyxDQUFBQSxRQUFTLE9BQU9BLFVBQVUsWUFBWUEsVUFBVTtBQUNqRSxNQUFNQyxnQkFBZ0JDLE9BQU87QUFFN0IsK0JBQStCO0FBQy9CLE1BQU1DLGlCQUFpQkgsQ0FBQUEsUUFDdEJELFNBQVNDLFVBQ1QsQ0FBRUEsQ0FBQUEsaUJBQWlCSSxNQUFLLEtBQ3hCLENBQUVKLENBQUFBLGlCQUFpQkssS0FBSSxLQUN2QixDQUFFTCxDQUFBQSxpQkFBaUJNLElBQUc7QUFFdkIsTUFBTUMsWUFBWSxDQUFDQyxRQUFRQyxRQUFRQyxTQUFTQyxTQUFTLElBQUlDLFNBQVM7SUFDakVGLFVBQVU7UUFDVEcsTUFBTTtRQUNOQyxRQUFRLENBQUM7UUFDVCxHQUFHSixPQUFPO0lBQ1g7SUFFQSxJQUFJQyxPQUFPSSxHQUFHLENBQUNQLFNBQVM7UUFDdkIsT0FBT0csT0FBT0ssR0FBRyxDQUFDUjtJQUNuQjtJQUVBRyxPQUFPTSxHQUFHLENBQUNULFFBQVFFLFFBQVFJLE1BQU07SUFFakMsTUFBTSxFQUFDQSxNQUFNLEVBQUMsR0FBR0o7SUFDakIsT0FBT0EsUUFBUUksTUFBTTtJQUVyQixNQUFNSSxXQUFXQyxDQUFBQSxRQUFTQSxNQUFNQyxHQUFHLENBQUNDLENBQUFBLFVBQVdsQixlQUFla0IsV0FBV2QsVUFBVWMsU0FBU1osUUFBUUMsU0FBU0MsVUFBVVU7SUFDdkgsSUFBSUMsTUFBTUMsT0FBTyxDQUFDZixTQUFTO1FBQzFCLE9BQU9VLFNBQVNWO0lBQ2pCO0lBRUEsS0FBSyxNQUFNLENBQUNnQixLQUFLeEIsTUFBTSxJQUFJeUIsT0FBT0MsT0FBTyxDQUFDbEIsUUFBUztRQUNsRCxNQUFNbUIsWUFBWWxCLE9BQU9lLEtBQUt4QixPQUFPUTtRQUVyQyxJQUFJbUIsY0FBYzFCLGVBQWU7WUFDaEM7UUFDRDtRQUVBLElBQUksQ0FBQzJCLFFBQVFDLFVBQVUsRUFBQ0MsZ0JBQWdCLElBQUksRUFBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdIO1FBRXRELHlCQUF5QjtRQUN6QixJQUFJQyxXQUFXLGFBQWE7WUFDM0I7UUFDRDtRQUVBLElBQUlsQixRQUFRRyxJQUFJLElBQUlpQixpQkFBaUIzQixlQUFlMEIsV0FBVztZQUM5REEsV0FBV1AsTUFBTUMsT0FBTyxDQUFDTSxZQUN4QlgsU0FBU1csWUFDVHRCLFVBQVVzQixVQUFVcEIsUUFBUUMsU0FBU0M7UUFDdkM7UUFFQUcsTUFBTSxDQUFDYyxPQUFPLEdBQUdDO0lBQ2xCO0lBRUEsT0FBT2Y7QUFDUjtBQUVBaUIsT0FBT0MsT0FBTyxHQUFHLENBQUN4QixRQUFRQyxRQUFRQztJQUNqQyxJQUFJLENBQUNYLFNBQVNTLFNBQVM7UUFDdEIsTUFBTSxJQUFJeUIsVUFBVSxDQUFDLDBCQUEwQixFQUFFekIsT0FBTyxJQUFJLEVBQUUsT0FBT0EsT0FBTyxDQUFDLENBQUM7SUFDL0U7SUFFQSxPQUFPRCxVQUFVQyxRQUFRQyxRQUFRQztBQUNsQztBQUVBcUIsNEJBQTRCLEdBQUc5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWFwLW9iai9pbmRleC5qcz9lNDgxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaXNPYmplY3QgPSB2YWx1ZSA9PiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xuY29uc3QgbWFwT2JqZWN0U2tpcCA9IFN5bWJvbCgnc2tpcCcpO1xuXG4vLyBDdXN0b21pemVkIGZvciB0aGlzIHVzZS1jYXNlXG5jb25zdCBpc09iamVjdEN1c3RvbSA9IHZhbHVlID0+XG5cdGlzT2JqZWN0KHZhbHVlKSAmJlxuXHQhKHZhbHVlIGluc3RhbmNlb2YgUmVnRXhwKSAmJlxuXHQhKHZhbHVlIGluc3RhbmNlb2YgRXJyb3IpICYmXG5cdCEodmFsdWUgaW5zdGFuY2VvZiBEYXRlKTtcblxuY29uc3QgbWFwT2JqZWN0ID0gKG9iamVjdCwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4gPSBuZXcgV2Vha01hcCgpKSA9PiB7XG5cdG9wdGlvbnMgPSB7XG5cdFx0ZGVlcDogZmFsc2UsXG5cdFx0dGFyZ2V0OiB7fSxcblx0XHQuLi5vcHRpb25zXG5cdH07XG5cblx0aWYgKGlzU2Vlbi5oYXMob2JqZWN0KSkge1xuXHRcdHJldHVybiBpc1NlZW4uZ2V0KG9iamVjdCk7XG5cdH1cblxuXHRpc1NlZW4uc2V0KG9iamVjdCwgb3B0aW9ucy50YXJnZXQpO1xuXG5cdGNvbnN0IHt0YXJnZXR9ID0gb3B0aW9ucztcblx0ZGVsZXRlIG9wdGlvbnMudGFyZ2V0O1xuXG5cdGNvbnN0IG1hcEFycmF5ID0gYXJyYXkgPT4gYXJyYXkubWFwKGVsZW1lbnQgPT4gaXNPYmplY3RDdXN0b20oZWxlbWVudCkgPyBtYXBPYmplY3QoZWxlbWVudCwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4pIDogZWxlbWVudCk7XG5cdGlmIChBcnJheS5pc0FycmF5KG9iamVjdCkpIHtcblx0XHRyZXR1cm4gbWFwQXJyYXkob2JqZWN0KTtcblx0fVxuXG5cdGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKG9iamVjdCkpIHtcblx0XHRjb25zdCBtYXBSZXN1bHQgPSBtYXBwZXIoa2V5LCB2YWx1ZSwgb2JqZWN0KTtcblxuXHRcdGlmIChtYXBSZXN1bHQgPT09IG1hcE9iamVjdFNraXApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGxldCBbbmV3S2V5LCBuZXdWYWx1ZSwge3Nob3VsZFJlY3Vyc2UgPSB0cnVlfSA9IHt9XSA9IG1hcFJlc3VsdDtcblxuXHRcdC8vIERyb3AgYF9fcHJvdG9fX2Aga2V5cy5cblx0XHRpZiAobmV3S2V5ID09PSAnX19wcm90b19fJykge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0aWYgKG9wdGlvbnMuZGVlcCAmJiBzaG91bGRSZWN1cnNlICYmIGlzT2JqZWN0Q3VzdG9tKG5ld1ZhbHVlKSkge1xuXHRcdFx0bmV3VmFsdWUgPSBBcnJheS5pc0FycmF5KG5ld1ZhbHVlKSA/XG5cdFx0XHRcdG1hcEFycmF5KG5ld1ZhbHVlKSA6XG5cdFx0XHRcdG1hcE9iamVjdChuZXdWYWx1ZSwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4pO1xuXHRcdH1cblxuXHRcdHRhcmdldFtuZXdLZXldID0gbmV3VmFsdWU7XG5cdH1cblxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSAob2JqZWN0LCBtYXBwZXIsIG9wdGlvbnMpID0+IHtcblx0aWYgKCFpc09iamVjdChvYmplY3QpKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgYW4gb2JqZWN0LCBnb3QgXFxgJHtvYmplY3R9XFxgICgke3R5cGVvZiBvYmplY3R9KWApO1xuXHR9XG5cblx0cmV0dXJuIG1hcE9iamVjdChvYmplY3QsIG1hcHBlciwgb3B0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5tYXBPYmplY3RTa2lwID0gbWFwT2JqZWN0U2tpcDtcbiJdLCJuYW1lcyI6WyJpc09iamVjdCIsInZhbHVlIiwibWFwT2JqZWN0U2tpcCIsIlN5bWJvbCIsImlzT2JqZWN0Q3VzdG9tIiwiUmVnRXhwIiwiRXJyb3IiLCJEYXRlIiwibWFwT2JqZWN0Iiwib2JqZWN0IiwibWFwcGVyIiwib3B0aW9ucyIsImlzU2VlbiIsIldlYWtNYXAiLCJkZWVwIiwidGFyZ2V0IiwiaGFzIiwiZ2V0Iiwic2V0IiwibWFwQXJyYXkiLCJhcnJheSIsIm1hcCIsImVsZW1lbnQiLCJBcnJheSIsImlzQXJyYXkiLCJrZXkiLCJPYmplY3QiLCJlbnRyaWVzIiwibWFwUmVzdWx0IiwibmV3S2V5IiwibmV3VmFsdWUiLCJzaG91bGRSZWN1cnNlIiwibW9kdWxlIiwiZXhwb3J0cyIsIlR5cGVFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/map-obj/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n    RequestCookies: ()=>RequestCookies,\n    ResponseCookies: ()=>ResponseCookies,\n    parseCookie: ()=>parseCookie,\n    parseSetCookie: ()=>parseSetCookie,\n    stringifyCookie: ()=>stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/serialize.ts\nfunction stringifyCookie(c) {\n    var _a;\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n        \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n        \"priority\" in c && c.priority && `Priority=${c.priority}`\n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n    const map = /* @__PURE__ */ new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const splitAt = pair.indexOf(\"=\");\n        if (splitAt === -1) {\n            map.set(pair, \"true\");\n            continue;\n        }\n        const [key, value] = [\n            pair.slice(0, splitAt),\n            pair.slice(splitAt + 1)\n        ];\n        try {\n            map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n        } catch  {}\n    }\n    return map;\n}\nfunction parseSetCookie(setCookie) {\n    if (!setCookie) {\n        return void 0;\n    }\n    const [[name, value], ...attributes] = parseCookie(setCookie);\n    const { domain, expires, httponly, maxage, path, samesite, secure, priority } = Object.fromEntries(attributes.map(([key, value2])=>[\n            key.toLowerCase(),\n            value2\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        },\n        ...priority && {\n            priority: parsePriority(priority)\n        }\n    };\n    return compact(cookie);\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nvar SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\n    \"low\",\n    \"medium\",\n    \"high\"\n];\nfunction parsePriority(string) {\n    string = string.toLowerCase();\n    return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n    if (!cookiesString) return [];\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    cookiesSeparatorFound = true;\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n// src/request-cookies.ts\nvar RequestCookies = class {\n    constructor(requestHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookie(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value2])=>stringifyCookie(value2)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>stringifyCookie(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map((v)=>`${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n    }\n};\n// src/response-cookies.ts\nvar ResponseCookies = class {\n    constructor(responseHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        var _a, _b, _c;\n        this._headers = responseHeaders;\n        const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n        const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n        for (const cookieString of cookieStrings){\n            const parsed = parseSetCookie(cookieString);\n            if (parsed) this._parsed.set(parsed.name, parsed);\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter((c)=>c.name === key);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const [name, path, domain] = typeof args[0] === \"string\" ? [\n            args[0]\n        ] : [\n            args[0].name,\n            args[0].path,\n            args[0].domain\n        ];\n        return this.set({\n            name,\n            path,\n            domain,\n            value: \"\",\n            expires: /* @__PURE__ */ new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map(stringifyCookie).join(\"; \");\n    }\n};\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = stringifyCookie(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (typeof cookie.expires === \"number\") {\n        cookie.expires = new Date(cookie.expires);\n    }\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n    }\n    if (cookie.path === null || cookie.path === void 0) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@opentelemetry/api/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("var __dirname = \"/\";\n\n(()=>{\n    \"use strict\";\n    var e = {\n        491: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ContextAPI = void 0;\n            const n = r(223);\n            const a = r(172);\n            const o = r(930);\n            const i = \"context\";\n            const c = new n.NoopContextManager;\n            class ContextAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new ContextAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalContextManager(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                active() {\n                    return this._getContextManager().active();\n                }\n                with(e, t, r, ...n) {\n                    return this._getContextManager().with(e, t, r, ...n);\n                }\n                bind(e, t) {\n                    return this._getContextManager().bind(e, t);\n                }\n                _getContextManager() {\n                    return (0, a.getGlobal)(i) || c;\n                }\n                disable() {\n                    this._getContextManager().disable();\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.ContextAPI = ContextAPI;\n        },\n        930: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagAPI = void 0;\n            const n = r(56);\n            const a = r(912);\n            const o = r(957);\n            const i = r(172);\n            const c = \"diag\";\n            class DiagAPI {\n                constructor(){\n                    function _logProxy(e) {\n                        return function(...t) {\n                            const r = (0, i.getGlobal)(\"diag\");\n                            if (!r) return;\n                            return r[e](...t);\n                        };\n                    }\n                    const e = this;\n                    const setLogger = (t, r = {\n                        logLevel: o.DiagLogLevel.INFO\n                    })=>{\n                        var n, c, s;\n                        if (t === e) {\n                            const t = new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");\n                            e.error((n = t.stack) !== null && n !== void 0 ? n : t.message);\n                            return false;\n                        }\n                        if (typeof r === \"number\") {\n                            r = {\n                                logLevel: r\n                            };\n                        }\n                        const u = (0, i.getGlobal)(\"diag\");\n                        const l = (0, a.createLogLevelDiagLogger)((c = r.logLevel) !== null && c !== void 0 ? c : o.DiagLogLevel.INFO, t);\n                        if (u && !r.suppressOverrideMessage) {\n                            const e = (s = (new Error).stack) !== null && s !== void 0 ? s : \"<failed to generate stacktrace>\";\n                            u.warn(`Current logger will be overwritten from ${e}`);\n                            l.warn(`Current logger will overwrite one already registered from ${e}`);\n                        }\n                        return (0, i.registerGlobal)(\"diag\", l, e, true);\n                    };\n                    e.setLogger = setLogger;\n                    e.disable = ()=>{\n                        (0, i.unregisterGlobal)(c, e);\n                    };\n                    e.createComponentLogger = (e)=>new n.DiagComponentLogger(e);\n                    e.verbose = _logProxy(\"verbose\");\n                    e.debug = _logProxy(\"debug\");\n                    e.info = _logProxy(\"info\");\n                    e.warn = _logProxy(\"warn\");\n                    e.error = _logProxy(\"error\");\n                }\n                static instance() {\n                    if (!this._instance) {\n                        this._instance = new DiagAPI;\n                    }\n                    return this._instance;\n                }\n            }\n            t.DiagAPI = DiagAPI;\n        },\n        653: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.MetricsAPI = void 0;\n            const n = r(660);\n            const a = r(172);\n            const o = r(930);\n            const i = \"metrics\";\n            class MetricsAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new MetricsAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalMeterProvider(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                getMeterProvider() {\n                    return (0, a.getGlobal)(i) || n.NOOP_METER_PROVIDER;\n                }\n                getMeter(e, t, r) {\n                    return this.getMeterProvider().getMeter(e, t, r);\n                }\n                disable() {\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.MetricsAPI = MetricsAPI;\n        },\n        181: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.PropagationAPI = void 0;\n            const n = r(172);\n            const a = r(874);\n            const o = r(194);\n            const i = r(277);\n            const c = r(369);\n            const s = r(930);\n            const u = \"propagation\";\n            const l = new a.NoopTextMapPropagator;\n            class PropagationAPI {\n                constructor(){\n                    this.createBaggage = c.createBaggage;\n                    this.getBaggage = i.getBaggage;\n                    this.getActiveBaggage = i.getActiveBaggage;\n                    this.setBaggage = i.setBaggage;\n                    this.deleteBaggage = i.deleteBaggage;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new PropagationAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalPropagator(e) {\n                    return (0, n.registerGlobal)(u, e, s.DiagAPI.instance());\n                }\n                inject(e, t, r = o.defaultTextMapSetter) {\n                    return this._getGlobalPropagator().inject(e, t, r);\n                }\n                extract(e, t, r = o.defaultTextMapGetter) {\n                    return this._getGlobalPropagator().extract(e, t, r);\n                }\n                fields() {\n                    return this._getGlobalPropagator().fields();\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(u, s.DiagAPI.instance());\n                }\n                _getGlobalPropagator() {\n                    return (0, n.getGlobal)(u) || l;\n                }\n            }\n            t.PropagationAPI = PropagationAPI;\n        },\n        997: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceAPI = void 0;\n            const n = r(172);\n            const a = r(846);\n            const o = r(139);\n            const i = r(607);\n            const c = r(930);\n            const s = \"trace\";\n            class TraceAPI {\n                constructor(){\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                    this.wrapSpanContext = o.wrapSpanContext;\n                    this.isSpanContextValid = o.isSpanContextValid;\n                    this.deleteSpan = i.deleteSpan;\n                    this.getSpan = i.getSpan;\n                    this.getActiveSpan = i.getActiveSpan;\n                    this.getSpanContext = i.getSpanContext;\n                    this.setSpan = i.setSpan;\n                    this.setSpanContext = i.setSpanContext;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new TraceAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalTracerProvider(e) {\n                    const t = (0, n.registerGlobal)(s, this._proxyTracerProvider, c.DiagAPI.instance());\n                    if (t) {\n                        this._proxyTracerProvider.setDelegate(e);\n                    }\n                    return t;\n                }\n                getTracerProvider() {\n                    return (0, n.getGlobal)(s) || this._proxyTracerProvider;\n                }\n                getTracer(e, t) {\n                    return this.getTracerProvider().getTracer(e, t);\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(s, c.DiagAPI.instance());\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                }\n            }\n            t.TraceAPI = TraceAPI;\n        },\n        277: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.deleteBaggage = t.setBaggage = t.getActiveBaggage = t.getBaggage = void 0;\n            const n = r(491);\n            const a = r(780);\n            const o = (0, a.createContextKey)(\"OpenTelemetry Baggage Key\");\n            function getBaggage(e) {\n                return e.getValue(o) || undefined;\n            }\n            t.getBaggage = getBaggage;\n            function getActiveBaggage() {\n                return getBaggage(n.ContextAPI.getInstance().active());\n            }\n            t.getActiveBaggage = getActiveBaggage;\n            function setBaggage(e, t) {\n                return e.setValue(o, t);\n            }\n            t.setBaggage = setBaggage;\n            function deleteBaggage(e) {\n                return e.deleteValue(o);\n            }\n            t.deleteBaggage = deleteBaggage;\n        },\n        993: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.BaggageImpl = void 0;\n            class BaggageImpl {\n                constructor(e){\n                    this._entries = e ? new Map(e) : new Map;\n                }\n                getEntry(e) {\n                    const t = this._entries.get(e);\n                    if (!t) {\n                        return undefined;\n                    }\n                    return Object.assign({}, t);\n                }\n                getAllEntries() {\n                    return Array.from(this._entries.entries()).map(([e, t])=>[\n                            e,\n                            t\n                        ]);\n                }\n                setEntry(e, t) {\n                    const r = new BaggageImpl(this._entries);\n                    r._entries.set(e, t);\n                    return r;\n                }\n                removeEntry(e) {\n                    const t = new BaggageImpl(this._entries);\n                    t._entries.delete(e);\n                    return t;\n                }\n                removeEntries(...e) {\n                    const t = new BaggageImpl(this._entries);\n                    for (const r of e){\n                        t._entries.delete(r);\n                    }\n                    return t;\n                }\n                clear() {\n                    return new BaggageImpl;\n                }\n            }\n            t.BaggageImpl = BaggageImpl;\n        },\n        830: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataSymbol = void 0;\n            t.baggageEntryMetadataSymbol = Symbol(\"BaggageEntryMetadata\");\n        },\n        369: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataFromString = t.createBaggage = void 0;\n            const n = r(930);\n            const a = r(993);\n            const o = r(830);\n            const i = n.DiagAPI.instance();\n            function createBaggage(e = {}) {\n                return new a.BaggageImpl(new Map(Object.entries(e)));\n            }\n            t.createBaggage = createBaggage;\n            function baggageEntryMetadataFromString(e) {\n                if (typeof e !== \"string\") {\n                    i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);\n                    e = \"\";\n                }\n                return {\n                    __TYPE__: o.baggageEntryMetadataSymbol,\n                    toString () {\n                        return e;\n                    }\n                };\n            }\n            t.baggageEntryMetadataFromString = baggageEntryMetadataFromString;\n        },\n        67: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.context = void 0;\n            const n = r(491);\n            t.context = n.ContextAPI.getInstance();\n        },\n        223: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopContextManager = void 0;\n            const n = r(780);\n            class NoopContextManager {\n                active() {\n                    return n.ROOT_CONTEXT;\n                }\n                with(e, t, r, ...n) {\n                    return t.call(r, ...n);\n                }\n                bind(e, t) {\n                    return t;\n                }\n                enable() {\n                    return this;\n                }\n                disable() {\n                    return this;\n                }\n            }\n            t.NoopContextManager = NoopContextManager;\n        },\n        780: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ROOT_CONTEXT = t.createContextKey = void 0;\n            function createContextKey(e) {\n                return Symbol.for(e);\n            }\n            t.createContextKey = createContextKey;\n            class BaseContext {\n                constructor(e){\n                    const t = this;\n                    t._currentContext = e ? new Map(e) : new Map;\n                    t.getValue = (e)=>t._currentContext.get(e);\n                    t.setValue = (e, r)=>{\n                        const n = new BaseContext(t._currentContext);\n                        n._currentContext.set(e, r);\n                        return n;\n                    };\n                    t.deleteValue = (e)=>{\n                        const r = new BaseContext(t._currentContext);\n                        r._currentContext.delete(e);\n                        return r;\n                    };\n                }\n            }\n            t.ROOT_CONTEXT = new BaseContext;\n        },\n        506: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.diag = void 0;\n            const n = r(930);\n            t.diag = n.DiagAPI.instance();\n        },\n        56: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagComponentLogger = void 0;\n            const n = r(172);\n            class DiagComponentLogger {\n                constructor(e){\n                    this._namespace = e.namespace || \"DiagComponentLogger\";\n                }\n                debug(...e) {\n                    return logProxy(\"debug\", this._namespace, e);\n                }\n                error(...e) {\n                    return logProxy(\"error\", this._namespace, e);\n                }\n                info(...e) {\n                    return logProxy(\"info\", this._namespace, e);\n                }\n                warn(...e) {\n                    return logProxy(\"warn\", this._namespace, e);\n                }\n                verbose(...e) {\n                    return logProxy(\"verbose\", this._namespace, e);\n                }\n            }\n            t.DiagComponentLogger = DiagComponentLogger;\n            function logProxy(e, t, r) {\n                const a = (0, n.getGlobal)(\"diag\");\n                if (!a) {\n                    return;\n                }\n                r.unshift(t);\n                return a[e](...r);\n            }\n        },\n        972: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagConsoleLogger = void 0;\n            const r = [\n                {\n                    n: \"error\",\n                    c: \"error\"\n                },\n                {\n                    n: \"warn\",\n                    c: \"warn\"\n                },\n                {\n                    n: \"info\",\n                    c: \"info\"\n                },\n                {\n                    n: \"debug\",\n                    c: \"debug\"\n                },\n                {\n                    n: \"verbose\",\n                    c: \"trace\"\n                }\n            ];\n            class DiagConsoleLogger {\n                constructor(){\n                    function _consoleFunc(e) {\n                        return function(...t) {\n                            if (console) {\n                                let r = console[e];\n                                if (typeof r !== \"function\") {\n                                    r = console.log;\n                                }\n                                if (typeof r === \"function\") {\n                                    return r.apply(console, t);\n                                }\n                            }\n                        };\n                    }\n                    for(let e = 0; e < r.length; e++){\n                        this[r[e].n] = _consoleFunc(r[e].c);\n                    }\n                }\n            }\n            t.DiagConsoleLogger = DiagConsoleLogger;\n        },\n        912: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createLogLevelDiagLogger = void 0;\n            const n = r(957);\n            function createLogLevelDiagLogger(e, t) {\n                if (e < n.DiagLogLevel.NONE) {\n                    e = n.DiagLogLevel.NONE;\n                } else if (e > n.DiagLogLevel.ALL) {\n                    e = n.DiagLogLevel.ALL;\n                }\n                t = t || {};\n                function _filterFunc(r, n) {\n                    const a = t[r];\n                    if (typeof a === \"function\" && e >= n) {\n                        return a.bind(t);\n                    }\n                    return function() {};\n                }\n                return {\n                    error: _filterFunc(\"error\", n.DiagLogLevel.ERROR),\n                    warn: _filterFunc(\"warn\", n.DiagLogLevel.WARN),\n                    info: _filterFunc(\"info\", n.DiagLogLevel.INFO),\n                    debug: _filterFunc(\"debug\", n.DiagLogLevel.DEBUG),\n                    verbose: _filterFunc(\"verbose\", n.DiagLogLevel.VERBOSE)\n                };\n            }\n            t.createLogLevelDiagLogger = createLogLevelDiagLogger;\n        },\n        957: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagLogLevel = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"ERROR\"] = 30] = \"ERROR\";\n                e[e[\"WARN\"] = 50] = \"WARN\";\n                e[e[\"INFO\"] = 60] = \"INFO\";\n                e[e[\"DEBUG\"] = 70] = \"DEBUG\";\n                e[e[\"VERBOSE\"] = 80] = \"VERBOSE\";\n                e[e[\"ALL\"] = 9999] = \"ALL\";\n            })(r = t.DiagLogLevel || (t.DiagLogLevel = {}));\n        },\n        172: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.unregisterGlobal = t.getGlobal = t.registerGlobal = void 0;\n            const n = r(200);\n            const a = r(521);\n            const o = r(130);\n            const i = a.VERSION.split(\".\")[0];\n            const c = Symbol.for(`opentelemetry.js.api.${i}`);\n            const s = n._globalThis;\n            function registerGlobal(e, t, r, n = false) {\n                var o;\n                const i = s[c] = (o = s[c]) !== null && o !== void 0 ? o : {\n                    version: a.VERSION\n                };\n                if (!n && i[e]) {\n                    const t = new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                if (i.version !== a.VERSION) {\n                    const t = new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                i[e] = t;\n                r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);\n                return true;\n            }\n            t.registerGlobal = registerGlobal;\n            function getGlobal(e) {\n                var t, r;\n                const n = (t = s[c]) === null || t === void 0 ? void 0 : t.version;\n                if (!n || !(0, o.isCompatible)(n)) {\n                    return;\n                }\n                return (r = s[c]) === null || r === void 0 ? void 0 : r[e];\n            }\n            t.getGlobal = getGlobal;\n            function unregisterGlobal(e, t) {\n                t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);\n                const r = s[c];\n                if (r) {\n                    delete r[e];\n                }\n            }\n            t.unregisterGlobal = unregisterGlobal;\n        },\n        130: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.isCompatible = t._makeCompatibilityCheck = void 0;\n            const n = r(521);\n            const a = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n            function _makeCompatibilityCheck(e) {\n                const t = new Set([\n                    e\n                ]);\n                const r = new Set;\n                const n = e.match(a);\n                if (!n) {\n                    return ()=>false;\n                }\n                const o = {\n                    major: +n[1],\n                    minor: +n[2],\n                    patch: +n[3],\n                    prerelease: n[4]\n                };\n                if (o.prerelease != null) {\n                    return function isExactmatch(t) {\n                        return t === e;\n                    };\n                }\n                function _reject(e) {\n                    r.add(e);\n                    return false;\n                }\n                function _accept(e) {\n                    t.add(e);\n                    return true;\n                }\n                return function isCompatible(e) {\n                    if (t.has(e)) {\n                        return true;\n                    }\n                    if (r.has(e)) {\n                        return false;\n                    }\n                    const n = e.match(a);\n                    if (!n) {\n                        return _reject(e);\n                    }\n                    const i = {\n                        major: +n[1],\n                        minor: +n[2],\n                        patch: +n[3],\n                        prerelease: n[4]\n                    };\n                    if (i.prerelease != null) {\n                        return _reject(e);\n                    }\n                    if (o.major !== i.major) {\n                        return _reject(e);\n                    }\n                    if (o.major === 0) {\n                        if (o.minor === i.minor && o.patch <= i.patch) {\n                            return _accept(e);\n                        }\n                        return _reject(e);\n                    }\n                    if (o.minor <= i.minor) {\n                        return _accept(e);\n                    }\n                    return _reject(e);\n                };\n            }\n            t._makeCompatibilityCheck = _makeCompatibilityCheck;\n            t.isCompatible = _makeCompatibilityCheck(n.VERSION);\n        },\n        886: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.metrics = void 0;\n            const n = r(653);\n            t.metrics = n.MetricsAPI.getInstance();\n        },\n        901: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ValueType = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INT\"] = 0] = \"INT\";\n                e[e[\"DOUBLE\"] = 1] = \"DOUBLE\";\n            })(r = t.ValueType || (t.ValueType = {}));\n        },\n        102: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createNoopMeter = t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = t.NOOP_OBSERVABLE_GAUGE_METRIC = t.NOOP_OBSERVABLE_COUNTER_METRIC = t.NOOP_UP_DOWN_COUNTER_METRIC = t.NOOP_HISTOGRAM_METRIC = t.NOOP_COUNTER_METRIC = t.NOOP_METER = t.NoopObservableUpDownCounterMetric = t.NoopObservableGaugeMetric = t.NoopObservableCounterMetric = t.NoopObservableMetric = t.NoopHistogramMetric = t.NoopUpDownCounterMetric = t.NoopCounterMetric = t.NoopMetric = t.NoopMeter = void 0;\n            class NoopMeter {\n                constructor(){}\n                createHistogram(e, r) {\n                    return t.NOOP_HISTOGRAM_METRIC;\n                }\n                createCounter(e, r) {\n                    return t.NOOP_COUNTER_METRIC;\n                }\n                createUpDownCounter(e, r) {\n                    return t.NOOP_UP_DOWN_COUNTER_METRIC;\n                }\n                createObservableGauge(e, r) {\n                    return t.NOOP_OBSERVABLE_GAUGE_METRIC;\n                }\n                createObservableCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_COUNTER_METRIC;\n                }\n                createObservableUpDownCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n                }\n                addBatchObservableCallback(e, t) {}\n                removeBatchObservableCallback(e) {}\n            }\n            t.NoopMeter = NoopMeter;\n            class NoopMetric {\n            }\n            t.NoopMetric = NoopMetric;\n            class NoopCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopCounterMetric = NoopCounterMetric;\n            class NoopUpDownCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopUpDownCounterMetric = NoopUpDownCounterMetric;\n            class NoopHistogramMetric extends NoopMetric {\n                record(e, t) {}\n            }\n            t.NoopHistogramMetric = NoopHistogramMetric;\n            class NoopObservableMetric {\n                addCallback(e) {}\n                removeCallback(e) {}\n            }\n            t.NoopObservableMetric = NoopObservableMetric;\n            class NoopObservableCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableCounterMetric = NoopObservableCounterMetric;\n            class NoopObservableGaugeMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableGaugeMetric = NoopObservableGaugeMetric;\n            class NoopObservableUpDownCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableUpDownCounterMetric = NoopObservableUpDownCounterMetric;\n            t.NOOP_METER = new NoopMeter;\n            t.NOOP_COUNTER_METRIC = new NoopCounterMetric;\n            t.NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric;\n            t.NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric;\n            t.NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric;\n            t.NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric;\n            t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric;\n            function createNoopMeter() {\n                return t.NOOP_METER;\n            }\n            t.createNoopMeter = createNoopMeter;\n        },\n        660: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NOOP_METER_PROVIDER = t.NoopMeterProvider = void 0;\n            const n = r(102);\n            class NoopMeterProvider {\n                getMeter(e, t, r) {\n                    return n.NOOP_METER;\n                }\n            }\n            t.NoopMeterProvider = NoopMeterProvider;\n            t.NOOP_METER_PROVIDER = new NoopMeterProvider;\n        },\n        200: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(46), t);\n        },\n        651: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t._globalThis = void 0;\n            t._globalThis = typeof globalThis === \"object\" ? globalThis : __webpack_require__.g;\n        },\n        46: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(651), t);\n        },\n        939: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.propagation = void 0;\n            const n = r(181);\n            t.propagation = n.PropagationAPI.getInstance();\n        },\n        874: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTextMapPropagator = void 0;\n            class NoopTextMapPropagator {\n                inject(e, t) {}\n                extract(e, t) {\n                    return e;\n                }\n                fields() {\n                    return [];\n                }\n            }\n            t.NoopTextMapPropagator = NoopTextMapPropagator;\n        },\n        194: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.defaultTextMapSetter = t.defaultTextMapGetter = void 0;\n            t.defaultTextMapGetter = {\n                get (e, t) {\n                    if (e == null) {\n                        return undefined;\n                    }\n                    return e[t];\n                },\n                keys (e) {\n                    if (e == null) {\n                        return [];\n                    }\n                    return Object.keys(e);\n                }\n            };\n            t.defaultTextMapSetter = {\n                set (e, t, r) {\n                    if (e == null) {\n                        return;\n                    }\n                    e[t] = r;\n                }\n            };\n        },\n        845: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.trace = void 0;\n            const n = r(997);\n            t.trace = n.TraceAPI.getInstance();\n        },\n        403: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NonRecordingSpan = void 0;\n            const n = r(476);\n            class NonRecordingSpan {\n                constructor(e = n.INVALID_SPAN_CONTEXT){\n                    this._spanContext = e;\n                }\n                spanContext() {\n                    return this._spanContext;\n                }\n                setAttribute(e, t) {\n                    return this;\n                }\n                setAttributes(e) {\n                    return this;\n                }\n                addEvent(e, t) {\n                    return this;\n                }\n                setStatus(e) {\n                    return this;\n                }\n                updateName(e) {\n                    return this;\n                }\n                end(e) {}\n                isRecording() {\n                    return false;\n                }\n                recordException(e, t) {}\n            }\n            t.NonRecordingSpan = NonRecordingSpan;\n        },\n        614: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracer = void 0;\n            const n = r(491);\n            const a = r(607);\n            const o = r(403);\n            const i = r(139);\n            const c = n.ContextAPI.getInstance();\n            class NoopTracer {\n                startSpan(e, t, r = c.active()) {\n                    const n = Boolean(t === null || t === void 0 ? void 0 : t.root);\n                    if (n) {\n                        return new o.NonRecordingSpan;\n                    }\n                    const s = r && (0, a.getSpanContext)(r);\n                    if (isSpanContext(s) && (0, i.isSpanContextValid)(s)) {\n                        return new o.NonRecordingSpan(s);\n                    } else {\n                        return new o.NonRecordingSpan;\n                    }\n                }\n                startActiveSpan(e, t, r, n) {\n                    let o;\n                    let i;\n                    let s;\n                    if (arguments.length < 2) {\n                        return;\n                    } else if (arguments.length === 2) {\n                        s = t;\n                    } else if (arguments.length === 3) {\n                        o = t;\n                        s = r;\n                    } else {\n                        o = t;\n                        i = r;\n                        s = n;\n                    }\n                    const u = i !== null && i !== void 0 ? i : c.active();\n                    const l = this.startSpan(e, o, u);\n                    const g = (0, a.setSpan)(u, l);\n                    return c.with(g, s, undefined, l);\n                }\n            }\n            t.NoopTracer = NoopTracer;\n            function isSpanContext(e) {\n                return typeof e === \"object\" && typeof e[\"spanId\"] === \"string\" && typeof e[\"traceId\"] === \"string\" && typeof e[\"traceFlags\"] === \"number\";\n            }\n        },\n        124: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracerProvider = void 0;\n            const n = r(614);\n            class NoopTracerProvider {\n                getTracer(e, t, r) {\n                    return new n.NoopTracer;\n                }\n            }\n            t.NoopTracerProvider = NoopTracerProvider;\n        },\n        125: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracer = void 0;\n            const n = r(614);\n            const a = new n.NoopTracer;\n            class ProxyTracer {\n                constructor(e, t, r, n){\n                    this._provider = e;\n                    this.name = t;\n                    this.version = r;\n                    this.options = n;\n                }\n                startSpan(e, t, r) {\n                    return this._getTracer().startSpan(e, t, r);\n                }\n                startActiveSpan(e, t, r, n) {\n                    const a = this._getTracer();\n                    return Reflect.apply(a.startActiveSpan, a, arguments);\n                }\n                _getTracer() {\n                    if (this._delegate) {\n                        return this._delegate;\n                    }\n                    const e = this._provider.getDelegateTracer(this.name, this.version, this.options);\n                    if (!e) {\n                        return a;\n                    }\n                    this._delegate = e;\n                    return this._delegate;\n                }\n            }\n            t.ProxyTracer = ProxyTracer;\n        },\n        846: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracerProvider = void 0;\n            const n = r(125);\n            const a = r(124);\n            const o = new a.NoopTracerProvider;\n            class ProxyTracerProvider {\n                getTracer(e, t, r) {\n                    var a;\n                    return (a = this.getDelegateTracer(e, t, r)) !== null && a !== void 0 ? a : new n.ProxyTracer(this, e, t, r);\n                }\n                getDelegate() {\n                    var e;\n                    return (e = this._delegate) !== null && e !== void 0 ? e : o;\n                }\n                setDelegate(e) {\n                    this._delegate = e;\n                }\n                getDelegateTracer(e, t, r) {\n                    var n;\n                    return (n = this._delegate) === null || n === void 0 ? void 0 : n.getTracer(e, t, r);\n                }\n            }\n            t.ProxyTracerProvider = ProxyTracerProvider;\n        },\n        996: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SamplingDecision = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n                e[e[\"RECORD\"] = 1] = \"RECORD\";\n                e[e[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n            })(r = t.SamplingDecision || (t.SamplingDecision = {}));\n        },\n        607: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.getSpanContext = t.setSpanContext = t.deleteSpan = t.setSpan = t.getActiveSpan = t.getSpan = void 0;\n            const n = r(780);\n            const a = r(403);\n            const o = r(491);\n            const i = (0, n.createContextKey)(\"OpenTelemetry Context Key SPAN\");\n            function getSpan(e) {\n                return e.getValue(i) || undefined;\n            }\n            t.getSpan = getSpan;\n            function getActiveSpan() {\n                return getSpan(o.ContextAPI.getInstance().active());\n            }\n            t.getActiveSpan = getActiveSpan;\n            function setSpan(e, t) {\n                return e.setValue(i, t);\n            }\n            t.setSpan = setSpan;\n            function deleteSpan(e) {\n                return e.deleteValue(i);\n            }\n            t.deleteSpan = deleteSpan;\n            function setSpanContext(e, t) {\n                return setSpan(e, new a.NonRecordingSpan(t));\n            }\n            t.setSpanContext = setSpanContext;\n            function getSpanContext(e) {\n                var t;\n                return (t = getSpan(e)) === null || t === void 0 ? void 0 : t.spanContext();\n            }\n            t.getSpanContext = getSpanContext;\n        },\n        325: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceStateImpl = void 0;\n            const n = r(564);\n            const a = 32;\n            const o = 512;\n            const i = \",\";\n            const c = \"=\";\n            class TraceStateImpl {\n                constructor(e){\n                    this._internalState = new Map;\n                    if (e) this._parse(e);\n                }\n                set(e, t) {\n                    const r = this._clone();\n                    if (r._internalState.has(e)) {\n                        r._internalState.delete(e);\n                    }\n                    r._internalState.set(e, t);\n                    return r;\n                }\n                unset(e) {\n                    const t = this._clone();\n                    t._internalState.delete(e);\n                    return t;\n                }\n                get(e) {\n                    return this._internalState.get(e);\n                }\n                serialize() {\n                    return this._keys().reduce((e, t)=>{\n                        e.push(t + c + this.get(t));\n                        return e;\n                    }, []).join(i);\n                }\n                _parse(e) {\n                    if (e.length > o) return;\n                    this._internalState = e.split(i).reverse().reduce((e, t)=>{\n                        const r = t.trim();\n                        const a = r.indexOf(c);\n                        if (a !== -1) {\n                            const o = r.slice(0, a);\n                            const i = r.slice(a + 1, t.length);\n                            if ((0, n.validateKey)(o) && (0, n.validateValue)(i)) {\n                                e.set(o, i);\n                            } else {}\n                        }\n                        return e;\n                    }, new Map);\n                    if (this._internalState.size > a) {\n                        this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, a));\n                    }\n                }\n                _keys() {\n                    return Array.from(this._internalState.keys()).reverse();\n                }\n                _clone() {\n                    const e = new TraceStateImpl;\n                    e._internalState = new Map(this._internalState);\n                    return e;\n                }\n            }\n            t.TraceStateImpl = TraceStateImpl;\n        },\n        564: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.validateValue = t.validateKey = void 0;\n            const r = \"[_0-9a-z-*/]\";\n            const n = `[a-z]${r}{0,255}`;\n            const a = `[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;\n            const o = new RegExp(`^(?:${n}|${a})$`);\n            const i = /^[ -~]{0,255}[!-~]$/;\n            const c = /,|=/;\n            function validateKey(e) {\n                return o.test(e);\n            }\n            t.validateKey = validateKey;\n            function validateValue(e) {\n                return i.test(e) && !c.test(e);\n            }\n            t.validateValue = validateValue;\n        },\n        98: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createTraceState = void 0;\n            const n = r(325);\n            function createTraceState(e) {\n                return new n.TraceStateImpl(e);\n            }\n            t.createTraceState = createTraceState;\n        },\n        476: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.INVALID_SPAN_CONTEXT = t.INVALID_TRACEID = t.INVALID_SPANID = void 0;\n            const n = r(475);\n            t.INVALID_SPANID = \"0000000000000000\";\n            t.INVALID_TRACEID = \"00000000000000000000000000000000\";\n            t.INVALID_SPAN_CONTEXT = {\n                traceId: t.INVALID_TRACEID,\n                spanId: t.INVALID_SPANID,\n                traceFlags: n.TraceFlags.NONE\n            };\n        },\n        357: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanKind = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INTERNAL\"] = 0] = \"INTERNAL\";\n                e[e[\"SERVER\"] = 1] = \"SERVER\";\n                e[e[\"CLIENT\"] = 2] = \"CLIENT\";\n                e[e[\"PRODUCER\"] = 3] = \"PRODUCER\";\n                e[e[\"CONSUMER\"] = 4] = \"CONSUMER\";\n            })(r = t.SpanKind || (t.SpanKind = {}));\n        },\n        139: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.wrapSpanContext = t.isSpanContextValid = t.isValidSpanId = t.isValidTraceId = void 0;\n            const n = r(476);\n            const a = r(403);\n            const o = /^([0-9a-f]{32})$/i;\n            const i = /^[0-9a-f]{16}$/i;\n            function isValidTraceId(e) {\n                return o.test(e) && e !== n.INVALID_TRACEID;\n            }\n            t.isValidTraceId = isValidTraceId;\n            function isValidSpanId(e) {\n                return i.test(e) && e !== n.INVALID_SPANID;\n            }\n            t.isValidSpanId = isValidSpanId;\n            function isSpanContextValid(e) {\n                return isValidTraceId(e.traceId) && isValidSpanId(e.spanId);\n            }\n            t.isSpanContextValid = isSpanContextValid;\n            function wrapSpanContext(e) {\n                return new a.NonRecordingSpan(e);\n            }\n            t.wrapSpanContext = wrapSpanContext;\n        },\n        847: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanStatusCode = void 0;\n            var r;\n            (function(e) {\n                e[e[\"UNSET\"] = 0] = \"UNSET\";\n                e[e[\"OK\"] = 1] = \"OK\";\n                e[e[\"ERROR\"] = 2] = \"ERROR\";\n            })(r = t.SpanStatusCode || (t.SpanStatusCode = {}));\n        },\n        475: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceFlags = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"SAMPLED\"] = 1] = \"SAMPLED\";\n            })(r = t.TraceFlags || (t.TraceFlags = {}));\n        },\n        521: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.VERSION = void 0;\n            t.VERSION = \"1.6.0\";\n        }\n    };\n    var t = {};\n    function __nccwpck_require__(r) {\n        var n = t[r];\n        if (n !== undefined) {\n            return n.exports;\n        }\n        var a = t[r] = {\n            exports: {}\n        };\n        var o = true;\n        try {\n            e[r].call(a.exports, a, a.exports, __nccwpck_require__);\n            o = false;\n        } finally{\n            if (o) delete t[r];\n        }\n        return a.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var r = {};\n    (()=>{\n        var e = r;\n        Object.defineProperty(e, \"__esModule\", {\n            value: true\n        });\n        e.trace = e.propagation = e.metrics = e.diag = e.context = e.INVALID_SPAN_CONTEXT = e.INVALID_TRACEID = e.INVALID_SPANID = e.isValidSpanId = e.isValidTraceId = e.isSpanContextValid = e.createTraceState = e.TraceFlags = e.SpanStatusCode = e.SpanKind = e.SamplingDecision = e.ProxyTracerProvider = e.ProxyTracer = e.defaultTextMapSetter = e.defaultTextMapGetter = e.ValueType = e.createNoopMeter = e.DiagLogLevel = e.DiagConsoleLogger = e.ROOT_CONTEXT = e.createContextKey = e.baggageEntryMetadataFromString = void 0;\n        var t = __nccwpck_require__(369);\n        Object.defineProperty(e, \"baggageEntryMetadataFromString\", {\n            enumerable: true,\n            get: function() {\n                return t.baggageEntryMetadataFromString;\n            }\n        });\n        var n = __nccwpck_require__(780);\n        Object.defineProperty(e, \"createContextKey\", {\n            enumerable: true,\n            get: function() {\n                return n.createContextKey;\n            }\n        });\n        Object.defineProperty(e, \"ROOT_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return n.ROOT_CONTEXT;\n            }\n        });\n        var a = __nccwpck_require__(972);\n        Object.defineProperty(e, \"DiagConsoleLogger\", {\n            enumerable: true,\n            get: function() {\n                return a.DiagConsoleLogger;\n            }\n        });\n        var o = __nccwpck_require__(957);\n        Object.defineProperty(e, \"DiagLogLevel\", {\n            enumerable: true,\n            get: function() {\n                return o.DiagLogLevel;\n            }\n        });\n        var i = __nccwpck_require__(102);\n        Object.defineProperty(e, \"createNoopMeter\", {\n            enumerable: true,\n            get: function() {\n                return i.createNoopMeter;\n            }\n        });\n        var c = __nccwpck_require__(901);\n        Object.defineProperty(e, \"ValueType\", {\n            enumerable: true,\n            get: function() {\n                return c.ValueType;\n            }\n        });\n        var s = __nccwpck_require__(194);\n        Object.defineProperty(e, \"defaultTextMapGetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapGetter;\n            }\n        });\n        Object.defineProperty(e, \"defaultTextMapSetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapSetter;\n            }\n        });\n        var u = __nccwpck_require__(125);\n        Object.defineProperty(e, \"ProxyTracer\", {\n            enumerable: true,\n            get: function() {\n                return u.ProxyTracer;\n            }\n        });\n        var l = __nccwpck_require__(846);\n        Object.defineProperty(e, \"ProxyTracerProvider\", {\n            enumerable: true,\n            get: function() {\n                return l.ProxyTracerProvider;\n            }\n        });\n        var g = __nccwpck_require__(996);\n        Object.defineProperty(e, \"SamplingDecision\", {\n            enumerable: true,\n            get: function() {\n                return g.SamplingDecision;\n            }\n        });\n        var p = __nccwpck_require__(357);\n        Object.defineProperty(e, \"SpanKind\", {\n            enumerable: true,\n            get: function() {\n                return p.SpanKind;\n            }\n        });\n        var d = __nccwpck_require__(847);\n        Object.defineProperty(e, \"SpanStatusCode\", {\n            enumerable: true,\n            get: function() {\n                return d.SpanStatusCode;\n            }\n        });\n        var _ = __nccwpck_require__(475);\n        Object.defineProperty(e, \"TraceFlags\", {\n            enumerable: true,\n            get: function() {\n                return _.TraceFlags;\n            }\n        });\n        var f = __nccwpck_require__(98);\n        Object.defineProperty(e, \"createTraceState\", {\n            enumerable: true,\n            get: function() {\n                return f.createTraceState;\n            }\n        });\n        var b = __nccwpck_require__(139);\n        Object.defineProperty(e, \"isSpanContextValid\", {\n            enumerable: true,\n            get: function() {\n                return b.isSpanContextValid;\n            }\n        });\n        Object.defineProperty(e, \"isValidTraceId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidTraceId;\n            }\n        });\n        Object.defineProperty(e, \"isValidSpanId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidSpanId;\n            }\n        });\n        var v = __nccwpck_require__(476);\n        Object.defineProperty(e, \"INVALID_SPANID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPANID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_TRACEID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_TRACEID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_SPAN_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPAN_CONTEXT;\n            }\n        });\n        const O = __nccwpck_require__(67);\n        Object.defineProperty(e, \"context\", {\n            enumerable: true,\n            get: function() {\n                return O.context;\n            }\n        });\n        const P = __nccwpck_require__(506);\n        Object.defineProperty(e, \"diag\", {\n            enumerable: true,\n            get: function() {\n                return P.diag;\n            }\n        });\n        const N = __nccwpck_require__(886);\n        Object.defineProperty(e, \"metrics\", {\n            enumerable: true,\n            get: function() {\n                return N.metrics;\n            }\n        });\n        const S = __nccwpck_require__(939);\n        Object.defineProperty(e, \"propagation\", {\n            enumerable: true,\n            get: function() {\n                return S.propagation;\n            }\n        });\n        const C = __nccwpck_require__(845);\n        Object.defineProperty(e, \"trace\", {\n            enumerable: true,\n            get: function() {\n                return C.trace;\n            }\n        });\n        e[\"default\"] = {\n            context: O.context,\n            diag: P.diag,\n            metrics: N.metrics,\n            propagation: S.propagation,\n            trace: C.trace\n        };\n    })();\n    module.exports = r;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/cookie/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/cookie/index.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("var __dirname = \"/\";\n\n(()=>{\n    \"use strict\";\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var e = {};\n    (()=>{\n        var r = e;\n        /*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ r.parse = parse;\n        r.serialize = serialize;\n        var i = decodeURIComponent;\n        var t = encodeURIComponent;\n        var a = /; */;\n        var n = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n        function parse(e, r) {\n            if (typeof e !== \"string\") {\n                throw new TypeError(\"argument str must be a string\");\n            }\n            var t = {};\n            var n = r || {};\n            var o = e.split(a);\n            var s = n.decode || i;\n            for(var p = 0; p < o.length; p++){\n                var f = o[p];\n                var u = f.indexOf(\"=\");\n                if (u < 0) {\n                    continue;\n                }\n                var v = f.substr(0, u).trim();\n                var c = f.substr(++u, f.length).trim();\n                if ('\"' == c[0]) {\n                    c = c.slice(1, -1);\n                }\n                if (undefined == t[v]) {\n                    t[v] = tryDecode(c, s);\n                }\n            }\n            return t;\n        }\n        function serialize(e, r, i) {\n            var a = i || {};\n            var o = a.encode || t;\n            if (typeof o !== \"function\") {\n                throw new TypeError(\"option encode is invalid\");\n            }\n            if (!n.test(e)) {\n                throw new TypeError(\"argument name is invalid\");\n            }\n            var s = o(r);\n            if (s && !n.test(s)) {\n                throw new TypeError(\"argument val is invalid\");\n            }\n            var p = e + \"=\" + s;\n            if (null != a.maxAge) {\n                var f = a.maxAge - 0;\n                if (isNaN(f) || !isFinite(f)) {\n                    throw new TypeError(\"option maxAge is invalid\");\n                }\n                p += \"; Max-Age=\" + Math.floor(f);\n            }\n            if (a.domain) {\n                if (!n.test(a.domain)) {\n                    throw new TypeError(\"option domain is invalid\");\n                }\n                p += \"; Domain=\" + a.domain;\n            }\n            if (a.path) {\n                if (!n.test(a.path)) {\n                    throw new TypeError(\"option path is invalid\");\n                }\n                p += \"; Path=\" + a.path;\n            }\n            if (a.expires) {\n                if (typeof a.expires.toUTCString !== \"function\") {\n                    throw new TypeError(\"option expires is invalid\");\n                }\n                p += \"; Expires=\" + a.expires.toUTCString();\n            }\n            if (a.httpOnly) {\n                p += \"; HttpOnly\";\n            }\n            if (a.secure) {\n                p += \"; Secure\";\n            }\n            if (a.sameSite) {\n                var u = typeof a.sameSite === \"string\" ? a.sameSite.toLowerCase() : a.sameSite;\n                switch(u){\n                    case true:\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"lax\":\n                        p += \"; SameSite=Lax\";\n                        break;\n                    case \"strict\":\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"none\":\n                        p += \"; SameSite=None\";\n                        break;\n                    default:\n                        throw new TypeError(\"option sameSite is invalid\");\n                }\n            }\n            return p;\n        }\n        function tryDecode(e, r) {\n            try {\n                return r(e);\n            } catch (r) {\n                return e;\n            }\n        }\n    })();\n    module.exports = e;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jb29raWUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBQztJQUFLO0lBQWEsSUFBRyxPQUFPQSx3QkFBc0IsYUFBWUEsb0JBQW9CQyxFQUFFLEdBQUNDLFNBQVNBLEdBQUM7SUFBSSxJQUFJQyxJQUFFLENBQUM7SUFBRztRQUFLLElBQUlDLElBQUVEO1FBQ3pIOzs7OztDQUtDLEdBQUVDLEVBQUVDLEtBQUssR0FBQ0E7UUFBTUQsRUFBRUUsU0FBUyxHQUFDQTtRQUFVLElBQUlDLElBQUVDO1FBQW1CLElBQUlDLElBQUVDO1FBQW1CLElBQUlDLElBQUU7UUFBTSxJQUFJQyxJQUFFO1FBQXdDLFNBQVNQLE1BQU1GLENBQUMsRUFBQ0MsQ0FBQztZQUFFLElBQUcsT0FBT0QsTUFBSSxVQUFTO2dCQUFDLE1BQU0sSUFBSVUsVUFBVTtZQUFnQztZQUFDLElBQUlKLElBQUUsQ0FBQztZQUFFLElBQUlHLElBQUVSLEtBQUcsQ0FBQztZQUFFLElBQUlVLElBQUVYLEVBQUVZLEtBQUssQ0FBQ0o7WUFBRyxJQUFJSyxJQUFFSixFQUFFSyxNQUFNLElBQUVWO1lBQUUsSUFBSSxJQUFJVyxJQUFFLEdBQUVBLElBQUVKLEVBQUVLLE1BQU0sRUFBQ0QsSUFBSTtnQkFBQyxJQUFJRSxJQUFFTixDQUFDLENBQUNJLEVBQUU7Z0JBQUMsSUFBSUcsSUFBRUQsRUFBRUUsT0FBTyxDQUFDO2dCQUFLLElBQUdELElBQUUsR0FBRTtvQkFBQztnQkFBUTtnQkFBQyxJQUFJRSxJQUFFSCxFQUFFSSxNQUFNLENBQUMsR0FBRUgsR0FBR0ksSUFBSTtnQkFBRyxJQUFJQyxJQUFFTixFQUFFSSxNQUFNLENBQUMsRUFBRUgsR0FBRUQsRUFBRUQsTUFBTSxFQUFFTSxJQUFJO2dCQUFHLElBQUcsT0FBS0MsQ0FBQyxDQUFDLEVBQUUsRUFBQztvQkFBQ0EsSUFBRUEsRUFBRUMsS0FBSyxDQUFDLEdBQUUsQ0FBQztnQkFBRTtnQkFBQyxJQUFHQyxhQUFXbkIsQ0FBQyxDQUFDYyxFQUFFLEVBQUM7b0JBQUNkLENBQUMsQ0FBQ2MsRUFBRSxHQUFDTSxVQUFVSCxHQUFFVjtnQkFBRTtZQUFDO1lBQUMsT0FBT1A7UUFBQztRQUFDLFNBQVNILFVBQVVILENBQUMsRUFBQ0MsQ0FBQyxFQUFDRyxDQUFDO1lBQUUsSUFBSUksSUFBRUosS0FBRyxDQUFDO1lBQUUsSUFBSU8sSUFBRUgsRUFBRW1CLE1BQU0sSUFBRXJCO1lBQUUsSUFBRyxPQUFPSyxNQUFJLFlBQVc7Z0JBQUMsTUFBTSxJQUFJRCxVQUFVO1lBQTJCO1lBQUMsSUFBRyxDQUFDRCxFQUFFbUIsSUFBSSxDQUFDNUIsSUFBRztnQkFBQyxNQUFNLElBQUlVLFVBQVU7WUFBMkI7WUFBQyxJQUFJRyxJQUFFRixFQUFFVjtZQUFHLElBQUdZLEtBQUcsQ0FBQ0osRUFBRW1CLElBQUksQ0FBQ2YsSUFBRztnQkFBQyxNQUFNLElBQUlILFVBQVU7WUFBMEI7WUFBQyxJQUFJSyxJQUFFZixJQUFFLE1BQUlhO1lBQUUsSUFBRyxRQUFNTCxFQUFFcUIsTUFBTSxFQUFDO2dCQUFDLElBQUlaLElBQUVULEVBQUVxQixNQUFNLEdBQUM7Z0JBQUUsSUFBR0MsTUFBTWIsTUFBSSxDQUFDYyxTQUFTZCxJQUFHO29CQUFDLE1BQU0sSUFBSVAsVUFBVTtnQkFBMkI7Z0JBQUNLLEtBQUcsZUFBYWlCLEtBQUtDLEtBQUssQ0FBQ2hCO1lBQUU7WUFBQyxJQUFHVCxFQUFFMEIsTUFBTSxFQUFDO2dCQUFDLElBQUcsQ0FBQ3pCLEVBQUVtQixJQUFJLENBQUNwQixFQUFFMEIsTUFBTSxHQUFFO29CQUFDLE1BQU0sSUFBSXhCLFVBQVU7Z0JBQTJCO2dCQUFDSyxLQUFHLGNBQVlQLEVBQUUwQixNQUFNO1lBQUE7WUFBQyxJQUFHMUIsRUFBRTJCLElBQUksRUFBQztnQkFBQyxJQUFHLENBQUMxQixFQUFFbUIsSUFBSSxDQUFDcEIsRUFBRTJCLElBQUksR0FBRTtvQkFBQyxNQUFNLElBQUl6QixVQUFVO2dCQUF5QjtnQkFBQ0ssS0FBRyxZQUFVUCxFQUFFMkIsSUFBSTtZQUFBO1lBQUMsSUFBRzNCLEVBQUU0QixPQUFPLEVBQUM7Z0JBQUMsSUFBRyxPQUFPNUIsRUFBRTRCLE9BQU8sQ0FBQ0MsV0FBVyxLQUFHLFlBQVc7b0JBQUMsTUFBTSxJQUFJM0IsVUFBVTtnQkFBNEI7Z0JBQUNLLEtBQUcsZUFBYVAsRUFBRTRCLE9BQU8sQ0FBQ0MsV0FBVztZQUFFO1lBQUMsSUFBRzdCLEVBQUU4QixRQUFRLEVBQUM7Z0JBQUN2QixLQUFHO1lBQVk7WUFBQyxJQUFHUCxFQUFFK0IsTUFBTSxFQUFDO2dCQUFDeEIsS0FBRztZQUFVO1lBQUMsSUFBR1AsRUFBRWdDLFFBQVEsRUFBQztnQkFBQyxJQUFJdEIsSUFBRSxPQUFPVixFQUFFZ0MsUUFBUSxLQUFHLFdBQVNoQyxFQUFFZ0MsUUFBUSxDQUFDQyxXQUFXLEtBQUdqQyxFQUFFZ0MsUUFBUTtnQkFBQyxPQUFPdEI7b0JBQUcsS0FBSzt3QkFBS0gsS0FBRzt3QkFBb0I7b0JBQU0sS0FBSTt3QkFBTUEsS0FBRzt3QkFBaUI7b0JBQU0sS0FBSTt3QkFBU0EsS0FBRzt3QkFBb0I7b0JBQU0sS0FBSTt3QkFBT0EsS0FBRzt3QkFBa0I7b0JBQU07d0JBQVEsTUFBTSxJQUFJTCxVQUFVO2dCQUE2QjtZQUFDO1lBQUMsT0FBT0s7UUFBQztRQUFDLFNBQVNXLFVBQVUxQixDQUFDLEVBQUNDLENBQUM7WUFBRSxJQUFHO2dCQUFDLE9BQU9BLEVBQUVEO1lBQUUsRUFBQyxPQUFNQyxHQUFFO2dCQUFDLE9BQU9EO1lBQUM7UUFBQztJQUFDO0lBQUswQyxPQUFPQyxPQUFPLEdBQUMzQztBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY29va2llL2luZGV4LmpzP2IyNWUiXSwic291cmNlc0NvbnRlbnQiOlsiKCgpPT57XCJ1c2Ugc3RyaWN0XCI7aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBlPXt9OygoKT0+e3ZhciByPWU7XG4vKiFcbiAqIGNvb2tpZVxuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hblxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovci5wYXJzZT1wYXJzZTtyLnNlcmlhbGl6ZT1zZXJpYWxpemU7dmFyIGk9ZGVjb2RlVVJJQ29tcG9uZW50O3ZhciB0PWVuY29kZVVSSUNvbXBvbmVudDt2YXIgYT0vOyAqLzt2YXIgbj0vXltcXHUwMDA5XFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskLztmdW5jdGlvbiBwYXJzZShlLHIpe2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHN0ciBtdXN0IGJlIGEgc3RyaW5nXCIpfXZhciB0PXt9O3ZhciBuPXJ8fHt9O3ZhciBvPWUuc3BsaXQoYSk7dmFyIHM9bi5kZWNvZGV8fGk7Zm9yKHZhciBwPTA7cDxvLmxlbmd0aDtwKyspe3ZhciBmPW9bcF07dmFyIHU9Zi5pbmRleE9mKFwiPVwiKTtpZih1PDApe2NvbnRpbnVlfXZhciB2PWYuc3Vic3RyKDAsdSkudHJpbSgpO3ZhciBjPWYuc3Vic3RyKCsrdSxmLmxlbmd0aCkudHJpbSgpO2lmKCdcIic9PWNbMF0pe2M9Yy5zbGljZSgxLC0xKX1pZih1bmRlZmluZWQ9PXRbdl0pe3Rbdl09dHJ5RGVjb2RlKGMscyl9fXJldHVybiB0fWZ1bmN0aW9uIHNlcmlhbGl6ZShlLHIsaSl7dmFyIGE9aXx8e307dmFyIG89YS5lbmNvZGV8fHQ7aWYodHlwZW9mIG8hPT1cImZ1bmN0aW9uXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gZW5jb2RlIGlzIGludmFsaWRcIil9aWYoIW4udGVzdChlKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IG5hbWUgaXMgaW52YWxpZFwiKX12YXIgcz1vKHIpO2lmKHMmJiFuLnRlc3Qocykpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCB2YWwgaXMgaW52YWxpZFwiKX12YXIgcD1lK1wiPVwiK3M7aWYobnVsbCE9YS5tYXhBZ2Upe3ZhciBmPWEubWF4QWdlLTA7aWYoaXNOYU4oZil8fCFpc0Zpbml0ZShmKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBtYXhBZ2UgaXMgaW52YWxpZFwiKX1wKz1cIjsgTWF4LUFnZT1cIitNYXRoLmZsb29yKGYpfWlmKGEuZG9tYWluKXtpZighbi50ZXN0KGEuZG9tYWluKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBkb21haW4gaXMgaW52YWxpZFwiKX1wKz1cIjsgRG9tYWluPVwiK2EuZG9tYWlufWlmKGEucGF0aCl7aWYoIW4udGVzdChhLnBhdGgpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIHBhdGggaXMgaW52YWxpZFwiKX1wKz1cIjsgUGF0aD1cIithLnBhdGh9aWYoYS5leHBpcmVzKXtpZih0eXBlb2YgYS5leHBpcmVzLnRvVVRDU3RyaW5nIT09XCJmdW5jdGlvblwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIGV4cGlyZXMgaXMgaW52YWxpZFwiKX1wKz1cIjsgRXhwaXJlcz1cIithLmV4cGlyZXMudG9VVENTdHJpbmcoKX1pZihhLmh0dHBPbmx5KXtwKz1cIjsgSHR0cE9ubHlcIn1pZihhLnNlY3VyZSl7cCs9XCI7IFNlY3VyZVwifWlmKGEuc2FtZVNpdGUpe3ZhciB1PXR5cGVvZiBhLnNhbWVTaXRlPT09XCJzdHJpbmdcIj9hLnNhbWVTaXRlLnRvTG93ZXJDYXNlKCk6YS5zYW1lU2l0ZTtzd2l0Y2godSl7Y2FzZSB0cnVlOnArPVwiOyBTYW1lU2l0ZT1TdHJpY3RcIjticmVhaztjYXNlXCJsYXhcIjpwKz1cIjsgU2FtZVNpdGU9TGF4XCI7YnJlYWs7Y2FzZVwic3RyaWN0XCI6cCs9XCI7IFNhbWVTaXRlPVN0cmljdFwiO2JyZWFrO2Nhc2VcIm5vbmVcIjpwKz1cIjsgU2FtZVNpdGU9Tm9uZVwiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBzYW1lU2l0ZSBpcyBpbnZhbGlkXCIpfX1yZXR1cm4gcH1mdW5jdGlvbiB0cnlEZWNvZGUoZSxyKXt0cnl7cmV0dXJuIHIoZSl9Y2F0Y2gocil7cmV0dXJuIGV9fX0pKCk7bW9kdWxlLmV4cG9ydHM9ZX0pKCk7Il0sIm5hbWVzIjpbIl9fbmNjd3Bja19yZXF1aXJlX18iLCJhYiIsIl9fZGlybmFtZSIsImUiLCJyIiwicGFyc2UiLCJzZXJpYWxpemUiLCJpIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidCIsImVuY29kZVVSSUNvbXBvbmVudCIsImEiLCJuIiwiVHlwZUVycm9yIiwibyIsInNwbGl0IiwicyIsImRlY29kZSIsInAiLCJsZW5ndGgiLCJmIiwidSIsImluZGV4T2YiLCJ2Iiwic3Vic3RyIiwidHJpbSIsImMiLCJzbGljZSIsInVuZGVmaW5lZCIsInRyeURlY29kZSIsImVuY29kZSIsInRlc3QiLCJtYXhBZ2UiLCJpc05hTiIsImlzRmluaXRlIiwiTWF0aCIsImZsb29yIiwiZG9tYWluIiwicGF0aCIsImV4cGlyZXMiLCJ0b1VUQ1N0cmluZyIsImh0dHBPbmx5Iiwic2VjdXJlIiwic2FtZVNpdGUiLCJ0b0xvd2VyQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/server-only/empty.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/server-only/empty.js ***!
  \**************************************************************/
/***/ (() => {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIobWlkZGxld2FyZSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3NlcnZlci1vbmx5L2VtcHR5LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/server-only/empty.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/api/headers.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/esm/api/headers.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/headers.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_headers__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_headers__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vYXBpL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkMsQ0FFN0MsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2FwaS9oZWFkZXJzLmpzP2MwNWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL2hlYWRlcnNcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/api/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/api/navigation.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/esm/api/navigation.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(middleware)/./node_modules/next/dist/esm/client/components/navigation.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0QsQ0FFaEQsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2FwaS9uYXZpZ2F0aW9uLmpzP2Y2MDIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/api/navigation.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/action-async-storage.external.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionAsyncStorage: () => (/* binding */ actionAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst actionAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=action-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDekQsTUFBTUMscUJBQXFCRCw2RUFBdUJBLEdBQUcsQ0FFNUQseURBQXlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2FjdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzPzhkZTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCI7XG5leHBvcnQgY29uc3QgYWN0aW9uQXN5bmNTdG9yYWdlID0gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwiYWN0aW9uQXN5bmNTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/app-router-headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION: () => (/* binding */ ACTION),\n/* harmony export */   FLIGHT_PARAMETERS: () => (/* binding */ FLIGHT_PARAMETERS),\n/* harmony export */   NEXT_DID_POSTPONE_HEADER: () => (/* binding */ NEXT_DID_POSTPONE_HEADER),\n/* harmony export */   NEXT_ROUTER_PREFETCH_HEADER: () => (/* binding */ NEXT_ROUTER_PREFETCH_HEADER),\n/* harmony export */   NEXT_ROUTER_STATE_TREE: () => (/* binding */ NEXT_ROUTER_STATE_TREE),\n/* harmony export */   NEXT_RSC_UNION_QUERY: () => (/* binding */ NEXT_RSC_UNION_QUERY),\n/* harmony export */   NEXT_URL: () => (/* binding */ NEXT_URL),\n/* harmony export */   RSC_CONTENT_TYPE_HEADER: () => (/* binding */ RSC_CONTENT_TYPE_HEADER),\n/* harmony export */   RSC_HEADER: () => (/* binding */ RSC_HEADER),\n/* harmony export */   RSC_VARY_HEADER: () => (/* binding */ RSC_VARY_HEADER)\n/* harmony export */ });\nconst RSC_HEADER = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH_HEADER = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst RSC_VARY_HEADER = RSC_HEADER + \", \" + NEXT_ROUTER_STATE_TREE + \", \" + NEXT_ROUTER_PREFETCH_HEADER + \", \" + NEXT_URL;\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC_HEADER\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH_HEADER\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\";\nconst NEXT_DID_POSTPONE_HEADER = \"x-nextjs-postponed\"; //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxhQUFhLE1BQU07QUFDekIsTUFBTUMsU0FBUyxjQUFjO0FBQzdCLE1BQU1DLHlCQUF5Qix5QkFBeUI7QUFDeEQsTUFBTUMsOEJBQThCLHVCQUF1QjtBQUMzRCxNQUFNQyxXQUFXLFdBQVc7QUFDNUIsTUFBTUMsMEJBQTBCLG1CQUFtQjtBQUNuRCxNQUFNQyxrQkFBa0JOLGFBQWEsT0FBT0UseUJBQXlCLE9BQU9DLDhCQUE4QixPQUFPQyxTQUFTO0FBQzFILE1BQU1HLG9CQUFvQjtJQUM3QjtRQUNJUDtLQUNIO0lBQ0Q7UUFDSUU7S0FDSDtJQUNEO1FBQ0lDO0tBQ0g7Q0FDSixDQUFDO0FBQ0ssTUFBTUssdUJBQXVCLE9BQU87QUFDcEMsTUFBTUMsMkJBQTJCLHFCQUFxQixDQUU3RCw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzPzIyN2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJTQ19IRUFERVIgPSBcIlJTQ1wiO1xuZXhwb3J0IGNvbnN0IEFDVElPTiA9IFwiTmV4dC1BY3Rpb25cIjtcbmV4cG9ydCBjb25zdCBORVhUX1JPVVRFUl9TVEFURV9UUkVFID0gXCJOZXh0LVJvdXRlci1TdGF0ZS1UcmVlXCI7XG5leHBvcnQgY29uc3QgTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSID0gXCJOZXh0LVJvdXRlci1QcmVmZXRjaFwiO1xuZXhwb3J0IGNvbnN0IE5FWFRfVVJMID0gXCJOZXh0LVVybFwiO1xuZXhwb3J0IGNvbnN0IFJTQ19DT05URU5UX1RZUEVfSEVBREVSID0gXCJ0ZXh0L3gtY29tcG9uZW50XCI7XG5leHBvcnQgY29uc3QgUlNDX1ZBUllfSEVBREVSID0gUlNDX0hFQURFUiArIFwiLCBcIiArIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUUgKyBcIiwgXCIgKyBORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVIgKyBcIiwgXCIgKyBORVhUX1VSTDtcbmV4cG9ydCBjb25zdCBGTElHSFRfUEFSQU1FVEVSUyA9IFtcbiAgICBbXG4gICAgICAgIFJTQ19IRUFERVJcbiAgICBdLFxuICAgIFtcbiAgICAgICAgTkVYVF9ST1VURVJfU1RBVEVfVFJFRVxuICAgIF0sXG4gICAgW1xuICAgICAgICBORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVJcbiAgICBdXG5dO1xuZXhwb3J0IGNvbnN0IE5FWFRfUlNDX1VOSU9OX1FVRVJZID0gXCJfcnNjXCI7XG5leHBvcnQgY29uc3QgTkVYVF9ESURfUE9TVFBPTkVfSEVBREVSID0gXCJ4LW5leHRqcy1wb3N0cG9uZWRcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlci1oZWFkZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJSU0NfSEVBREVSIiwiQUNUSU9OIiwiTkVYVF9ST1VURVJfU1RBVEVfVFJFRSIsIk5FWFRfUk9VVEVSX1BSRUZFVENIX0hFQURFUiIsIk5FWFRfVVJMIiwiUlNDX0NPTlRFTlRfVFlQRV9IRUFERVIiLCJSU0NfVkFSWV9IRUFERVIiLCJGTElHSFRfUEFSQU1FVEVSUyIsIk5FWFRfUlNDX1VOSU9OX1FVRVJZIiwiTkVYVF9ESURfUE9TVFBPTkVfSEVBREVSIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/async-local-storage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncLocalStorage: () => (/* binding */ createAsyncLocalStorage)\n/* harmony export */ });\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsMkNBQTJDLElBQUlDLE1BQU07QUFDM0QsTUFBTUM7SUFDRkMsVUFBVTtRQUNOLE1BQU1IO0lBQ1Y7SUFDQUksV0FBVztRQUNQLDRFQUE0RTtRQUM1RSxPQUFPQztJQUNYO0lBQ0FDLE1BQU07UUFDRixNQUFNTjtJQUNWO0lBQ0FPLE9BQU87UUFDSCxNQUFNUDtJQUNWO0lBQ0FRLFlBQVk7UUFDUixNQUFNUjtJQUNWO0FBQ0o7QUFDQSxNQUFNUywrQkFBK0JDLFdBQVdDLGlCQUFpQjtBQUMxRCxTQUFTQztJQUNaLElBQUlILDhCQUE4QjtRQUM5QixPQUFPLElBQUlBO0lBQ2Y7SUFDQSxPQUFPLElBQUlQO0FBQ2YsRUFFQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcz9iNDJmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3IgPSBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZVwiKTtcbmNsYXNzIEZha2VBc3luY0xvY2FsU3RvcmFnZSB7XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZ2V0U3RvcmUoKSB7XG4gICAgICAgIC8vIFRoaXMgZmFrZSBpbXBsZW1lbnRhdGlvbiBvZiBBc3luY0xvY2FsU3RvcmFnZSBhbHdheXMgcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcnVuKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBleGl0KCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBlbnRlcldpdGgoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxufVxuY29uc3QgbWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSA9IGdsb2JhbFRoaXMuQXN5bmNMb2NhbFN0b3JhZ2U7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKSB7XG4gICAgaWYgKG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRmFrZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzeW5jLWxvY2FsLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbInNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3IiLCJFcnJvciIsIkZha2VBc3luY0xvY2FsU3RvcmFnZSIsImRpc2FibGUiLCJnZXRTdG9yZSIsInVuZGVmaW5lZCIsInJ1biIsImV4aXQiLCJlbnRlcldpdGgiLCJtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlIiwiZ2xvYmFsVGhpcyIsIkFzeW5jTG9jYWxTdG9yYWdlIiwiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bailoutToClientRendering: () => (/* binding */ bailoutToClientRendering)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_lazy_dynamic_bailout_to_csr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/lazy-dynamic/bailout-to-csr */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\nfunction bailoutToClientRendering(reason) {\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.forceStatic) return;\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.isStaticGeneration) throw new _shared_lib_lazy_dynamic_bailout_to_csr__WEBPACK_IMPORTED_MODULE_0__.BailoutToCSRError(reason);\n} //# sourceMappingURL=bailout-to-client-rendering.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRjtBQUNTO0FBQ25GLFNBQVNFLHlCQUF5QkMsTUFBTTtJQUMzQyxNQUFNQyx3QkFBd0JILG1HQUE0QkEsQ0FBQ0ksUUFBUTtJQUNuRSxJQUFJRCx5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkUsV0FBVyxFQUFFO0lBQ2hGLElBQUlGLHlCQUF5QixPQUFPLEtBQUssSUFBSUEsc0JBQXNCRyxrQkFBa0IsRUFBRSxNQUFNLElBQUlQLHNGQUFpQkEsQ0FBQ0c7QUFDdkgsRUFFQSx1REFBdUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzP2JmNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFpbG91dFRvQ1NSRXJyb3IgfSBmcm9tIFwiLi4vLi4vc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvYmFpbG91dC10by1jc3JcIjtcbmltcG9ydCB7IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UgfSBmcm9tIFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsXCI7XG5leHBvcnQgZnVuY3Rpb24gYmFpbG91dFRvQ2xpZW50UmVuZGVyaW5nKHJlYXNvbikge1xuICAgIGNvbnN0IHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZm9yY2VTdGF0aWMpIHJldHVybjtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuaXNTdGF0aWNHZW5lcmF0aW9uKSB0aHJvdyBuZXcgQmFpbG91dFRvQ1NSRXJyb3IocmVhc29uKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJCYWlsb3V0VG9DU1JFcnJvciIsInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiLCJiYWlsb3V0VG9DbGllbnRSZW5kZXJpbmciLCJyZWFzb24iLCJzdGF0aWNHZW5lcmF0aW9uU3RvcmUiLCJnZXRTdG9yZSIsImZvcmNlU3RhdGljIiwiaXNTdGF0aWNHZW5lcmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clientHookInServerComponentError: () => (/* binding */ clientHookInServerComponentError)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction clientHookInServerComponentError(hookName) {\n    if (true) {\n        // If useState is undefined we're in a server component\n        if (!(react__WEBPACK_IMPORTED_MODULE_0___default().useState)) {\n            throw new Error(\"\" + hookName + ' only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component');\n        }\n    }\n} //# sourceMappingURL=client-hook-in-server-component-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LWhvb2staW4tc2VydmVyLWNvbXBvbmVudC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7QUFDbkIsU0FBU0MsaUNBQWlDQyxRQUFRO0lBQ3JELElBQUlDLElBQXFDLEVBQUU7UUFDdkMsdURBQXVEO1FBQ3ZELElBQUksQ0FBQ0gsdURBQWMsRUFBRTtZQUNqQixNQUFNLElBQUlLLE1BQU0sS0FBS0gsV0FBVztRQUNwQztJQUNKO0FBQ0osRUFFQSxpRUFBaUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LWhvb2staW4tc2VydmVyLWNvbXBvbmVudC1lcnJvci5qcz81Njc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiBjbGllbnRIb29rSW5TZXJ2ZXJDb21wb25lbnRFcnJvcihob29rTmFtZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgLy8gSWYgdXNlU3RhdGUgaXMgdW5kZWZpbmVkIHdlJ3JlIGluIGEgc2VydmVyIGNvbXBvbmVudFxuICAgICAgICBpZiAoIVJlYWN0LnVzZVN0YXRlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJcIiArIGhvb2tOYW1lICsgJyBvbmx5IHdvcmtzIGluIENsaWVudCBDb21wb25lbnRzLiBBZGQgdGhlIFwidXNlIGNsaWVudFwiIGRpcmVjdGl2ZSBhdCB0aGUgdG9wIG9mIHRoZSBmaWxlIHRvIHVzZSBpdC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9yZWFjdC1jbGllbnQtaG9vay1pbi1zZXJ2ZXItY29tcG9uZW50Jyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudC1ob29rLWluLXNlcnZlci1jb21wb25lbnQtZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwiY2xpZW50SG9va0luU2VydmVyQ29tcG9uZW50RXJyb3IiLCJob29rTmFtZSIsInByb2Nlc3MiLCJ1c2VTdGF0ZSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/draft-mode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftMode: () => (/* binding */ DraftMode)\n/* harmony export */ });\n/* harmony import */ var _static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static-generation-bailout */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\");\n\nclass DraftMode {\n    get isEnabled() {\n        return this._provider.isEnabled;\n    }\n    enable() {\n        if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__.staticGenerationBailout)(\"draftMode().enable()\")) {\n            return;\n        }\n        return this._provider.enable();\n    }\n    disable() {\n        if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__.staticGenerationBailout)(\"draftMode().disable()\")) {\n            return;\n        }\n        return this._provider.disable();\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n} //# sourceMappingURL=draft-mode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvZHJhZnQtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzRTtBQUMvRCxNQUFNQztJQUNULElBQUlDLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQ0MsU0FBUyxDQUFDRCxTQUFTO0lBQ25DO0lBQ0FFLFNBQVM7UUFDTCxJQUFJSixtRkFBdUJBLENBQUMseUJBQXlCO1lBQ2pEO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQ0csU0FBUyxDQUFDQyxNQUFNO0lBQ2hDO0lBQ0FDLFVBQVU7UUFDTixJQUFJTCxtRkFBdUJBLENBQUMsMEJBQTBCO1lBQ2xEO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQ0csU0FBUyxDQUFDRSxPQUFPO0lBQ2pDO0lBQ0FDLFlBQVlDLFFBQVEsQ0FBQztRQUNqQixJQUFJLENBQUNKLFNBQVMsR0FBR0k7SUFDckI7QUFDSixFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9kcmFmdC1tb2RlLmpzPzkxYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSBmcm9tIFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1iYWlsb3V0XCI7XG5leHBvcnQgY2xhc3MgRHJhZnRNb2RlIHtcbiAgICBnZXQgaXNFbmFibGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuaXNFbmFibGVkO1xuICAgIH1cbiAgICBlbmFibGUoKSB7XG4gICAgICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uQmFpbG91dChcImRyYWZ0TW9kZSgpLmVuYWJsZSgpXCIpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3ZpZGVyLmVuYWJsZSgpO1xuICAgIH1cbiAgICBkaXNhYmxlKCkge1xuICAgICAgICBpZiAoc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQoXCJkcmFmdE1vZGUoKS5kaXNhYmxlKClcIikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuZGlzYWJsZSgpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihwcm92aWRlcil7XG4gICAgICAgIHRoaXMuX3Byb3ZpZGVyID0gcHJvdmlkZXI7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmFmdC1tb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCIsIkRyYWZ0TW9kZSIsImlzRW5hYmxlZCIsIl9wcm92aWRlciIsImVuYWJsZSIsImRpc2FibGUiLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/headers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/headers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   draftMode: () => (/* binding */ draftMode),\n/* harmony export */   headers: () => (/* binding */ headers)\n/* harmony export */ });\n/* harmony import */ var _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../server/web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _action_async_storage_external__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./action-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\");\n/* harmony import */ var _static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./static-generation-bailout */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\");\n/* harmony import */ var _draft_mode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./draft-mode */ \"(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js\");\n\n\n\n\n\n\n\nfunction headers() {\n    if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__.staticGenerationBailout)(\"headers\", {\n        link: \"https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\"\n    })) {\n        return _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(new Headers({}));\n    }\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: headers() expects to have requestAsyncStorage, none available.\");\n    }\n    return requestStore.headers;\n}\nfunction cookies() {\n    if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__.staticGenerationBailout)(\"cookies\", {\n        link: \"https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\"\n    })) {\n        return _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookiesAdapter.seal(new _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookies(new Headers({})));\n    }\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: cookies() expects to have requestAsyncStorage, none available.\");\n    }\n    const asyncActionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_4__.actionAsyncStorage.getStore();\n    if (asyncActionStore && (asyncActionStore.isAction || asyncActionStore.isAppRoute)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        return requestStore.mutableCookies;\n    }\n    return requestStore.cookies;\n}\nfunction draftMode() {\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: draftMode() expects to have requestAsyncStorage, none available.\");\n    }\n    return new _draft_mode__WEBPACK_IMPORTED_MODULE_6__.DraftMode(requestStore.draftMode);\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlHO0FBQ2Y7QUFDVDtBQUNGO0FBQ0Y7QUFDQztBQUM3QjtBQUNsQyxTQUFTTztJQUNaLElBQUlGLG1GQUF1QkEsQ0FBQyxXQUFXO1FBQ25DRyxNQUFNO0lBQ1YsSUFBSTtRQUNBLE9BQU9QLHVGQUFjQSxDQUFDUSxJQUFJLENBQUMsSUFBSUMsUUFBUSxDQUFDO0lBQzVDO0lBQ0EsTUFBTUMsZUFBZVIsZ0ZBQW1CQSxDQUFDUyxRQUFRO0lBQ2pELElBQUksQ0FBQ0QsY0FBYztRQUNmLE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtJQUNBLE9BQU9GLGFBQWFKLE9BQU87QUFDL0I7QUFDTyxTQUFTTztJQUNaLElBQUlULG1GQUF1QkEsQ0FBQyxXQUFXO1FBQ25DRyxNQUFNO0lBQ1YsSUFBSTtRQUNBLE9BQU9SLHNHQUFxQkEsQ0FBQ1MsSUFBSSxDQUFDLElBQUlQLDhFQUFjQSxDQUFDLElBQUlRLFFBQVEsQ0FBQztJQUN0RTtJQUNBLE1BQU1DLGVBQWVSLGdGQUFtQkEsQ0FBQ1MsUUFBUTtJQUNqRCxJQUFJLENBQUNELGNBQWM7UUFDZixNQUFNLElBQUlFLE1BQU07SUFDcEI7SUFDQSxNQUFNRSxtQkFBbUJYLDhFQUFrQkEsQ0FBQ1EsUUFBUTtJQUNwRCxJQUFJRyxvQkFBcUJBLENBQUFBLGlCQUFpQkMsUUFBUSxJQUFJRCxpQkFBaUJFLFVBQVUsR0FBRztRQUNoRiwyRUFBMkU7UUFDM0UsK0RBQStEO1FBQy9ELE9BQU9OLGFBQWFPLGNBQWM7SUFDdEM7SUFDQSxPQUFPUCxhQUFhRyxPQUFPO0FBQy9CO0FBQ08sU0FBU0s7SUFDWixNQUFNUixlQUFlUixnRkFBbUJBLENBQUNTLFFBQVE7SUFDakQsSUFBSSxDQUFDRCxjQUFjO1FBQ2YsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsT0FBTyxJQUFJUCxrREFBU0EsQ0FBQ0ssYUFBYVEsU0FBUztBQUMvQyxFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9oZWFkZXJzLmpzPzU3YjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdENvb2tpZXNBZGFwdGVyIH0gZnJvbSBcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBIZWFkZXJzQWRhcHRlciB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IFJlcXVlc3RDb29raWVzIH0gZnJvbSBcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xuaW1wb3J0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSB9IGZyb20gXCIuL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuaW1wb3J0IHsgYWN0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vYWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWxcIjtcbmltcG9ydCB7IHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gZnJvbSBcIi4vc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dFwiO1xuaW1wb3J0IHsgRHJhZnRNb2RlIH0gZnJvbSBcIi4vZHJhZnQtbW9kZVwiO1xuZXhwb3J0IGZ1bmN0aW9uIGhlYWRlcnMoKSB7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0KFwiaGVhZGVyc1wiLCB7XG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vcmVuZGVyaW5nL3N0YXRpYy1hbmQtZHluYW1pYyNkeW5hbWljLXJlbmRlcmluZ1wiXG4gICAgfSkpIHtcbiAgICAgICAgcmV0dXJuIEhlYWRlcnNBZGFwdGVyLnNlYWwobmV3IEhlYWRlcnMoe30pKTtcbiAgICB9XG4gICAgY29uc3QgcmVxdWVzdFN0b3JlID0gcmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghcmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogaGVhZGVycygpIGV4cGVjdHMgdG8gaGF2ZSByZXF1ZXN0QXN5bmNTdG9yYWdlLCBub25lIGF2YWlsYWJsZS5cIik7XG4gICAgfVxuICAgIHJldHVybiByZXF1ZXN0U3RvcmUuaGVhZGVycztcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb29raWVzKCkge1xuICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uQmFpbG91dChcImNvb2tpZXNcIiwge1xuICAgICAgICBsaW5rOiBcImh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3JlbmRlcmluZy9zdGF0aWMtYW5kLWR5bmFtaWMjZHluYW1pYy1yZW5kZXJpbmdcIlxuICAgIH0pKSB7XG4gICAgICAgIHJldHVybiBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChuZXcgUmVxdWVzdENvb2tpZXMobmV3IEhlYWRlcnMoe30pKSk7XG4gICAgfVxuICAgIGNvbnN0IHJlcXVlc3RTdG9yZSA9IHJlcXVlc3RBc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoIXJlcXVlc3RTdG9yZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IGNvb2tpZXMoKSBleHBlY3RzIHRvIGhhdmUgcmVxdWVzdEFzeW5jU3RvcmFnZSwgbm9uZSBhdmFpbGFibGUuXCIpO1xuICAgIH1cbiAgICBjb25zdCBhc3luY0FjdGlvblN0b3JlID0gYWN0aW9uQXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKGFzeW5jQWN0aW9uU3RvcmUgJiYgKGFzeW5jQWN0aW9uU3RvcmUuaXNBY3Rpb24gfHwgYXN5bmNBY3Rpb25TdG9yZS5pc0FwcFJvdXRlKSkge1xuICAgICAgICAvLyBXZSBjYW4ndCBjb25kaXRpb25hbGx5IHJldHVybiBkaWZmZXJlbnQgdHlwZXMgaGVyZSBiYXNlZCBvbiB0aGUgY29udGV4dC5cbiAgICAgICAgLy8gVG8gYXZvaWQgY29uZnVzaW9uLCB3ZSBhbHdheXMgcmV0dXJuIHRoZSByZWFkb25seSB0eXBlIGhlcmUuXG4gICAgICAgIHJldHVybiByZXF1ZXN0U3RvcmUubXV0YWJsZUNvb2tpZXM7XG4gICAgfVxuICAgIHJldHVybiByZXF1ZXN0U3RvcmUuY29va2llcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBkcmFmdE1vZGUoKSB7XG4gICAgY29uc3QgcmVxdWVzdFN0b3JlID0gcmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghcmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogZHJhZnRNb2RlKCkgZXhwZWN0cyB0byBoYXZlIHJlcXVlc3RBc3luY1N0b3JhZ2UsIG5vbmUgYXZhaWxhYmxlLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEcmFmdE1vZGUocmVxdWVzdFN0b3JlLmRyYWZ0TW9kZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIlJlcXVlc3RDb29raWVzQWRhcHRlciIsIkhlYWRlcnNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJyZXF1ZXN0QXN5bmNTdG9yYWdlIiwiYWN0aW9uQXN5bmNTdG9yYWdlIiwic3RhdGljR2VuZXJhdGlvbkJhaWxvdXQiLCJEcmFmdE1vZGUiLCJoZWFkZXJzIiwibGluayIsInNlYWwiLCJIZWFkZXJzIiwicmVxdWVzdFN0b3JlIiwiZ2V0U3RvcmUiLCJFcnJvciIsImNvb2tpZXMiLCJhc3luY0FjdGlvblN0b3JlIiwiaXNBY3Rpb24iLCJpc0FwcFJvdXRlIiwibXV0YWJsZUNvb2tpZXMiLCJkcmFmdE1vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/hooks-server-context.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicServerError: () => (/* binding */ DynamicServerError),\n/* harmony export */   isDynamicServerError: () => (/* binding */ isDynamicServerError)\n/* harmony export */ });\nconst DYNAMIC_ERROR_CODE = \"DYNAMIC_SERVER_USAGE\";\nclass DynamicServerError extends Error {\n    constructor(description){\n        super(\"Dynamic server usage: \" + description);\n        this.description = description;\n        this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nfunction isDynamicServerError(err) {\n    if (typeof err !== \"object\" || err === null || !(\"digest\" in err) || typeof err.digest !== \"string\") {\n        return false;\n    }\n    return err.digest === DYNAMIC_ERROR_CODE;\n} //# sourceMappingURL=hooks-server-context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxxQkFBcUI7QUFDcEIsTUFBTUMsMkJBQTJCQztJQUNwQ0MsWUFBWUMsV0FBVyxDQUFDO1FBQ3BCLEtBQUssQ0FBQywyQkFBMkJBO1FBQ2pDLElBQUksQ0FBQ0EsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLE1BQU0sR0FBR0w7SUFDbEI7QUFDSjtBQUNPLFNBQVNNLHFCQUFxQkMsR0FBRztJQUNwQyxJQUFJLE9BQU9BLFFBQVEsWUFBWUEsUUFBUSxRQUFRLENBQUUsYUFBWUEsR0FBRSxLQUFNLE9BQU9BLElBQUlGLE1BQU0sS0FBSyxVQUFVO1FBQ2pHLE9BQU87SUFDWDtJQUNBLE9BQU9FLElBQUlGLE1BQU0sS0FBS0w7QUFDMUIsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanM/ODJlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEWU5BTUlDX0VSUk9SX0NPREUgPSBcIkRZTkFNSUNfU0VSVkVSX1VTQUdFXCI7XG5leHBvcnQgY2xhc3MgRHluYW1pY1NlcnZlckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGRlc2NyaXB0aW9uKXtcbiAgICAgICAgc3VwZXIoXCJEeW5hbWljIHNlcnZlciB1c2FnZTogXCIgKyBkZXNjcmlwdGlvbik7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBEWU5BTUlDX0VSUk9SX0NPREU7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzRHluYW1pY1NlcnZlckVycm9yKGVycikge1xuICAgIGlmICh0eXBlb2YgZXJyICE9PSBcIm9iamVjdFwiIHx8IGVyciA9PT0gbnVsbCB8fCAhKFwiZGlnZXN0XCIgaW4gZXJyKSB8fCB0eXBlb2YgZXJyLmRpZ2VzdCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBlcnIuZGlnZXN0ID09PSBEWU5BTUlDX0VSUk9SX0NPREU7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhvb2tzLXNlcnZlci1jb250ZXh0LmpzLm1hcCJdLCJuYW1lcyI6WyJEWU5BTUlDX0VSUk9SX0NPREUiLCJEeW5hbWljU2VydmVyRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiZGVzY3JpcHRpb24iLCJkaWdlc3QiLCJpc0R5bmFtaWNTZXJ2ZXJFcnJvciIsImVyciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/navigation.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/navigation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadonlyURLSearchParams: () => (/* binding */ ReadonlyURLSearchParams),\n/* harmony export */   RedirectType: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_7__.RedirectType),\n/* harmony export */   ServerInsertedHTMLContext: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_6__.ServerInsertedHTMLContext),\n/* harmony export */   notFound: () => (/* reexport safe */ _not_found__WEBPACK_IMPORTED_MODULE_8__.notFound),\n/* harmony export */   permanentRedirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_7__.permanentRedirect),\n/* harmony export */   redirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_7__.redirect),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   usePathname: () => (/* binding */ usePathname),\n/* harmony export */   useRouter: () => (/* binding */ useRouter),\n/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),\n/* harmony export */   useSelectedLayoutSegment: () => (/* binding */ useSelectedLayoutSegment),\n/* harmony export */   useSelectedLayoutSegments: () => (/* binding */ useSelectedLayoutSegments),\n/* harmony export */   useServerInsertedHTML: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_6__.useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/app-router-context.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n/* harmony import */ var _shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/hooks-client-context.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n/* harmony import */ var _client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client-hook-in-server-component-error */ \"(middleware)/./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js\");\n/* harmony import */ var _router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./router-reducer/reducers/get-segment-value */ \"(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\");\n/* harmony import */ var _shared_lib_segment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n/* harmony import */ var _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared/lib/server-inserted-html.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n/* harmony import */ var _redirect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./redirect */ \"(middleware)/./node_modules/next/dist/esm/client/components/redirect.js\");\n/* harmony import */ var _not_found__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./not-found */ \"(middleware)/./node_modules/next/dist/esm/client/components/not-found.js\");\n\n\n\n\n\n\nconst INTERNAL_URLSEARCHPARAMS_INSTANCE = Symbol(\"internal for urlsearchparams readonly\");\nfunction readonlyURLSearchParamsError() {\n    return new Error(\"ReadonlyURLSearchParams cannot be modified\");\n}\nclass ReadonlyURLSearchParams {\n    [Symbol.iterator]() {\n        return this[INTERNAL_URLSEARCHPARAMS_INSTANCE][Symbol.iterator]();\n    }\n    append() {\n        throw readonlyURLSearchParamsError();\n    }\n    delete() {\n        throw readonlyURLSearchParamsError();\n    }\n    set() {\n        throw readonlyURLSearchParamsError();\n    }\n    sort() {\n        throw readonlyURLSearchParamsError();\n    }\n    constructor(urlSearchParams){\n        this[INTERNAL_URLSEARCHPARAMS_INSTANCE] = urlSearchParams;\n        this.entries = urlSearchParams.entries.bind(urlSearchParams);\n        this.forEach = urlSearchParams.forEach.bind(urlSearchParams);\n        this.get = urlSearchParams.get.bind(urlSearchParams);\n        this.getAll = urlSearchParams.getAll.bind(urlSearchParams);\n        this.has = urlSearchParams.has.bind(urlSearchParams);\n        this.keys = urlSearchParams.keys.bind(urlSearchParams);\n        this.values = urlSearchParams.values.bind(urlSearchParams);\n        this.toString = urlSearchParams.toString.bind(urlSearchParams);\n        this.size = urlSearchParams.size;\n    }\n}\n/**\n * Get a read-only URLSearchParams object. For example searchParams.get('foo') would return 'bar' when ?foo=bar\n * Learn more about URLSearchParams here: https://developer.mozilla.org/docs/Web/API/URLSearchParams\n */ function useSearchParams() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSearchParams\");\n    const searchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.SearchParamsContext);\n    // In the case where this is `null`, the compat types added in\n    // `next-env.d.ts` will add a new overload that changes the return type to\n    // include `null`.\n    const readonlySearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!searchParams) {\n            // When the router is not ready in pages, we won't have the search params\n            // available.\n            return null;\n        }\n        return new ReadonlyURLSearchParams(searchParams);\n    }, [\n        searchParams\n    ]);\n    if (true) {\n        // AsyncLocalStorage should not be included in the client bundle.\n        const { bailoutToClientRendering } = __webpack_require__(/*! ./bailout-to-client-rendering */ \"(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\");\n        // TODO-APP: handle dynamic = 'force-static' here and on the client\n        bailoutToClientRendering(\"useSearchParams()\");\n    }\n    return readonlySearchParams;\n}\n/**\n * Get the current pathname. For example usePathname() on /dashboard?foo=bar would return \"/dashboard\"\n */ function usePathname() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"usePathname\");\n    // In the case where this is `null`, the compat types added in `next-env.d.ts`\n    // will add a new overload that changes the return type to include `null`.\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathnameContext);\n}\n\n/**\n * Get the router methods. For example router.push('/dashboard')\n */ function useRouter() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useRouter\");\n    const router = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.AppRouterContext);\n    if (router === null) {\n        throw new Error(\"invariant expected app router to be mounted\");\n    }\n    return router;\n}\n// this function performs a depth-first search of the tree to find the selected\n// params\nfunction getSelectedParams(tree, params) {\n    if (params === void 0) params = {};\n    const parallelRoutes = tree[1];\n    for (const parallelRoute of Object.values(parallelRoutes)){\n        const segment = parallelRoute[0];\n        const isDynamicParameter = Array.isArray(segment);\n        const segmentValue = isDynamicParameter ? segment[1] : segment;\n        if (!segmentValue || segmentValue.startsWith(_shared_lib_segment__WEBPACK_IMPORTED_MODULE_5__.PAGE_SEGMENT_KEY)) continue;\n        // Ensure catchAll and optional catchall are turned into an array\n        const isCatchAll = isDynamicParameter && (segment[2] === \"c\" || segment[2] === \"oc\");\n        if (isCatchAll) {\n            params[segment[0]] = segment[1].split(\"/\");\n        } else if (isDynamicParameter) {\n            params[segment[0]] = segment[1];\n        }\n        params = getSelectedParams(parallelRoute, params);\n    }\n    return params;\n}\n/**\n * Get the current parameters. For example useParams() on /dashboard/[team]\n * where pathname is /dashboard/nextjs would return { team: 'nextjs' }\n */ function useParams() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useParams\");\n    const globalLayoutRouter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.GlobalLayoutRouterContext);\n    const pathParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathParamsContext);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        // When it's under app router\n        if (globalLayoutRouter == null ? void 0 : globalLayoutRouter.tree) {\n            return getSelectedParams(globalLayoutRouter.tree);\n        }\n        // When it's under client side pages router\n        return pathParams;\n    }, [\n        globalLayoutRouter == null ? void 0 : globalLayoutRouter.tree,\n        pathParams\n    ]);\n}\n// TODO-APP: handle parallel routes\n/**\n * Get the canonical parameters from the current level to the leaf node.\n */ function getSelectedLayoutSegmentPath(tree, parallelRouteKey, first, segmentPath) {\n    if (first === void 0) first = true;\n    if (segmentPath === void 0) segmentPath = [];\n    let node;\n    if (first) {\n        // Use the provided parallel route key on the first parallel route\n        node = tree[1][parallelRouteKey];\n    } else {\n        // After first parallel route prefer children, if there's no children pick the first parallel route.\n        const parallelRoutes = tree[1];\n        var _parallelRoutes_children;\n        node = (_parallelRoutes_children = parallelRoutes.children) != null ? _parallelRoutes_children : Object.values(parallelRoutes)[0];\n    }\n    if (!node) return segmentPath;\n    const segment = node[0];\n    const segmentValue = (0,_router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_4__.getSegmentValue)(segment);\n    if (!segmentValue || segmentValue.startsWith(_shared_lib_segment__WEBPACK_IMPORTED_MODULE_5__.PAGE_SEGMENT_KEY)) {\n        return segmentPath;\n    }\n    segmentPath.push(segmentValue);\n    return getSelectedLayoutSegmentPath(node, parallelRouteKey, false, segmentPath);\n}\n// TODO-APP: Expand description when the docs are written for it.\n/**\n * Get the canonical segment path from the current level to the leaf node.\n */ function useSelectedLayoutSegments(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSelectedLayoutSegments\");\n    const { tree } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.LayoutRouterContext);\n    return getSelectedLayoutSegmentPath(tree, parallelRouteKey);\n}\n// TODO-APP: Expand description when the docs are written for it.\n/**\n * Get the segment below the current level\n */ function useSelectedLayoutSegment(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSelectedLayoutSegment\");\n    const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey);\n    if (selectedLayoutSegments.length === 0) {\n        return null;\n    }\n    return selectedLayoutSegments[0];\n}\n\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbmF2aWdhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QztBQUMwRjtBQUNQO0FBQ3BDO0FBQ2I7QUFDbEI7QUFDNUQsTUFBTVcsb0NBQW9DQyxPQUFPO0FBQ2pELFNBQVNDO0lBQ0wsT0FBTyxJQUFJQyxNQUFNO0FBQ3JCO0FBQ08sTUFBTUM7SUFDVCxDQUFDSCxPQUFPSSxRQUFRLENBQUMsR0FBRztRQUNoQixPQUFPLElBQUksQ0FBQ0wsa0NBQWtDLENBQUNDLE9BQU9JLFFBQVEsQ0FBQztJQUNuRTtJQUNBQyxTQUFTO1FBQ0wsTUFBTUo7SUFDVjtJQUNBSyxTQUFTO1FBQ0wsTUFBTUw7SUFDVjtJQUNBTSxNQUFNO1FBQ0YsTUFBTU47SUFDVjtJQUNBTyxPQUFPO1FBQ0gsTUFBTVA7SUFDVjtJQUNBUSxZQUFZQyxlQUFlLENBQUM7UUFDeEIsSUFBSSxDQUFDWCxrQ0FBa0MsR0FBR1c7UUFDMUMsSUFBSSxDQUFDQyxPQUFPLEdBQUdELGdCQUFnQkMsT0FBTyxDQUFDQyxJQUFJLENBQUNGO1FBQzVDLElBQUksQ0FBQ0csT0FBTyxHQUFHSCxnQkFBZ0JHLE9BQU8sQ0FBQ0QsSUFBSSxDQUFDRjtRQUM1QyxJQUFJLENBQUNJLEdBQUcsR0FBR0osZ0JBQWdCSSxHQUFHLENBQUNGLElBQUksQ0FBQ0Y7UUFDcEMsSUFBSSxDQUFDSyxNQUFNLEdBQUdMLGdCQUFnQkssTUFBTSxDQUFDSCxJQUFJLENBQUNGO1FBQzFDLElBQUksQ0FBQ00sR0FBRyxHQUFHTixnQkFBZ0JNLEdBQUcsQ0FBQ0osSUFBSSxDQUFDRjtRQUNwQyxJQUFJLENBQUNPLElBQUksR0FBR1AsZ0JBQWdCTyxJQUFJLENBQUNMLElBQUksQ0FBQ0Y7UUFDdEMsSUFBSSxDQUFDUSxNQUFNLEdBQUdSLGdCQUFnQlEsTUFBTSxDQUFDTixJQUFJLENBQUNGO1FBQzFDLElBQUksQ0FBQ1MsUUFBUSxHQUFHVCxnQkFBZ0JTLFFBQVEsQ0FBQ1AsSUFBSSxDQUFDRjtRQUM5QyxJQUFJLENBQUNVLElBQUksR0FBR1YsZ0JBQWdCVSxJQUFJO0lBQ3BDO0FBQ0o7QUFDQTs7O0NBR0MsR0FBVSxTQUFTQztJQUNoQnpCLHdHQUFnQ0EsQ0FBQztJQUNqQyxNQUFNMEIsZUFBZWxDLGlEQUFVQSxDQUFDSyxnR0FBbUJBO0lBQ25ELDhEQUE4RDtJQUM5RCwwRUFBMEU7SUFDMUUsa0JBQWtCO0lBQ2xCLE1BQU04Qix1QkFBdUJsQyw4Q0FBT0EsQ0FBQztRQUNqQyxJQUFJLENBQUNpQyxjQUFjO1lBQ2YseUVBQXlFO1lBQ3pFLGFBQWE7WUFDYixPQUFPO1FBQ1g7UUFDQSxPQUFPLElBQUluQix3QkFBd0JtQjtJQUN2QyxHQUFHO1FBQ0NBO0tBQ0g7SUFDRCxJQUFJLElBQTZCLEVBQUU7UUFDL0IsaUVBQWlFO1FBQ2pFLE1BQU0sRUFBRUUsd0JBQXdCLEVBQUUsR0FBR0MsbUJBQU9BLENBQUMsaUlBQStCO1FBQzVFLG1FQUFtRTtRQUNuRUQseUJBQXlCO0lBQzdCO0lBQ0EsT0FBT0Q7QUFDWDtBQUNBOztDQUVDLEdBQVUsU0FBU0c7SUFDaEI5Qix3R0FBZ0NBLENBQUM7SUFDakMsOEVBQThFO0lBQzlFLDBFQUEwRTtJQUMxRSxPQUFPUixpREFBVUEsQ0FBQ00sNEZBQWVBO0FBQ3JDO0FBQ3dIO0FBQ3hIOztDQUVDLEdBQVUsU0FBU21DO0lBQ2hCakMsd0dBQWdDQSxDQUFDO0lBQ2pDLE1BQU1rQyxTQUFTMUMsaURBQVVBLENBQUNFLDJGQUFnQkE7SUFDMUMsSUFBSXdDLFdBQVcsTUFBTTtRQUNqQixNQUFNLElBQUk1QixNQUFNO0lBQ3BCO0lBQ0EsT0FBTzRCO0FBQ1g7QUFDQSwrRUFBK0U7QUFDL0UsU0FBUztBQUNULFNBQVNDLGtCQUFrQkMsSUFBSSxFQUFFQyxNQUFNO0lBQ25DLElBQUlBLFdBQVcsS0FBSyxHQUFHQSxTQUFTLENBQUM7SUFDakMsTUFBTUMsaUJBQWlCRixJQUFJLENBQUMsRUFBRTtJQUM5QixLQUFLLE1BQU1HLGlCQUFpQkMsT0FBT2xCLE1BQU0sQ0FBQ2dCLGdCQUFnQjtRQUN0RCxNQUFNRyxVQUFVRixhQUFhLENBQUMsRUFBRTtRQUNoQyxNQUFNRyxxQkFBcUJDLE1BQU1DLE9BQU8sQ0FBQ0g7UUFDekMsTUFBTUksZUFBZUgscUJBQXFCRCxPQUFPLENBQUMsRUFBRSxHQUFHQTtRQUN2RCxJQUFJLENBQUNJLGdCQUFnQkEsYUFBYUMsVUFBVSxDQUFDNUMsaUVBQWdCQSxHQUFHO1FBQ2hFLGlFQUFpRTtRQUNqRSxNQUFNNkMsYUFBYUwsc0JBQXVCRCxDQUFBQSxPQUFPLENBQUMsRUFBRSxLQUFLLE9BQU9BLE9BQU8sQ0FBQyxFQUFFLEtBQUssSUFBRztRQUNsRixJQUFJTSxZQUFZO1lBQ1pWLE1BQU0sQ0FBQ0ksT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHQSxPQUFPLENBQUMsRUFBRSxDQUFDTyxLQUFLLENBQUM7UUFDMUMsT0FBTyxJQUFJTixvQkFBb0I7WUFDM0JMLE1BQU0sQ0FBQ0ksT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHQSxPQUFPLENBQUMsRUFBRTtRQUNuQztRQUNBSixTQUFTRixrQkFBa0JJLGVBQWVGO0lBQzlDO0lBQ0EsT0FBT0E7QUFDWDtBQUNBOzs7Q0FHQyxHQUFVLFNBQVNZO0lBQ2hCakQsd0dBQWdDQSxDQUFDO0lBQ2pDLE1BQU1rRCxxQkFBcUIxRCxpREFBVUEsQ0FBQ0csb0dBQXlCQTtJQUMvRCxNQUFNd0QsYUFBYTNELGlEQUFVQSxDQUFDTyw4RkFBaUJBO0lBQy9DLE9BQU9OLDhDQUFPQSxDQUFDO1FBQ1gsNkJBQTZCO1FBQzdCLElBQUl5RCxzQkFBc0IsT0FBTyxLQUFLLElBQUlBLG1CQUFtQmQsSUFBSSxFQUFFO1lBQy9ELE9BQU9ELGtCQUFrQmUsbUJBQW1CZCxJQUFJO1FBQ3BEO1FBQ0EsMkNBQTJDO1FBQzNDLE9BQU9lO0lBQ1gsR0FBRztRQUNDRCxzQkFBc0IsT0FBTyxLQUFLLElBQUlBLG1CQUFtQmQsSUFBSTtRQUM3RGU7S0FDSDtBQUNMO0FBQ0EsbUNBQW1DO0FBQ25DOztDQUVDLEdBQUcsU0FBU0MsNkJBQTZCaEIsSUFBSSxFQUFFaUIsZ0JBQWdCLEVBQUVDLEtBQUssRUFBRUMsV0FBVztJQUNoRixJQUFJRCxVQUFVLEtBQUssR0FBR0EsUUFBUTtJQUM5QixJQUFJQyxnQkFBZ0IsS0FBSyxHQUFHQSxjQUFjLEVBQUU7SUFDNUMsSUFBSUM7SUFDSixJQUFJRixPQUFPO1FBQ1Asa0VBQWtFO1FBQ2xFRSxPQUFPcEIsSUFBSSxDQUFDLEVBQUUsQ0FBQ2lCLGlCQUFpQjtJQUNwQyxPQUFPO1FBQ0gsb0dBQW9HO1FBQ3BHLE1BQU1mLGlCQUFpQkYsSUFBSSxDQUFDLEVBQUU7UUFDOUIsSUFBSXFCO1FBQ0pELE9BQU8sQ0FBQ0MsMkJBQTJCbkIsZUFBZW9CLFFBQVEsS0FBSyxPQUFPRCwyQkFBMkJqQixPQUFPbEIsTUFBTSxDQUFDZ0IsZUFBZSxDQUFDLEVBQUU7SUFDckk7SUFDQSxJQUFJLENBQUNrQixNQUFNLE9BQU9EO0lBQ2xCLE1BQU1kLFVBQVVlLElBQUksQ0FBQyxFQUFFO0lBQ3ZCLE1BQU1YLGVBQWU1QywyRkFBZUEsQ0FBQ3dDO0lBQ3JDLElBQUksQ0FBQ0ksZ0JBQWdCQSxhQUFhQyxVQUFVLENBQUM1QyxpRUFBZ0JBLEdBQUc7UUFDNUQsT0FBT3FEO0lBQ1g7SUFDQUEsWUFBWUksSUFBSSxDQUFDZDtJQUNqQixPQUFPTyw2QkFBNkJJLE1BQU1ILGtCQUFrQixPQUFPRTtBQUN2RTtBQUNBLGlFQUFpRTtBQUNqRTs7Q0FFQyxHQUFVLFNBQVNLLDBCQUEwQlAsZ0JBQWdCO0lBQzFELElBQUlBLHFCQUFxQixLQUFLLEdBQUdBLG1CQUFtQjtJQUNwRHJELHdHQUFnQ0EsQ0FBQztJQUNqQyxNQUFNLEVBQUVvQyxJQUFJLEVBQUUsR0FBRzVDLGlEQUFVQSxDQUFDSSw4RkFBbUJBO0lBQy9DLE9BQU93RCw2QkFBNkJoQixNQUFNaUI7QUFDOUM7QUFDQSxpRUFBaUU7QUFDakU7O0NBRUMsR0FBVSxTQUFTUSx5QkFBeUJSLGdCQUFnQjtJQUN6RCxJQUFJQSxxQkFBcUIsS0FBSyxHQUFHQSxtQkFBbUI7SUFDcERyRCx3R0FBZ0NBLENBQUM7SUFDakMsTUFBTThELHlCQUF5QkYsMEJBQTBCUDtJQUN6RCxJQUFJUyx1QkFBdUJDLE1BQU0sS0FBSyxHQUFHO1FBQ3JDLE9BQU87SUFDWDtJQUNBLE9BQU9ELHNCQUFzQixDQUFDLEVBQUU7QUFDcEM7QUFDdUU7QUFDaEMsQ0FFdkMsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb24uanM/NDc4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb250ZXh0LCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBBcHBSb3V0ZXJDb250ZXh0LCBHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0LCBMYXlvdXRSb3V0ZXJDb250ZXh0IH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvYXBwLXJvdXRlci1jb250ZXh0LnNoYXJlZC1ydW50aW1lXCI7XG5pbXBvcnQgeyBTZWFyY2hQYXJhbXNDb250ZXh0LCBQYXRobmFtZUNvbnRleHQsIFBhdGhQYXJhbXNDb250ZXh0IH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvaG9va3MtY2xpZW50LWNvbnRleHQuc2hhcmVkLXJ1bnRpbWVcIjtcbmltcG9ydCB7IGNsaWVudEhvb2tJblNlcnZlckNvbXBvbmVudEVycm9yIH0gZnJvbSBcIi4vY2xpZW50LWhvb2staW4tc2VydmVyLWNvbXBvbmVudC1lcnJvclwiO1xuaW1wb3J0IHsgZ2V0U2VnbWVudFZhbHVlIH0gZnJvbSBcIi4vcm91dGVyLXJlZHVjZXIvcmVkdWNlcnMvZ2V0LXNlZ21lbnQtdmFsdWVcIjtcbmltcG9ydCB7IFBBR0VfU0VHTUVOVF9LRVkgfSBmcm9tIFwiLi4vLi4vc2hhcmVkL2xpYi9zZWdtZW50XCI7XG5jb25zdCBJTlRFUk5BTF9VUkxTRUFSQ0hQQVJBTVNfSU5TVEFOQ0UgPSBTeW1ib2woXCJpbnRlcm5hbCBmb3IgdXJsc2VhcmNocGFyYW1zIHJlYWRvbmx5XCIpO1xuZnVuY3Rpb24gcmVhZG9ubHlVUkxTZWFyY2hQYXJhbXNFcnJvcigpIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKFwiUmVhZG9ubHlVUkxTZWFyY2hQYXJhbXMgY2Fubm90IGJlIG1vZGlmaWVkXCIpO1xufVxuZXhwb3J0IGNsYXNzIFJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zIHtcbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxfVVJMU0VBUkNIUEFSQU1TX0lOU1RBTkNFXVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgfVxuICAgIGFwcGVuZCgpIHtcbiAgICAgICAgdGhyb3cgcmVhZG9ubHlVUkxTZWFyY2hQYXJhbXNFcnJvcigpO1xuICAgIH1cbiAgICBkZWxldGUoKSB7XG4gICAgICAgIHRocm93IHJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zRXJyb3IoKTtcbiAgICB9XG4gICAgc2V0KCkge1xuICAgICAgICB0aHJvdyByZWFkb25seVVSTFNlYXJjaFBhcmFtc0Vycm9yKCk7XG4gICAgfVxuICAgIHNvcnQoKSB7XG4gICAgICAgIHRocm93IHJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zRXJyb3IoKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IodXJsU2VhcmNoUGFyYW1zKXtcbiAgICAgICAgdGhpc1tJTlRFUk5BTF9VUkxTRUFSQ0hQQVJBTVNfSU5TVEFOQ0VdID0gdXJsU2VhcmNoUGFyYW1zO1xuICAgICAgICB0aGlzLmVudHJpZXMgPSB1cmxTZWFyY2hQYXJhbXMuZW50cmllcy5iaW5kKHVybFNlYXJjaFBhcmFtcyk7XG4gICAgICAgIHRoaXMuZm9yRWFjaCA9IHVybFNlYXJjaFBhcmFtcy5mb3JFYWNoLmJpbmQodXJsU2VhcmNoUGFyYW1zKTtcbiAgICAgICAgdGhpcy5nZXQgPSB1cmxTZWFyY2hQYXJhbXMuZ2V0LmJpbmQodXJsU2VhcmNoUGFyYW1zKTtcbiAgICAgICAgdGhpcy5nZXRBbGwgPSB1cmxTZWFyY2hQYXJhbXMuZ2V0QWxsLmJpbmQodXJsU2VhcmNoUGFyYW1zKTtcbiAgICAgICAgdGhpcy5oYXMgPSB1cmxTZWFyY2hQYXJhbXMuaGFzLmJpbmQodXJsU2VhcmNoUGFyYW1zKTtcbiAgICAgICAgdGhpcy5rZXlzID0gdXJsU2VhcmNoUGFyYW1zLmtleXMuYmluZCh1cmxTZWFyY2hQYXJhbXMpO1xuICAgICAgICB0aGlzLnZhbHVlcyA9IHVybFNlYXJjaFBhcmFtcy52YWx1ZXMuYmluZCh1cmxTZWFyY2hQYXJhbXMpO1xuICAgICAgICB0aGlzLnRvU3RyaW5nID0gdXJsU2VhcmNoUGFyYW1zLnRvU3RyaW5nLmJpbmQodXJsU2VhcmNoUGFyYW1zKTtcbiAgICAgICAgdGhpcy5zaXplID0gdXJsU2VhcmNoUGFyYW1zLnNpemU7XG4gICAgfVxufVxuLyoqXG4gKiBHZXQgYSByZWFkLW9ubHkgVVJMU2VhcmNoUGFyYW1zIG9iamVjdC4gRm9yIGV4YW1wbGUgc2VhcmNoUGFyYW1zLmdldCgnZm9vJykgd291bGQgcmV0dXJuICdiYXInIHdoZW4gP2Zvbz1iYXJcbiAqIExlYXJuIG1vcmUgYWJvdXQgVVJMU2VhcmNoUGFyYW1zIGhlcmU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0FQSS9VUkxTZWFyY2hQYXJhbXNcbiAqLyBleHBvcnQgZnVuY3Rpb24gdXNlU2VhcmNoUGFyYW1zKCkge1xuICAgIGNsaWVudEhvb2tJblNlcnZlckNvbXBvbmVudEVycm9yKFwidXNlU2VhcmNoUGFyYW1zXCIpO1xuICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IHVzZUNvbnRleHQoU2VhcmNoUGFyYW1zQ29udGV4dCk7XG4gICAgLy8gSW4gdGhlIGNhc2Ugd2hlcmUgdGhpcyBpcyBgbnVsbGAsIHRoZSBjb21wYXQgdHlwZXMgYWRkZWQgaW5cbiAgICAvLyBgbmV4dC1lbnYuZC50c2Agd2lsbCBhZGQgYSBuZXcgb3ZlcmxvYWQgdGhhdCBjaGFuZ2VzIHRoZSByZXR1cm4gdHlwZSB0b1xuICAgIC8vIGluY2x1ZGUgYG51bGxgLlxuICAgIGNvbnN0IHJlYWRvbmx5U2VhcmNoUGFyYW1zID0gdXNlTWVtbygoKT0+e1xuICAgICAgICBpZiAoIXNlYXJjaFBhcmFtcykge1xuICAgICAgICAgICAgLy8gV2hlbiB0aGUgcm91dGVyIGlzIG5vdCByZWFkeSBpbiBwYWdlcywgd2Ugd29uJ3QgaGF2ZSB0aGUgc2VhcmNoIHBhcmFtc1xuICAgICAgICAgICAgLy8gYXZhaWxhYmxlLlxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZWFkb25seVVSTFNlYXJjaFBhcmFtcyhzZWFyY2hQYXJhbXMpO1xuICAgIH0sIFtcbiAgICAgICAgc2VhcmNoUGFyYW1zXG4gICAgXSk7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgLy8gQXN5bmNMb2NhbFN0b3JhZ2Ugc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiB0aGUgY2xpZW50IGJ1bmRsZS5cbiAgICAgICAgY29uc3QgeyBiYWlsb3V0VG9DbGllbnRSZW5kZXJpbmcgfSA9IHJlcXVpcmUoXCIuL2JhaWxvdXQtdG8tY2xpZW50LXJlbmRlcmluZ1wiKTtcbiAgICAgICAgLy8gVE9ETy1BUFA6IGhhbmRsZSBkeW5hbWljID0gJ2ZvcmNlLXN0YXRpYycgaGVyZSBhbmQgb24gdGhlIGNsaWVudFxuICAgICAgICBiYWlsb3V0VG9DbGllbnRSZW5kZXJpbmcoXCJ1c2VTZWFyY2hQYXJhbXMoKVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlYWRvbmx5U2VhcmNoUGFyYW1zO1xufVxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgcGF0aG5hbWUuIEZvciBleGFtcGxlIHVzZVBhdGhuYW1lKCkgb24gL2Rhc2hib2FyZD9mb289YmFyIHdvdWxkIHJldHVybiBcIi9kYXNoYm9hcmRcIlxuICovIGV4cG9ydCBmdW5jdGlvbiB1c2VQYXRobmFtZSgpIHtcbiAgICBjbGllbnRIb29rSW5TZXJ2ZXJDb21wb25lbnRFcnJvcihcInVzZVBhdGhuYW1lXCIpO1xuICAgIC8vIEluIHRoZSBjYXNlIHdoZXJlIHRoaXMgaXMgYG51bGxgLCB0aGUgY29tcGF0IHR5cGVzIGFkZGVkIGluIGBuZXh0LWVudi5kLnRzYFxuICAgIC8vIHdpbGwgYWRkIGEgbmV3IG92ZXJsb2FkIHRoYXQgY2hhbmdlcyB0aGUgcmV0dXJuIHR5cGUgdG8gaW5jbHVkZSBgbnVsbGAuXG4gICAgcmV0dXJuIHVzZUNvbnRleHQoUGF0aG5hbWVDb250ZXh0KTtcbn1cbmV4cG9ydCB7IFNlcnZlckluc2VydGVkSFRNTENvbnRleHQsIHVzZVNlcnZlckluc2VydGVkSFRNTCB9IGZyb20gXCIuLi8uLi9zaGFyZWQvbGliL3NlcnZlci1pbnNlcnRlZC1odG1sLnNoYXJlZC1ydW50aW1lXCI7XG4vKipcbiAqIEdldCB0aGUgcm91dGVyIG1ldGhvZHMuIEZvciBleGFtcGxlIHJvdXRlci5wdXNoKCcvZGFzaGJvYXJkJylcbiAqLyBleHBvcnQgZnVuY3Rpb24gdXNlUm91dGVyKCkge1xuICAgIGNsaWVudEhvb2tJblNlcnZlckNvbXBvbmVudEVycm9yKFwidXNlUm91dGVyXCIpO1xuICAgIGNvbnN0IHJvdXRlciA9IHVzZUNvbnRleHQoQXBwUm91dGVyQ29udGV4dCk7XG4gICAgaWYgKHJvdXRlciA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhcmlhbnQgZXhwZWN0ZWQgYXBwIHJvdXRlciB0byBiZSBtb3VudGVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gcm91dGVyO1xufVxuLy8gdGhpcyBmdW5jdGlvbiBwZXJmb3JtcyBhIGRlcHRoLWZpcnN0IHNlYXJjaCBvZiB0aGUgdHJlZSB0byBmaW5kIHRoZSBzZWxlY3RlZFxuLy8gcGFyYW1zXG5mdW5jdGlvbiBnZXRTZWxlY3RlZFBhcmFtcyh0cmVlLCBwYXJhbXMpIHtcbiAgICBpZiAocGFyYW1zID09PSB2b2lkIDApIHBhcmFtcyA9IHt9O1xuICAgIGNvbnN0IHBhcmFsbGVsUm91dGVzID0gdHJlZVsxXTtcbiAgICBmb3IgKGNvbnN0IHBhcmFsbGVsUm91dGUgb2YgT2JqZWN0LnZhbHVlcyhwYXJhbGxlbFJvdXRlcykpe1xuICAgICAgICBjb25zdCBzZWdtZW50ID0gcGFyYWxsZWxSb3V0ZVswXTtcbiAgICAgICAgY29uc3QgaXNEeW5hbWljUGFyYW1ldGVyID0gQXJyYXkuaXNBcnJheShzZWdtZW50KTtcbiAgICAgICAgY29uc3Qgc2VnbWVudFZhbHVlID0gaXNEeW5hbWljUGFyYW1ldGVyID8gc2VnbWVudFsxXSA6IHNlZ21lbnQ7XG4gICAgICAgIGlmICghc2VnbWVudFZhbHVlIHx8IHNlZ21lbnRWYWx1ZS5zdGFydHNXaXRoKFBBR0VfU0VHTUVOVF9LRVkpKSBjb250aW51ZTtcbiAgICAgICAgLy8gRW5zdXJlIGNhdGNoQWxsIGFuZCBvcHRpb25hbCBjYXRjaGFsbCBhcmUgdHVybmVkIGludG8gYW4gYXJyYXlcbiAgICAgICAgY29uc3QgaXNDYXRjaEFsbCA9IGlzRHluYW1pY1BhcmFtZXRlciAmJiAoc2VnbWVudFsyXSA9PT0gXCJjXCIgfHwgc2VnbWVudFsyXSA9PT0gXCJvY1wiKTtcbiAgICAgICAgaWYgKGlzQ2F0Y2hBbGwpIHtcbiAgICAgICAgICAgIHBhcmFtc1tzZWdtZW50WzBdXSA9IHNlZ21lbnRbMV0uc3BsaXQoXCIvXCIpO1xuICAgICAgICB9IGVsc2UgaWYgKGlzRHluYW1pY1BhcmFtZXRlcikge1xuICAgICAgICAgICAgcGFyYW1zW3NlZ21lbnRbMF1dID0gc2VnbWVudFsxXTtcbiAgICAgICAgfVxuICAgICAgICBwYXJhbXMgPSBnZXRTZWxlY3RlZFBhcmFtcyhwYXJhbGxlbFJvdXRlLCBwYXJhbXMpO1xuICAgIH1cbiAgICByZXR1cm4gcGFyYW1zO1xufVxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgcGFyYW1ldGVycy4gRm9yIGV4YW1wbGUgdXNlUGFyYW1zKCkgb24gL2Rhc2hib2FyZC9bdGVhbV1cbiAqIHdoZXJlIHBhdGhuYW1lIGlzIC9kYXNoYm9hcmQvbmV4dGpzIHdvdWxkIHJldHVybiB7IHRlYW06ICduZXh0anMnIH1cbiAqLyBleHBvcnQgZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICAgIGNsaWVudEhvb2tJblNlcnZlckNvbXBvbmVudEVycm9yKFwidXNlUGFyYW1zXCIpO1xuICAgIGNvbnN0IGdsb2JhbExheW91dFJvdXRlciA9IHVzZUNvbnRleHQoR2xvYmFsTGF5b3V0Um91dGVyQ29udGV4dCk7XG4gICAgY29uc3QgcGF0aFBhcmFtcyA9IHVzZUNvbnRleHQoUGF0aFBhcmFtc0NvbnRleHQpO1xuICAgIHJldHVybiB1c2VNZW1vKCgpPT57XG4gICAgICAgIC8vIFdoZW4gaXQncyB1bmRlciBhcHAgcm91dGVyXG4gICAgICAgIGlmIChnbG9iYWxMYXlvdXRSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IGdsb2JhbExheW91dFJvdXRlci50cmVlKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0U2VsZWN0ZWRQYXJhbXMoZ2xvYmFsTGF5b3V0Um91dGVyLnRyZWUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFdoZW4gaXQncyB1bmRlciBjbGllbnQgc2lkZSBwYWdlcyByb3V0ZXJcbiAgICAgICAgcmV0dXJuIHBhdGhQYXJhbXM7XG4gICAgfSwgW1xuICAgICAgICBnbG9iYWxMYXlvdXRSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IGdsb2JhbExheW91dFJvdXRlci50cmVlLFxuICAgICAgICBwYXRoUGFyYW1zXG4gICAgXSk7XG59XG4vLyBUT0RPLUFQUDogaGFuZGxlIHBhcmFsbGVsIHJvdXRlc1xuLyoqXG4gKiBHZXQgdGhlIGNhbm9uaWNhbCBwYXJhbWV0ZXJzIGZyb20gdGhlIGN1cnJlbnQgbGV2ZWwgdG8gdGhlIGxlYWYgbm9kZS5cbiAqLyBmdW5jdGlvbiBnZXRTZWxlY3RlZExheW91dFNlZ21lbnRQYXRoKHRyZWUsIHBhcmFsbGVsUm91dGVLZXksIGZpcnN0LCBzZWdtZW50UGF0aCkge1xuICAgIGlmIChmaXJzdCA9PT0gdm9pZCAwKSBmaXJzdCA9IHRydWU7XG4gICAgaWYgKHNlZ21lbnRQYXRoID09PSB2b2lkIDApIHNlZ21lbnRQYXRoID0gW107XG4gICAgbGV0IG5vZGU7XG4gICAgaWYgKGZpcnN0KSB7XG4gICAgICAgIC8vIFVzZSB0aGUgcHJvdmlkZWQgcGFyYWxsZWwgcm91dGUga2V5IG9uIHRoZSBmaXJzdCBwYXJhbGxlbCByb3V0ZVxuICAgICAgICBub2RlID0gdHJlZVsxXVtwYXJhbGxlbFJvdXRlS2V5XTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBBZnRlciBmaXJzdCBwYXJhbGxlbCByb3V0ZSBwcmVmZXIgY2hpbGRyZW4sIGlmIHRoZXJlJ3Mgbm8gY2hpbGRyZW4gcGljayB0aGUgZmlyc3QgcGFyYWxsZWwgcm91dGUuXG4gICAgICAgIGNvbnN0IHBhcmFsbGVsUm91dGVzID0gdHJlZVsxXTtcbiAgICAgICAgdmFyIF9wYXJhbGxlbFJvdXRlc19jaGlsZHJlbjtcbiAgICAgICAgbm9kZSA9IChfcGFyYWxsZWxSb3V0ZXNfY2hpbGRyZW4gPSBwYXJhbGxlbFJvdXRlcy5jaGlsZHJlbikgIT0gbnVsbCA/IF9wYXJhbGxlbFJvdXRlc19jaGlsZHJlbiA6IE9iamVjdC52YWx1ZXMocGFyYWxsZWxSb3V0ZXMpWzBdO1xuICAgIH1cbiAgICBpZiAoIW5vZGUpIHJldHVybiBzZWdtZW50UGF0aDtcbiAgICBjb25zdCBzZWdtZW50ID0gbm9kZVswXTtcbiAgICBjb25zdCBzZWdtZW50VmFsdWUgPSBnZXRTZWdtZW50VmFsdWUoc2VnbWVudCk7XG4gICAgaWYgKCFzZWdtZW50VmFsdWUgfHwgc2VnbWVudFZhbHVlLnN0YXJ0c1dpdGgoUEFHRV9TRUdNRU5UX0tFWSkpIHtcbiAgICAgICAgcmV0dXJuIHNlZ21lbnRQYXRoO1xuICAgIH1cbiAgICBzZWdtZW50UGF0aC5wdXNoKHNlZ21lbnRWYWx1ZSk7XG4gICAgcmV0dXJuIGdldFNlbGVjdGVkTGF5b3V0U2VnbWVudFBhdGgobm9kZSwgcGFyYWxsZWxSb3V0ZUtleSwgZmFsc2UsIHNlZ21lbnRQYXRoKTtcbn1cbi8vIFRPRE8tQVBQOiBFeHBhbmQgZGVzY3JpcHRpb24gd2hlbiB0aGUgZG9jcyBhcmUgd3JpdHRlbiBmb3IgaXQuXG4vKipcbiAqIEdldCB0aGUgY2Fub25pY2FsIHNlZ21lbnQgcGF0aCBmcm9tIHRoZSBjdXJyZW50IGxldmVsIHRvIHRoZSBsZWFmIG5vZGUuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHVzZVNlbGVjdGVkTGF5b3V0U2VnbWVudHMocGFyYWxsZWxSb3V0ZUtleSkge1xuICAgIGlmIChwYXJhbGxlbFJvdXRlS2V5ID09PSB2b2lkIDApIHBhcmFsbGVsUm91dGVLZXkgPSBcImNoaWxkcmVuXCI7XG4gICAgY2xpZW50SG9va0luU2VydmVyQ29tcG9uZW50RXJyb3IoXCJ1c2VTZWxlY3RlZExheW91dFNlZ21lbnRzXCIpO1xuICAgIGNvbnN0IHsgdHJlZSB9ID0gdXNlQ29udGV4dChMYXlvdXRSb3V0ZXJDb250ZXh0KTtcbiAgICByZXR1cm4gZ2V0U2VsZWN0ZWRMYXlvdXRTZWdtZW50UGF0aCh0cmVlLCBwYXJhbGxlbFJvdXRlS2V5KTtcbn1cbi8vIFRPRE8tQVBQOiBFeHBhbmQgZGVzY3JpcHRpb24gd2hlbiB0aGUgZG9jcyBhcmUgd3JpdHRlbiBmb3IgaXQuXG4vKipcbiAqIEdldCB0aGUgc2VnbWVudCBiZWxvdyB0aGUgY3VycmVudCBsZXZlbFxuICovIGV4cG9ydCBmdW5jdGlvbiB1c2VTZWxlY3RlZExheW91dFNlZ21lbnQocGFyYWxsZWxSb3V0ZUtleSkge1xuICAgIGlmIChwYXJhbGxlbFJvdXRlS2V5ID09PSB2b2lkIDApIHBhcmFsbGVsUm91dGVLZXkgPSBcImNoaWxkcmVuXCI7XG4gICAgY2xpZW50SG9va0luU2VydmVyQ29tcG9uZW50RXJyb3IoXCJ1c2VTZWxlY3RlZExheW91dFNlZ21lbnRcIik7XG4gICAgY29uc3Qgc2VsZWN0ZWRMYXlvdXRTZWdtZW50cyA9IHVzZVNlbGVjdGVkTGF5b3V0U2VnbWVudHMocGFyYWxsZWxSb3V0ZUtleSk7XG4gICAgaWYgKHNlbGVjdGVkTGF5b3V0U2VnbWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gc2VsZWN0ZWRMYXlvdXRTZWdtZW50c1swXTtcbn1cbmV4cG9ydCB7IHJlZGlyZWN0LCBwZXJtYW5lbnRSZWRpcmVjdCwgUmVkaXJlY3RUeXBlIH0gZnJvbSBcIi4vcmVkaXJlY3RcIjtcbmV4cG9ydCB7IG5vdEZvdW5kIH0gZnJvbSBcIi4vbm90LWZvdW5kXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5hdmlnYXRpb24uanMubWFwIl0sIm5hbWVzIjpbInVzZUNvbnRleHQiLCJ1c2VNZW1vIiwiQXBwUm91dGVyQ29udGV4dCIsIkdsb2JhbExheW91dFJvdXRlckNvbnRleHQiLCJMYXlvdXRSb3V0ZXJDb250ZXh0IiwiU2VhcmNoUGFyYW1zQ29udGV4dCIsIlBhdGhuYW1lQ29udGV4dCIsIlBhdGhQYXJhbXNDb250ZXh0IiwiY2xpZW50SG9va0luU2VydmVyQ29tcG9uZW50RXJyb3IiLCJnZXRTZWdtZW50VmFsdWUiLCJQQUdFX1NFR01FTlRfS0VZIiwiSU5URVJOQUxfVVJMU0VBUkNIUEFSQU1TX0lOU1RBTkNFIiwiU3ltYm9sIiwicmVhZG9ubHlVUkxTZWFyY2hQYXJhbXNFcnJvciIsIkVycm9yIiwiUmVhZG9ubHlVUkxTZWFyY2hQYXJhbXMiLCJpdGVyYXRvciIsImFwcGVuZCIsImRlbGV0ZSIsInNldCIsInNvcnQiLCJjb25zdHJ1Y3RvciIsInVybFNlYXJjaFBhcmFtcyIsImVudHJpZXMiLCJiaW5kIiwiZm9yRWFjaCIsImdldCIsImdldEFsbCIsImhhcyIsImtleXMiLCJ2YWx1ZXMiLCJ0b1N0cmluZyIsInNpemUiLCJ1c2VTZWFyY2hQYXJhbXMiLCJzZWFyY2hQYXJhbXMiLCJyZWFkb25seVNlYXJjaFBhcmFtcyIsImJhaWxvdXRUb0NsaWVudFJlbmRlcmluZyIsInJlcXVpcmUiLCJ1c2VQYXRobmFtZSIsIlNlcnZlckluc2VydGVkSFRNTENvbnRleHQiLCJ1c2VTZXJ2ZXJJbnNlcnRlZEhUTUwiLCJ1c2VSb3V0ZXIiLCJyb3V0ZXIiLCJnZXRTZWxlY3RlZFBhcmFtcyIsInRyZWUiLCJwYXJhbXMiLCJwYXJhbGxlbFJvdXRlcyIsInBhcmFsbGVsUm91dGUiLCJPYmplY3QiLCJzZWdtZW50IiwiaXNEeW5hbWljUGFyYW1ldGVyIiwiQXJyYXkiLCJpc0FycmF5Iiwic2VnbWVudFZhbHVlIiwic3RhcnRzV2l0aCIsImlzQ2F0Y2hBbGwiLCJzcGxpdCIsInVzZVBhcmFtcyIsImdsb2JhbExheW91dFJvdXRlciIsInBhdGhQYXJhbXMiLCJnZXRTZWxlY3RlZExheW91dFNlZ21lbnRQYXRoIiwicGFyYWxsZWxSb3V0ZUtleSIsImZpcnN0Iiwic2VnbWVudFBhdGgiLCJub2RlIiwiX3BhcmFsbGVsUm91dGVzX2NoaWxkcmVuIiwiY2hpbGRyZW4iLCJwdXNoIiwidXNlU2VsZWN0ZWRMYXlvdXRTZWdtZW50cyIsInVzZVNlbGVjdGVkTGF5b3V0U2VnbWVudCIsInNlbGVjdGVkTGF5b3V0U2VnbWVudHMiLCJsZW5ndGgiLCJyZWRpcmVjdCIsInBlcm1hbmVudFJlZGlyZWN0IiwiUmVkaXJlY3RUeXBlIiwibm90Rm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/navigation.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/not-found.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/not-found.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNotFoundError: () => (/* binding */ isNotFoundError),\n/* harmony export */   notFound: () => (/* binding */ notFound)\n/* harmony export */ });\nconst NOT_FOUND_ERROR_CODE = \"NEXT_NOT_FOUND\";\n/**\n * When used in a React server component, this will set the status code to 404.\n * When used in a custom app route it will just send a 404 status.\n */ function notFound() {\n    // eslint-disable-next-line no-throw-literal\n    const error = new Error(NOT_FOUND_ERROR_CODE);\n    error.digest = NOT_FOUND_ERROR_CODE;\n    throw error;\n}\n/**\n * Checks an error to determine if it's an error generated by the `notFound()`\n * helper.\n *\n * @param error the error that may reference a not found error\n * @returns true if the error is a not found error\n */ function isNotFoundError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"digest\" in error)) {\n        return false;\n    }\n    return error.digest === NOT_FOUND_ERROR_CODE;\n} //# sourceMappingURL=not-found.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsdUJBQXVCO0FBQzdCOzs7Q0FHQyxHQUFVLFNBQVNDO0lBQ2hCLDRDQUE0QztJQUM1QyxNQUFNQyxRQUFRLElBQUlDLE1BQU1IO0lBQ3hCRSxNQUFNRSxNQUFNLEdBQUdKO0lBQ2YsTUFBTUU7QUFDVjtBQUNBOzs7Ozs7Q0FNQyxHQUFVLFNBQVNHLGdCQUFnQkgsS0FBSztJQUNyQyxJQUFJLE9BQU9BLFVBQVUsWUFBWUEsVUFBVSxRQUFRLENBQUUsYUFBWUEsS0FBSSxHQUFJO1FBQ3JFLE9BQU87SUFDWDtJQUNBLE9BQU9BLE1BQU1FLE1BQU0sS0FBS0o7QUFDNUIsRUFFQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzP2E4ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTk9UX0ZPVU5EX0VSUk9SX0NPREUgPSBcIk5FWFRfTk9UX0ZPVU5EXCI7XG4vKipcbiAqIFdoZW4gdXNlZCBpbiBhIFJlYWN0IHNlcnZlciBjb21wb25lbnQsIHRoaXMgd2lsbCBzZXQgdGhlIHN0YXR1cyBjb2RlIHRvIDQwNC5cbiAqIFdoZW4gdXNlZCBpbiBhIGN1c3RvbSBhcHAgcm91dGUgaXQgd2lsbCBqdXN0IHNlbmQgYSA0MDQgc3RhdHVzLlxuICovIGV4cG9ydCBmdW5jdGlvbiBub3RGb3VuZCgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKE5PVF9GT1VORF9FUlJPUl9DT0RFKTtcbiAgICBlcnJvci5kaWdlc3QgPSBOT1RfRk9VTkRfRVJST1JfQ09ERTtcbiAgICB0aHJvdyBlcnJvcjtcbn1cbi8qKlxuICogQ2hlY2tzIGFuIGVycm9yIHRvIGRldGVybWluZSBpZiBpdCdzIGFuIGVycm9yIGdlbmVyYXRlZCBieSB0aGUgYG5vdEZvdW5kKClgXG4gKiBoZWxwZXIuXG4gKlxuICogQHBhcmFtIGVycm9yIHRoZSBlcnJvciB0aGF0IG1heSByZWZlcmVuY2UgYSBub3QgZm91bmQgZXJyb3JcbiAqIEByZXR1cm5zIHRydWUgaWYgdGhlIGVycm9yIGlzIGEgbm90IGZvdW5kIGVycm9yXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGlzTm90Rm91bmRFcnJvcihlcnJvcikge1xuICAgIGlmICh0eXBlb2YgZXJyb3IgIT09IFwib2JqZWN0XCIgfHwgZXJyb3IgPT09IG51bGwgfHwgIShcImRpZ2VzdFwiIGluIGVycm9yKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBlcnJvci5kaWdlc3QgPT09IE5PVF9GT1VORF9FUlJPUl9DT0RFO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3QtZm91bmQuanMubWFwIl0sIm5hbWVzIjpbIk5PVF9GT1VORF9FUlJPUl9DT0RFIiwibm90Rm91bmQiLCJlcnJvciIsIkVycm9yIiwiZGlnZXN0IiwiaXNOb3RGb3VuZEVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/not-found.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/redirect-status-code.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectStatusCode: () => (/* binding */ RedirectStatusCode)\n/* harmony export */ });\nvar RedirectStatusCode;\n(function(RedirectStatusCode) {\n    RedirectStatusCode[RedirectStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n    RedirectStatusCode[RedirectStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    RedirectStatusCode[RedirectStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n})(RedirectStatusCode || (RedirectStatusCode = {})); //# sourceMappingURL=redirect-status-code.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVkaXJlY3Qtc3RhdHVzLWNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQUlBLG1CQUFtQjtBQUM3QixVQUFTQSxrQkFBa0I7SUFDeEJBLGtCQUFrQixDQUFDQSxrQkFBa0IsQ0FBQyxXQUFXLEdBQUcsSUFBSSxHQUFHO0lBQzNEQSxrQkFBa0IsQ0FBQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxHQUFHO0lBQ3BFQSxrQkFBa0IsQ0FBQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxHQUFHO0FBQ3hFLEdBQUdBLHNCQUF1QkEsQ0FBQUEscUJBQXFCLENBQUMsS0FFaEQsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LXN0YXR1cy1jb2RlLmpzP2M5MzAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBSZWRpcmVjdFN0YXR1c0NvZGU7XG4oZnVuY3Rpb24oUmVkaXJlY3RTdGF0dXNDb2RlKSB7XG4gICAgUmVkaXJlY3RTdGF0dXNDb2RlW1JlZGlyZWN0U3RhdHVzQ29kZVtcIlNlZU90aGVyXCJdID0gMzAzXSA9IFwiU2VlT3RoZXJcIjtcbiAgICBSZWRpcmVjdFN0YXR1c0NvZGVbUmVkaXJlY3RTdGF0dXNDb2RlW1wiVGVtcG9yYXJ5UmVkaXJlY3RcIl0gPSAzMDddID0gXCJUZW1wb3JhcnlSZWRpcmVjdFwiO1xuICAgIFJlZGlyZWN0U3RhdHVzQ29kZVtSZWRpcmVjdFN0YXR1c0NvZGVbXCJQZXJtYW5lbnRSZWRpcmVjdFwiXSA9IDMwOF0gPSBcIlBlcm1hbmVudFJlZGlyZWN0XCI7XG59KShSZWRpcmVjdFN0YXR1c0NvZGUgfHwgKFJlZGlyZWN0U3RhdHVzQ29kZSA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZGlyZWN0LXN0YXR1cy1jb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWRpcmVjdFN0YXR1c0NvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/redirect.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/redirect.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectType: () => (/* binding */ RedirectType),\n/* harmony export */   getRedirectError: () => (/* binding */ getRedirectError),\n/* harmony export */   getRedirectStatusCodeFromError: () => (/* binding */ getRedirectStatusCodeFromError),\n/* harmony export */   getRedirectTypeFromError: () => (/* binding */ getRedirectTypeFromError),\n/* harmony export */   getURLFromRedirectError: () => (/* binding */ getURLFromRedirectError),\n/* harmony export */   isRedirectError: () => (/* binding */ isRedirectError),\n/* harmony export */   permanentRedirect: () => (/* binding */ permanentRedirect),\n/* harmony export */   redirect: () => (/* binding */ redirect)\n/* harmony export */ });\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./action-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\");\n/* harmony import */ var _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./redirect-status-code */ \"(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js\");\n\n\n\nconst REDIRECT_ERROR_CODE = \"NEXT_REDIRECT\";\nvar RedirectType;\n(function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n})(RedirectType || (RedirectType = {}));\nfunction getRedirectError(url, type, statusCode) {\n    if (statusCode === void 0) statusCode = _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.TemporaryRedirect;\n    const error = new Error(REDIRECT_ERROR_CODE);\n    error.digest = REDIRECT_ERROR_CODE + \";\" + type + \";\" + url + \";\" + statusCode + \";\";\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage.getStore();\n    if (requestStore) {\n        error.mutableCookies = requestStore.mutableCookies;\n    }\n    return error;\n}\n/**\n * When used in a streaming context, this will insert a meta tag to\n * redirect the user to the target page. When used in a custom app route, it\n * will serve a 307/303 to the caller.\n *\n * @param url the url to redirect to\n */ function redirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    const actionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.actionAsyncStorage.getStore();\n    throw getRedirectError(url, type, // as we don't want the POST request to follow the redirect,\n    // as it could result in erroneous re-submissions.\n    (actionStore == null ? void 0 : actionStore.isAction) ? _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.SeeOther : _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.TemporaryRedirect);\n}\n/**\n * When used in a streaming context, this will insert a meta tag to\n * redirect the user to the target page. When used in a custom app route, it\n * will serve a 308/303 to the caller.\n *\n * @param url the url to redirect to\n */ function permanentRedirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    const actionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.actionAsyncStorage.getStore();\n    throw getRedirectError(url, type, // as we don't want the POST request to follow the redirect,\n    // as it could result in erroneous re-submissions.\n    (actionStore == null ? void 0 : actionStore.isAction) ? _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.SeeOther : _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.PermanentRedirect);\n}\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */ function isRedirectError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"digest\" in error) || typeof error.digest !== \"string\") {\n        return false;\n    }\n    const [errorCode, type, destination, status] = error.digest.split(\";\", 4);\n    const statusCode = Number(status);\n    return errorCode === REDIRECT_ERROR_CODE && (type === \"replace\" || type === \"push\") && typeof destination === \"string\" && !isNaN(statusCode) && statusCode in _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode;\n}\nfunction getURLFromRedirectError(error) {\n    if (!isRedirectError(error)) return null;\n    // Slices off the beginning of the digest that contains the code and the\n    // separating ';'.\n    return error.digest.split(\";\", 3)[2];\n}\nfunction getRedirectTypeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return error.digest.split(\";\", 2)[1];\n}\nfunction getRedirectStatusCodeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return Number(error.digest.split(\";\", 4)[3]);\n} //# sourceMappingURL=redirect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/redirect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage.external.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst requestAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=request-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ3pELE1BQU1DLHNCQUFzQkQsNkVBQXVCQSxHQUFHLENBRTdELDBEQUEwRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanM/Yjc2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL2FzeW5jLWxvY2FsLXN0b3JhZ2VcIjtcbmV4cG9ydCBjb25zdCByZXF1ZXN0QXN5bmNTdG9yYWdlID0gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSIsInJlcXVlc3RBc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSegmentValue: () => (/* binding */ getSegmentValue)\n/* harmony export */ });\nfunction getSegmentValue(segment) {\n    return Array.isArray(segment) ? segment[1] : segment;\n} //# sourceMappingURL=get-segment-value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcm91dGVyLXJlZHVjZXIvcmVkdWNlcnMvZ2V0LXNlZ21lbnQtdmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGdCQUFnQkMsT0FBTztJQUNuQyxPQUFPQyxNQUFNQyxPQUFPLENBQUNGLFdBQVdBLE9BQU8sQ0FBQyxFQUFFLEdBQUdBO0FBQ2pELEVBRUEsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JvdXRlci1yZWR1Y2VyL3JlZHVjZXJzL2dldC1zZWdtZW50LXZhbHVlLmpzPzRhZDQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldFNlZ21lbnRWYWx1ZShzZWdtZW50KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoc2VnbWVudCkgPyBzZWdtZW50WzFdIDogc2VnbWVudDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LXNlZ21lbnQtdmFsdWUuanMubWFwIl0sIm5hbWVzIjpbImdldFNlZ21lbnRWYWx1ZSIsInNlZ21lbnQiLCJBcnJheSIsImlzQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst staticGenerationAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=static-generation-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUN6RCxNQUFNQywrQkFBK0JELDZFQUF1QkEsR0FBRyxDQUV0RSxvRUFBb0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcz8wMTE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4vYXN5bmMtbG9jYWwtc3RvcmFnZVwiO1xuZXhwb3J0IGNvbnN0IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UgPSBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSIsInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-bailout.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isStaticGenBailoutError: () => (/* binding */ isStaticGenBailoutError),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var _hooks_server_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks-server-context */ \"(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\nconst NEXT_STATIC_GEN_BAILOUT = \"NEXT_STATIC_GEN_BAILOUT\";\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args);\n        this.code = NEXT_STATIC_GEN_BAILOUT;\n    }\n}\nfunction isStaticGenBailoutError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"code\" in error)) {\n        return false;\n    }\n    return error.code === NEXT_STATIC_GEN_BAILOUT;\n}\nfunction formatErrorMessage(reason, opts) {\n    const { dynamic, link } = opts || {};\n    const suffix = link ? \" See more info here: \" + link : \"\";\n    return \"Page\" + (dynamic ? ' with `dynamic = \"' + dynamic + '\"`' : \"\") + \" couldn't be rendered statically because it used `\" + reason + \"`.\" + suffix;\n}\nconst staticGenerationBailout = (reason, param)=>{\n    let { dynamic, link } = param === void 0 ? {} : param;\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.staticGenerationAsyncStorage.getStore();\n    if (!staticGenerationStore) return false;\n    if (staticGenerationStore.forceStatic) {\n        return true;\n    }\n    if (staticGenerationStore.dynamicShouldError) {\n        throw new StaticGenBailoutError(formatErrorMessage(reason, {\n            link,\n            dynamic: dynamic != null ? dynamic : \"error\"\n        }));\n    }\n    const message = formatErrorMessage(reason, {\n        dynamic,\n        // this error should be caught by Next to bail out of static generation\n        // in case it's uncaught, this link provides some additional context as to why\n        link: \"https://nextjs.org/docs/messages/dynamic-server-error\"\n    });\n    // If postpone is available, we should postpone the render.\n    staticGenerationStore.postpone == null ? void 0 : staticGenerationStore.postpone.call(staticGenerationStore, reason);\n    // As this is a bailout, we don't want to revalidate, so set the revalidate\n    // to 0.\n    staticGenerationStore.revalidate = 0;\n    if (staticGenerationStore.isStaticGeneration) {\n        const err = new _hooks_server_context__WEBPACK_IMPORTED_MODULE_0__.DynamicServerError(message);\n        staticGenerationStore.dynamicUsageDescription = reason;\n        staticGenerationStore.dynamicUsageStack = err.stack;\n        throw err;\n    }\n    return false;\n}; //# sourceMappingURL=static-generation-bailout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTREO0FBQzhCO0FBQzFGLE1BQU1FLDBCQUEwQjtBQUNoQyxNQUFNQyw4QkFBOEJDO0lBQ2hDQyxZQUFZLEdBQUdDLElBQUksQ0FBQztRQUNoQixLQUFLLElBQUlBO1FBQ1QsSUFBSSxDQUFDQyxJQUFJLEdBQUdMO0lBQ2hCO0FBQ0o7QUFDTyxTQUFTTSx3QkFBd0JDLEtBQUs7SUFDekMsSUFBSSxPQUFPQSxVQUFVLFlBQVlBLFVBQVUsUUFBUSxDQUFFLFdBQVVBLEtBQUksR0FBSTtRQUNuRSxPQUFPO0lBQ1g7SUFDQSxPQUFPQSxNQUFNRixJQUFJLEtBQUtMO0FBQzFCO0FBQ0EsU0FBU1EsbUJBQW1CQyxNQUFNLEVBQUVDLElBQUk7SUFDcEMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLElBQUksRUFBRSxHQUFHRixRQUFRLENBQUM7SUFDbkMsTUFBTUcsU0FBU0QsT0FBTywwQkFBMEJBLE9BQU87SUFDdkQsT0FBTyxTQUFVRCxDQUFBQSxVQUFVLHVCQUF1QkEsVUFBVSxPQUFPLEVBQUMsSUFBSyx1REFBdURGLFNBQVMsT0FBT0k7QUFDcEo7QUFDTyxNQUFNQywwQkFBMEIsQ0FBQ0wsUUFBUU07SUFDNUMsSUFBSSxFQUFFSixPQUFPLEVBQUVDLElBQUksRUFBRSxHQUFHRyxVQUFVLEtBQUssSUFBSSxDQUFDLElBQUlBO0lBQ2hELE1BQU1DLHdCQUF3QmpCLG1HQUE0QkEsQ0FBQ2tCLFFBQVE7SUFDbkUsSUFBSSxDQUFDRCx1QkFBdUIsT0FBTztJQUNuQyxJQUFJQSxzQkFBc0JFLFdBQVcsRUFBRTtRQUNuQyxPQUFPO0lBQ1g7SUFDQSxJQUFJRixzQkFBc0JHLGtCQUFrQixFQUFFO1FBQzFDLE1BQU0sSUFBSWxCLHNCQUFzQk8sbUJBQW1CQyxRQUFRO1lBQ3ZERztZQUNBRCxTQUFTQSxXQUFXLE9BQU9BLFVBQVU7UUFDekM7SUFDSjtJQUNBLE1BQU1TLFVBQVVaLG1CQUFtQkMsUUFBUTtRQUN2Q0U7UUFDQSx1RUFBdUU7UUFDdkUsOEVBQThFO1FBQzlFQyxNQUFNO0lBQ1Y7SUFDQSwyREFBMkQ7SUFDM0RJLHNCQUFzQkssUUFBUSxJQUFJLE9BQU8sS0FBSyxJQUFJTCxzQkFBc0JLLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDTix1QkFBdUJQO0lBQzdHLDJFQUEyRTtJQUMzRSxRQUFRO0lBQ1JPLHNCQUFzQk8sVUFBVSxHQUFHO0lBQ25DLElBQUlQLHNCQUFzQlEsa0JBQWtCLEVBQUU7UUFDMUMsTUFBTUMsTUFBTSxJQUFJM0IscUVBQWtCQSxDQUFDc0I7UUFDbkNKLHNCQUFzQlUsdUJBQXVCLEdBQUdqQjtRQUNoRE8sc0JBQXNCVyxpQkFBaUIsR0FBR0YsSUFBSUcsS0FBSztRQUNuRCxNQUFNSDtJQUNWO0lBQ0EsT0FBTztBQUNYLEVBQUUsQ0FFRixxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcz9kYzgzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNTZXJ2ZXJFcnJvciB9IGZyb20gXCIuL2hvb2tzLXNlcnZlci1jb250ZXh0XCI7XG5pbXBvcnQgeyBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuY29uc3QgTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVQgPSBcIk5FWFRfU1RBVElDX0dFTl9CQUlMT1VUXCI7XG5jbGFzcyBTdGF0aWNHZW5CYWlsb3V0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoLi4uYXJncyl7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgICAgICB0aGlzLmNvZGUgPSBORVhUX1NUQVRJQ19HRU5fQkFJTE9VVDtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTdGF0aWNHZW5CYWlsb3V0RXJyb3IoZXJyb3IpIHtcbiAgICBpZiAodHlwZW9mIGVycm9yICE9PSBcIm9iamVjdFwiIHx8IGVycm9yID09PSBudWxsIHx8ICEoXCJjb2RlXCIgaW4gZXJyb3IpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yLmNvZGUgPT09IE5FWFRfU1RBVElDX0dFTl9CQUlMT1VUO1xufVxuZnVuY3Rpb24gZm9ybWF0RXJyb3JNZXNzYWdlKHJlYXNvbiwgb3B0cykge1xuICAgIGNvbnN0IHsgZHluYW1pYywgbGluayB9ID0gb3B0cyB8fCB7fTtcbiAgICBjb25zdCBzdWZmaXggPSBsaW5rID8gXCIgU2VlIG1vcmUgaW5mbyBoZXJlOiBcIiArIGxpbmsgOiBcIlwiO1xuICAgIHJldHVybiBcIlBhZ2VcIiArIChkeW5hbWljID8gJyB3aXRoIGBkeW5hbWljID0gXCInICsgZHluYW1pYyArICdcImAnIDogXCJcIikgKyBcIiBjb3VsZG4ndCBiZSByZW5kZXJlZCBzdGF0aWNhbGx5IGJlY2F1c2UgaXQgdXNlZCBgXCIgKyByZWFzb24gKyBcImAuXCIgKyBzdWZmaXg7XG59XG5leHBvcnQgY29uc3Qgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgPSAocmVhc29uLCBwYXJhbSk9PntcbiAgICBsZXQgeyBkeW5hbWljLCBsaW5rIH0gPSBwYXJhbSA9PT0gdm9pZCAwID8ge30gOiBwYXJhbTtcbiAgICBjb25zdCBzdGF0aWNHZW5lcmF0aW9uU3RvcmUgPSBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKCFzdGF0aWNHZW5lcmF0aW9uU3RvcmUpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlLmZvcmNlU3RhdGljKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlLmR5bmFtaWNTaG91bGRFcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgU3RhdGljR2VuQmFpbG91dEVycm9yKGZvcm1hdEVycm9yTWVzc2FnZShyZWFzb24sIHtcbiAgICAgICAgICAgIGxpbmssXG4gICAgICAgICAgICBkeW5hbWljOiBkeW5hbWljICE9IG51bGwgPyBkeW5hbWljIDogXCJlcnJvclwiXG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgY29uc3QgbWVzc2FnZSA9IGZvcm1hdEVycm9yTWVzc2FnZShyZWFzb24sIHtcbiAgICAgICAgZHluYW1pYyxcbiAgICAgICAgLy8gdGhpcyBlcnJvciBzaG91bGQgYmUgY2F1Z2h0IGJ5IE5leHQgdG8gYmFpbCBvdXQgb2Ygc3RhdGljIGdlbmVyYXRpb25cbiAgICAgICAgLy8gaW4gY2FzZSBpdCdzIHVuY2F1Z2h0LCB0aGlzIGxpbmsgcHJvdmlkZXMgc29tZSBhZGRpdGlvbmFsIGNvbnRleHQgYXMgdG8gd2h5XG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvZHluYW1pYy1zZXJ2ZXItZXJyb3JcIlxuICAgIH0pO1xuICAgIC8vIElmIHBvc3Rwb25lIGlzIGF2YWlsYWJsZSwgd2Ugc2hvdWxkIHBvc3Rwb25lIHRoZSByZW5kZXIuXG4gICAgc3RhdGljR2VuZXJhdGlvblN0b3JlLnBvc3Rwb25lID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUucG9zdHBvbmUuY2FsbChzdGF0aWNHZW5lcmF0aW9uU3RvcmUsIHJlYXNvbik7XG4gICAgLy8gQXMgdGhpcyBpcyBhIGJhaWxvdXQsIHdlIGRvbid0IHdhbnQgdG8gcmV2YWxpZGF0ZSwgc28gc2V0IHRoZSByZXZhbGlkYXRlXG4gICAgLy8gdG8gMC5cbiAgICBzdGF0aWNHZW5lcmF0aW9uU3RvcmUucmV2YWxpZGF0ZSA9IDA7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZS5pc1N0YXRpY0dlbmVyYXRpb24pIHtcbiAgICAgICAgY29uc3QgZXJyID0gbmV3IER5bmFtaWNTZXJ2ZXJFcnJvcihtZXNzYWdlKTtcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvblN0b3JlLmR5bmFtaWNVc2FnZURlc2NyaXB0aW9uID0gcmVhc29uO1xuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZHluYW1pY1VzYWdlU3RhY2sgPSBlcnIuc3RhY2s7XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcy5tYXAiXSwibmFtZXMiOlsiRHluYW1pY1NlcnZlckVycm9yIiwic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSIsIk5FWFRfU1RBVElDX0dFTl9CQUlMT1VUIiwiU3RhdGljR2VuQmFpbG91dEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImFyZ3MiLCJjb2RlIiwiaXNTdGF0aWNHZW5CYWlsb3V0RXJyb3IiLCJlcnJvciIsImZvcm1hdEVycm9yTWVzc2FnZSIsInJlYXNvbiIsIm9wdHMiLCJkeW5hbWljIiwibGluayIsInN1ZmZpeCIsInN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IiwicGFyYW0iLCJzdGF0aWNHZW5lcmF0aW9uU3RvcmUiLCJnZXRTdG9yZSIsImZvcmNlU3RhdGljIiwiZHluYW1pY1Nob3VsZEVycm9yIiwibWVzc2FnZSIsInBvc3Rwb25lIiwiY2FsbCIsInJldmFsaWRhdGUiLCJpc1N0YXRpY0dlbmVyYXRpb24iLCJlcnIiLCJkeW5hbWljVXNhZ2VEZXNjcmlwdGlvbiIsImR5bmFtaWNVc2FnZVN0YWNrIiwic3RhY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/lib/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/esm/lib/constants.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_DIR_ALIAS: () => (/* binding */ APP_DIR_ALIAS),\n/* harmony export */   CACHE_ONE_YEAR: () => (/* binding */ CACHE_ONE_YEAR),\n/* harmony export */   DOT_NEXT_ALIAS: () => (/* binding */ DOT_NEXT_ALIAS),\n/* harmony export */   ESLINT_DEFAULT_DIRS: () => (/* binding */ ESLINT_DEFAULT_DIRS),\n/* harmony export */   ESLINT_PROMPT_VALUES: () => (/* binding */ ESLINT_PROMPT_VALUES),\n/* harmony export */   GSP_NO_RETURNED_VALUE: () => (/* binding */ GSP_NO_RETURNED_VALUE),\n/* harmony export */   GSSP_COMPONENT_MEMBER_ERROR: () => (/* binding */ GSSP_COMPONENT_MEMBER_ERROR),\n/* harmony export */   GSSP_NO_RETURNED_VALUE: () => (/* binding */ GSSP_NO_RETURNED_VALUE),\n/* harmony export */   INSTRUMENTATION_HOOK_FILENAME: () => (/* binding */ INSTRUMENTATION_HOOK_FILENAME),\n/* harmony export */   MIDDLEWARE_FILENAME: () => (/* binding */ MIDDLEWARE_FILENAME),\n/* harmony export */   MIDDLEWARE_LOCATION_REGEXP: () => (/* binding */ MIDDLEWARE_LOCATION_REGEXP),\n/* harmony export */   NEXT_BODY_SUFFIX: () => (/* binding */ NEXT_BODY_SUFFIX),\n/* harmony export */   NEXT_CACHE_IMPLICIT_TAG_ID: () => (/* binding */ NEXT_CACHE_IMPLICIT_TAG_ID),\n/* harmony export */   NEXT_CACHE_REVALIDATED_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATED_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_SOFT_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_SOFT_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_CACHE_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_DATA_SUFFIX: () => (/* binding */ NEXT_DATA_SUFFIX),\n/* harmony export */   NEXT_META_SUFFIX: () => (/* binding */ NEXT_META_SUFFIX),\n/* harmony export */   NEXT_QUERY_PARAM_PREFIX: () => (/* binding */ NEXT_QUERY_PARAM_PREFIX),\n/* harmony export */   NON_STANDARD_NODE_ENV: () => (/* binding */ NON_STANDARD_NODE_ENV),\n/* harmony export */   PAGES_DIR_ALIAS: () => (/* binding */ PAGES_DIR_ALIAS),\n/* harmony export */   PRERENDER_REVALIDATE_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_HEADER),\n/* harmony export */   PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER),\n/* harmony export */   PUBLIC_DIR_MIDDLEWARE_CONFLICT: () => (/* binding */ PUBLIC_DIR_MIDDLEWARE_CONFLICT),\n/* harmony export */   ROOT_DIR_ALIAS: () => (/* binding */ ROOT_DIR_ALIAS),\n/* harmony export */   RSC_ACTION_CLIENT_WRAPPER_ALIAS: () => (/* binding */ RSC_ACTION_CLIENT_WRAPPER_ALIAS),\n/* harmony export */   RSC_ACTION_ENCRYPTION_ALIAS: () => (/* binding */ RSC_ACTION_ENCRYPTION_ALIAS),\n/* harmony export */   RSC_ACTION_PROXY_ALIAS: () => (/* binding */ RSC_ACTION_PROXY_ALIAS),\n/* harmony export */   RSC_ACTION_VALIDATE_ALIAS: () => (/* binding */ RSC_ACTION_VALIDATE_ALIAS),\n/* harmony export */   RSC_MOD_REF_PROXY_ALIAS: () => (/* binding */ RSC_MOD_REF_PROXY_ALIAS),\n/* harmony export */   RSC_PREFETCH_SUFFIX: () => (/* binding */ RSC_PREFETCH_SUFFIX),\n/* harmony export */   RSC_SUFFIX: () => (/* binding */ RSC_SUFFIX),\n/* harmony export */   SERVER_PROPS_EXPORT_ERROR: () => (/* binding */ SERVER_PROPS_EXPORT_ERROR),\n/* harmony export */   SERVER_PROPS_GET_INIT_PROPS_CONFLICT: () => (/* binding */ SERVER_PROPS_GET_INIT_PROPS_CONFLICT),\n/* harmony export */   SERVER_PROPS_SSG_CONFLICT: () => (/* binding */ SERVER_PROPS_SSG_CONFLICT),\n/* harmony export */   SERVER_RUNTIME: () => (/* binding */ SERVER_RUNTIME),\n/* harmony export */   SSG_FALLBACK_EXPORT_ERROR: () => (/* binding */ SSG_FALLBACK_EXPORT_ERROR),\n/* harmony export */   SSG_GET_INITIAL_PROPS_CONFLICT: () => (/* binding */ SSG_GET_INITIAL_PROPS_CONFLICT),\n/* harmony export */   STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: () => (/* binding */ STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR),\n/* harmony export */   UNSTABLE_REVALIDATE_RENAME_ERROR: () => (/* binding */ UNSTABLE_REVALIDATE_RENAME_ERROR),\n/* harmony export */   WEBPACK_LAYERS: () => (/* binding */ WEBPACK_LAYERS),\n/* harmony export */   WEBPACK_RESOURCE_QUERIES: () => (/* binding */ WEBPACK_RESOURCE_QUERIES)\n/* harmony export */ });\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst RSC_PREFETCH_SUFFIX = \".prefetch.rsc\";\nconst RSC_SUFFIX = \".rsc\";\nconst NEXT_DATA_SUFFIX = \".json\";\nconst NEXT_META_SUFFIX = \".meta\";\nconst NEXT_BODY_SUFFIX = \".body\";\nconst NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\nconst NEXT_CACHE_SOFT_TAGS_HEADER = \"x-next-cache-soft-tags\";\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nconst NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\n// in seconds\nconst CACHE_ONE_YEAR = 31536000;\n// Patterns to detect middleware files\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-action-proxy\";\nconst RSC_ACTION_ENCRYPTION_ALIAS = \"private-next-rsc-action-encryption\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    \"app\",\n    \"pages\",\n    \"components\",\n    \"lib\",\n    \"src\"\n];\nconst ESLINT_PROMPT_VALUES = [\n    {\n        title: \"Strict\",\n        recommended: true,\n        config: {\n            extends: \"next/core-web-vitals\"\n        }\n    },\n    {\n        title: \"Base\",\n        config: {\n            extends: \"next\"\n        }\n    },\n    {\n        title: \"Cancel\",\n        config: null\n    }\n];\nconst SERVER_RUNTIME = {\n    edge: \"edge\",\n    experimentalEdge: \"experimental-edge\",\n    nodejs: \"nodejs\"\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: \"shared\",\n    /**\n   * React Server Components layer (rsc).\n   */ reactServerComponents: \"rsc\",\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: \"ssr\",\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: \"action-browser\",\n    /**\n   * The layer for the API routes.\n   */ api: \"api\",\n    /**\n   * The layer for the middleware code.\n   */ middleware: \"middleware\",\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: \"edge-asset\",\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: \"app-pages-browser\",\n    /**\n   * The server bundle layer for metadata routes.\n   */ appMetadataRoute: \"app-metadata-route\",\n    /**\n   * The layer for the server bundle for App Route handlers.\n   */ appRouteHandler: \"app-route-handler\"\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        server: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler\n        ],\n        nonClientServerTarget: [\n            // plus middleware and pages api\n            WEBPACK_LAYERS_NAMES.middleware,\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        app: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\n    metadata: \"__next_metadata__\",\n    metadataRoute: \"__next_metadata_route__\",\n    metadataImageMeta: \"__next_metadata_image_meta__\"\n};\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/api-utils/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   COOKIE_NAME_PRERENDER_BYPASS: () => (/* binding */ COOKIE_NAME_PRERENDER_BYPASS),\n/* harmony export */   COOKIE_NAME_PRERENDER_DATA: () => (/* binding */ COOKIE_NAME_PRERENDER_DATA),\n/* harmony export */   RESPONSE_LIMIT_DEFAULT: () => (/* binding */ RESPONSE_LIMIT_DEFAULT),\n/* harmony export */   SYMBOL_CLEARED_COOKIES: () => (/* binding */ SYMBOL_CLEARED_COOKIES),\n/* harmony export */   SYMBOL_PREVIEW_DATA: () => (/* binding */ SYMBOL_PREVIEW_DATA),\n/* harmony export */   checkIsOnDemandRevalidate: () => (/* binding */ checkIsOnDemandRevalidate),\n/* harmony export */   clearPreviewData: () => (/* binding */ clearPreviewData),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sendError: () => (/* binding */ sendError),\n/* harmony export */   sendStatusCode: () => (/* binding */ sendStatusCode),\n/* harmony export */   setLazyProp: () => (/* binding */ setLazyProp)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === \"string\") {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__.HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = __webpack_require__(/*! next/dist/compiled/cookie */ \"(middleware)/./node_modules/next/dist/compiled/cookie/index.js\");\n    const previous = res.getHeader(\"Set-Cookie\");\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === \"string\" ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftModeProvider: () => (/* binding */ DraftModeProvider)\n/* harmony export */ });\n/* harmony import */ var _api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api-utils */ \"(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\");\n\nclass DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && (0,_api_utils__WEBPACK_IMPORTED_MODULE_0__.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(_api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n        }\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\"\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: \"\",\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            expires: new Date(0)\n        });\n    }\n} //# sourceMappingURL=draft-mode-provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RjtBQUNoRixNQUFNRTtJQUNUQyxZQUFZQyxZQUFZLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxjQUFjLENBQUM7UUFDbkQsSUFBSUM7UUFDSixtRUFBbUU7UUFDbkUsNERBQTREO1FBQzVELE1BQU1DLHVCQUF1QkwsZ0JBQWdCSCxxRUFBeUJBLENBQUNJLEtBQUtELGNBQWNLLG9CQUFvQjtRQUM5RyxNQUFNQyxjQUFjLENBQUNGLGVBQWVGLFFBQVFLLEdBQUcsQ0FBQ1gsb0VBQTRCQSxDQUFBLEtBQU0sT0FBTyxLQUFLLElBQUlRLGFBQWFJLEtBQUs7UUFDcEgsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0wsd0JBQXdCQyxlQUFlTixnQkFBZ0JNLGdCQUFnQk4sYUFBYVcsYUFBYTtRQUMzSCxJQUFJLENBQUNDLGNBQWMsR0FBR1osZ0JBQWdCLE9BQU8sS0FBSyxJQUFJQSxhQUFhVyxhQUFhO1FBQ2hGLElBQUksQ0FBQ0UsZUFBZSxHQUFHVjtJQUMzQjtJQUNBVyxTQUFTO1FBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQ0YsY0FBYyxFQUFFO1lBQ3RCLE1BQU0sSUFBSUcsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ0YsZUFBZSxDQUFDRyxHQUFHLENBQUM7WUFDckJDLE1BQU1yQixvRUFBNEJBO1lBQ2xDWSxPQUFPLElBQUksQ0FBQ0ksY0FBYztZQUMxQk0sVUFBVTtZQUNWQyxVQUFVQyxNQUFzQyxHQUFHLENBQU0sR0FBRztZQUM1REMsUUFBUUQsa0JBQXlCO1lBQ2pDRSxNQUFNO1FBQ1Y7SUFDSjtJQUNBQyxVQUFVO1FBQ04sMkRBQTJEO1FBQzNELG9EQUFvRDtRQUNwRCx3RUFBd0U7UUFDeEUsSUFBSSxDQUFDVixlQUFlLENBQUNHLEdBQUcsQ0FBQztZQUNyQkMsTUFBTXJCLG9FQUE0QkE7WUFDbENZLE9BQU87WUFDUFUsVUFBVTtZQUNWQyxVQUFVQyxNQUFzQyxHQUFHLENBQU0sR0FBRztZQUM1REMsUUFBUUQsa0JBQXlCO1lBQ2pDRSxNQUFNO1lBQ05FLFNBQVMsSUFBSUMsS0FBSztRQUN0QjtJQUNKO0FBQ0osRUFFQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcz84N2UwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsIGNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUgfSBmcm9tIFwiLi4vYXBpLXV0aWxzXCI7XG5leHBvcnQgY2xhc3MgRHJhZnRNb2RlUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKHByZXZpZXdQcm9wcywgcmVxLCBjb29raWVzLCBtdXRhYmxlQ29va2llcyl7XG4gICAgICAgIHZhciBfY29va2llc19nZXQ7XG4gICAgICAgIC8vIFRoZSBsb2dpYyBmb3IgZHJhZnRNb2RlKCkgaXMgdmVyeSBzaW1pbGFyIHRvIHRyeUdldFByZXZpZXdEYXRhKClcbiAgICAgICAgLy8gYnV0IERyYWZ0IE1vZGUgZG9lcyBub3QgaGF2ZSBhbnkgZGF0YSBhc3NvY2lhdGVkIHdpdGggaXQuXG4gICAgICAgIGNvbnN0IGlzT25EZW1hbmRSZXZhbGlkYXRlID0gcHJldmlld1Byb3BzICYmIGNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUocmVxLCBwcmV2aWV3UHJvcHMpLmlzT25EZW1hbmRSZXZhbGlkYXRlO1xuICAgICAgICBjb25zdCBjb29raWVWYWx1ZSA9IChfY29va2llc19nZXQgPSBjb29raWVzLmdldChDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb29raWVzX2dldC52YWx1ZTtcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBCb29sZWFuKCFpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiBjb29raWVWYWx1ZSAmJiBwcmV2aWV3UHJvcHMgJiYgY29va2llVmFsdWUgPT09IHByZXZpZXdQcm9wcy5wcmV2aWV3TW9kZUlkKTtcbiAgICAgICAgdGhpcy5fcHJldmlld01vZGVJZCA9IHByZXZpZXdQcm9wcyA9PSBudWxsID8gdm9pZCAwIDogcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQ7XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzID0gbXV0YWJsZUNvb2tpZXM7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9wcmV2aWV3TW9kZUlkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IHByZXZpZXdQcm9wcyBtaXNzaW5nIHByZXZpZXdNb2RlSWQgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuX3ByZXZpZXdNb2RlSWQsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIC8vIFRvIGRlbGV0ZSBhIGNvb2tpZSwgc2V0IGBleHBpcmVzYCB0byBhIGRhdGUgaW4gdGhlIHBhc3Q6XG4gICAgICAgIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjY1I3NlY3Rpb24tNC4xLjFcbiAgICAgICAgLy8gYE1heC1BZ2U6IDBgIGlzIG5vdCB2YWxpZCwgdGh1cyBpZ25vcmVkLCBhbmQgdGhlIGNvb2tpZSBpcyBwZXJzaXN0ZWQuXG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCIsXG4gICAgICAgICAgICBleHBpcmVzOiBuZXcgRGF0ZSgwKVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyYWZ0LW1vZGUtcHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbIkNPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MiLCJjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlIiwiRHJhZnRNb2RlUHJvdmlkZXIiLCJjb25zdHJ1Y3RvciIsInByZXZpZXdQcm9wcyIsInJlcSIsImNvb2tpZXMiLCJtdXRhYmxlQ29va2llcyIsIl9jb29raWVzX2dldCIsImlzT25EZW1hbmRSZXZhbGlkYXRlIiwiY29va2llVmFsdWUiLCJnZXQiLCJ2YWx1ZSIsImlzRW5hYmxlZCIsIkJvb2xlYW4iLCJwcmV2aWV3TW9kZUlkIiwiX3ByZXZpZXdNb2RlSWQiLCJfbXV0YWJsZUNvb2tpZXMiLCJlbmFibGUiLCJFcnJvciIsInNldCIsIm5hbWUiLCJodHRwT25seSIsInNhbWVTaXRlIiwicHJvY2VzcyIsInNlY3VyZSIsInBhdGgiLCJkaXNhYmxlIiwiZXhwaXJlcyIsIkRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAsyncStorageWrapper: () => (/* binding */ RequestAsyncStorageWrapper)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode-provider */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\");\n\n\n\n\n\nfunction getHeaders(headers) {\n    const cleaned = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers);\n    for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.FLIGHT_PARAMETERS){\n        cleaned.delete(param.toString().toLowerCase());\n    }\n    return _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(cleaned);\n}\nfunction getCookies(headers) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookiesAdapter.seal(cookies);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\nconst RequestAsyncStorageWrapper = {\n    /**\n   * Wrap the callback with the given store so it can access the underlying\n   * store using hooks.\n   *\n   * @param storage underlying storage object returned by the module\n   * @param context context to seed the store\n   * @param callback function to call within the scope of the context\n   * @returns the result returned by the callback\n   */ wrap (storage, { req, res, renderOpts }, callback) {\n        let previewProps = undefined;\n        if (renderOpts && \"previewProps\" in renderOpts) {\n            // TODO: investigate why previewProps isn't on RenderOpts\n            previewProps = renderOpts.previewProps;\n        }\n        function defaultOnUpdateCookies(cookies) {\n            if (res) {\n                res.setHeader(\"Set-Cookie\", cookies);\n            }\n        }\n        const cache = {};\n        const store = {\n            get headers () {\n                if (!cache.headers) {\n                    // Seal the headers object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.headers = getHeaders(req.headers);\n                }\n                return cache.headers;\n            },\n            get cookies () {\n                if (!cache.cookies) {\n                    // Seal the cookies object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.cookies = getCookies(req.headers);\n                }\n                return cache.cookies;\n            },\n            get mutableCookies () {\n                if (!cache.mutableCookies) {\n                    cache.mutableCookies = getMutableCookies(req.headers, (renderOpts == null ? void 0 : renderOpts.onUpdateCookies) || (res ? defaultOnUpdateCookies : undefined));\n                }\n                return cache.mutableCookies;\n            },\n            get draftMode () {\n                if (!cache.draftMode) {\n                    cache.draftMode = new _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n                }\n                return cache.draftMode;\n            }\n        };\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=request-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStFO0FBQ1A7QUFDNkM7QUFDdEQ7QUFDTDtBQUMxRCxTQUFTTSxXQUFXQyxPQUFPO0lBQ3ZCLE1BQU1DLFVBQVVQLGdGQUFjQSxDQUFDUSxJQUFJLENBQUNGO0lBQ3BDLEtBQUssTUFBTUcsU0FBU1Ysb0ZBQWlCQSxDQUFDO1FBQ2xDUSxRQUFRRyxNQUFNLENBQUNELE1BQU1FLFFBQVEsR0FBR0MsV0FBVztJQUMvQztJQUNBLE9BQU9aLGdGQUFjQSxDQUFDYSxJQUFJLENBQUNOO0FBQy9CO0FBQ0EsU0FBU08sV0FBV1IsT0FBTztJQUN2QixNQUFNUyxVQUFVLElBQUlaLHVFQUFjQSxDQUFDSCxnRkFBY0EsQ0FBQ1EsSUFBSSxDQUFDRjtJQUN2RCxPQUFPSiwrRkFBcUJBLENBQUNXLElBQUksQ0FBQ0U7QUFDdEM7QUFDQSxTQUFTQyxrQkFBa0JWLE9BQU8sRUFBRVcsZUFBZTtJQUMvQyxNQUFNRixVQUFVLElBQUlaLHVFQUFjQSxDQUFDSCxnRkFBY0EsQ0FBQ1EsSUFBSSxDQUFDRjtJQUN2RCxPQUFPTCxzR0FBNEJBLENBQUNpQixJQUFJLENBQUNILFNBQVNFO0FBQ3REO0FBQ08sTUFBTUUsNkJBQTZCO0lBQ3RDOzs7Ozs7OztHQVFELEdBQUdELE1BQU1FLE9BQU8sRUFBRSxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsVUFBVSxFQUFFLEVBQUVDLFFBQVE7UUFDL0MsSUFBSUMsZUFBZUM7UUFDbkIsSUFBSUgsY0FBYyxrQkFBa0JBLFlBQVk7WUFDNUMseURBQXlEO1lBQ3pERSxlQUFlRixXQUFXRSxZQUFZO1FBQzFDO1FBQ0EsU0FBU0UsdUJBQXVCWixPQUFPO1lBQ25DLElBQUlPLEtBQUs7Z0JBQ0xBLElBQUlNLFNBQVMsQ0FBQyxjQUFjYjtZQUNoQztRQUNKO1FBQ0EsTUFBTWMsUUFBUSxDQUFDO1FBQ2YsTUFBTUMsUUFBUTtZQUNWLElBQUl4QixXQUFXO2dCQUNYLElBQUksQ0FBQ3VCLE1BQU12QixPQUFPLEVBQUU7b0JBQ2hCLG9FQUFvRTtvQkFDcEUsOEJBQThCO29CQUM5QnVCLE1BQU12QixPQUFPLEdBQUdELFdBQVdnQixJQUFJZixPQUFPO2dCQUMxQztnQkFDQSxPQUFPdUIsTUFBTXZCLE9BQU87WUFDeEI7WUFDQSxJQUFJUyxXQUFXO2dCQUNYLElBQUksQ0FBQ2MsTUFBTWQsT0FBTyxFQUFFO29CQUNoQixvRUFBb0U7b0JBQ3BFLDhCQUE4QjtvQkFDOUJjLE1BQU1kLE9BQU8sR0FBR0QsV0FBV08sSUFBSWYsT0FBTztnQkFDMUM7Z0JBQ0EsT0FBT3VCLE1BQU1kLE9BQU87WUFDeEI7WUFDQSxJQUFJZ0Isa0JBQWtCO2dCQUNsQixJQUFJLENBQUNGLE1BQU1FLGNBQWMsRUFBRTtvQkFDdkJGLE1BQU1FLGNBQWMsR0FBR2Ysa0JBQWtCSyxJQUFJZixPQUFPLEVBQUUsQ0FBQ2lCLGNBQWMsT0FBTyxLQUFLLElBQUlBLFdBQVdOLGVBQWUsS0FBTUssQ0FBQUEsTUFBTUsseUJBQXlCRCxTQUFRO2dCQUNoSztnQkFDQSxPQUFPRyxNQUFNRSxjQUFjO1lBQy9CO1lBQ0EsSUFBSUMsYUFBYTtnQkFDYixJQUFJLENBQUNILE1BQU1HLFNBQVMsRUFBRTtvQkFDbEJILE1BQU1HLFNBQVMsR0FBRyxJQUFJNUIsbUVBQWlCQSxDQUFDcUIsY0FBY0osS0FBSyxJQUFJLENBQUNOLE9BQU8sRUFBRSxJQUFJLENBQUNnQixjQUFjO2dCQUNoRztnQkFDQSxPQUFPRixNQUFNRyxTQUFTO1lBQzFCO1FBQ0o7UUFDQSxPQUFPWixRQUFRYSxHQUFHLENBQUNILE9BQU9OLFVBQVVNO0lBQ3hDO0FBQ0osRUFBRSxDQUVGLHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcz9jNjUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZMSUdIVF9QQVJBTUVURVJTIH0gZnJvbSBcIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVyc1wiO1xuaW1wb3J0IHsgSGVhZGVyc0FkYXB0ZXIgfSBmcm9tIFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIsIFJlcXVlc3RDb29raWVzQWRhcHRlciB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBSZXF1ZXN0Q29va2llcyB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xuaW1wb3J0IHsgRHJhZnRNb2RlUHJvdmlkZXIgfSBmcm9tIFwiLi9kcmFmdC1tb2RlLXByb3ZpZGVyXCI7XG5mdW5jdGlvbiBnZXRIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjbGVhbmVkID0gSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKTtcbiAgICBmb3IgKGNvbnN0IHBhcmFtIG9mIEZMSUdIVF9QQVJBTUVURVJTKXtcbiAgICAgICAgY2xlYW5lZC5kZWxldGUocGFyYW0udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIEhlYWRlcnNBZGFwdGVyLnNlYWwoY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBnZXRDb29raWVzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjb29raWVzID0gbmV3IFJlcXVlc3RDb29raWVzKEhlYWRlcnNBZGFwdGVyLmZyb20oaGVhZGVycykpO1xuICAgIHJldHVybiBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChjb29raWVzKTtcbn1cbmZ1bmN0aW9uIGdldE11dGFibGVDb29raWVzKGhlYWRlcnMsIG9uVXBkYXRlQ29va2llcykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgUmVxdWVzdENvb2tpZXMoSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIud3JhcChjb29raWVzLCBvblVwZGF0ZUNvb2tpZXMpO1xufVxuZXhwb3J0IGNvbnN0IFJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyID0ge1xuICAgIC8qKlxuICAgKiBXcmFwIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBnaXZlbiBzdG9yZSBzbyBpdCBjYW4gYWNjZXNzIHRoZSB1bmRlcmx5aW5nXG4gICAqIHN0b3JlIHVzaW5nIGhvb2tzLlxuICAgKlxuICAgKiBAcGFyYW0gc3RvcmFnZSB1bmRlcmx5aW5nIHN0b3JhZ2Ugb2JqZWN0IHJldHVybmVkIGJ5IHRoZSBtb2R1bGVcbiAgICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBzZWVkIHRoZSBzdG9yZVxuICAgKiBAcGFyYW0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gY2FsbCB3aXRoaW4gdGhlIHNjb3BlIG9mIHRoZSBjb250ZXh0XG4gICAqIEByZXR1cm5zIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrXG4gICAqLyB3cmFwIChzdG9yYWdlLCB7IHJlcSwgcmVzLCByZW5kZXJPcHRzIH0sIGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBwcmV2aWV3UHJvcHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmIChyZW5kZXJPcHRzICYmIFwicHJldmlld1Byb3BzXCIgaW4gcmVuZGVyT3B0cykge1xuICAgICAgICAgICAgLy8gVE9ETzogaW52ZXN0aWdhdGUgd2h5IHByZXZpZXdQcm9wcyBpc24ndCBvbiBSZW5kZXJPcHRzXG4gICAgICAgICAgICBwcmV2aWV3UHJvcHMgPSByZW5kZXJPcHRzLnByZXZpZXdQcm9wcztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBkZWZhdWx0T25VcGRhdGVDb29raWVzKGNvb2tpZXMpIHtcbiAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiLCBjb29raWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjYWNoZSA9IHt9O1xuICAgICAgICBjb25zdCBzdG9yZSA9IHtcbiAgICAgICAgICAgIGdldCBoZWFkZXJzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgaGVhZGVycyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcbiAgICAgICAgICAgICAgICAgICAgLy8gbXV0YXRlIHRoZSB1bmRlcmx5aW5nIGRhdGEuXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmhlYWRlcnMgPSBnZXRIZWFkZXJzKHJlcS5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmhlYWRlcnM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuY29va2llcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTZWFsIHRoZSBjb29raWVzIG9iamVjdCB0aGF0J2xsIGZyZWV6ZSBvdXQgYW55IG1ldGhvZHMgdGhhdCBjb3VsZFxuICAgICAgICAgICAgICAgICAgICAvLyBtdXRhdGUgdGhlIHVuZGVybHlpbmcgZGF0YS5cbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuY29va2llcyA9IGdldENvb2tpZXMocmVxLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuY29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgbXV0YWJsZUNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUubXV0YWJsZUNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUubXV0YWJsZUNvb2tpZXMgPSBnZXRNdXRhYmxlQ29va2llcyhyZXEuaGVhZGVycywgKHJlbmRlck9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IHJlbmRlck9wdHMub25VcGRhdGVDb29raWVzKSB8fCAocmVzID8gZGVmYXVsdE9uVXBkYXRlQ29va2llcyA6IHVuZGVmaW5lZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUubXV0YWJsZUNvb2tpZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGRyYWZ0TW9kZSAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5kcmFmdE1vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuZHJhZnRNb2RlID0gbmV3IERyYWZ0TW9kZVByb3ZpZGVyKHByZXZpZXdQcm9wcywgcmVxLCB0aGlzLmNvb2tpZXMsIHRoaXMubXV0YWJsZUNvb2tpZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuZHJhZnRNb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gc3RvcmFnZS5ydW4oc3RvcmUsIGNhbGxiYWNrLCBzdG9yZSk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbIkZMSUdIVF9QQVJBTUVURVJTIiwiSGVhZGVyc0FkYXB0ZXIiLCJNdXRhYmxlUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJEcmFmdE1vZGVQcm92aWRlciIsImdldEhlYWRlcnMiLCJoZWFkZXJzIiwiY2xlYW5lZCIsImZyb20iLCJwYXJhbSIsImRlbGV0ZSIsInRvU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJzZWFsIiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJnZXRNdXRhYmxlQ29va2llcyIsIm9uVXBkYXRlQ29va2llcyIsIndyYXAiLCJSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlciIsInN0b3JhZ2UiLCJyZXEiLCJyZXMiLCJyZW5kZXJPcHRzIiwiY2FsbGJhY2siLCJwcmV2aWV3UHJvcHMiLCJ1bmRlZmluZWQiLCJkZWZhdWx0T25VcGRhdGVDb29raWVzIiwic2V0SGVhZGVyIiwiY2FjaGUiLCJzdG9yZSIsIm11dGFibGVDb29raWVzIiwiZHJhZnRNb2RlIiwicnVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/internal-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/internal-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripInternalHeaders: () => (/* binding */ stripInternalHeaders),\n/* harmony export */   stripInternalQueries: () => (/* binding */ stripInternalQueries),\n/* harmony export */   stripInternalSearchParams: () => (/* binding */ stripInternalSearchParams)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _shared_lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/lib/constants */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js\");\n\n\nconst INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextInferredLocaleFromDefault\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\",\n    _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.NEXT_RSC_UNION_QUERY\n];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nfunction stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nfunction stripInternalSearchParams(url, isEdge) {\n    const isStringUrl = typeof url === \"string\";\n    const instance = isStringUrl ? new URL(url) : url;\n    for (const name of INTERNAL_QUERY_NAMES){\n        instance.searchParams.delete(name);\n    }\n    if (isEdge) {\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\n            instance.searchParams.delete(name);\n        }\n    }\n    return isStringUrl ? instance.toString() : instance;\n}\n/**\n * Strip internal headers from the request headers.\n *\n * @param headers the headers to strip of internal headers\n */ function stripInternalHeaders(headers) {\n    for (const key of _shared_lib_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_HEADERS){\n        delete headers[key];\n    }\n} //# sourceMappingURL=internal-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2ludGVybmFsLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStFO0FBQ3BCO0FBQzNELE1BQU1FLHVCQUF1QjtJQUN6QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0FGLHVGQUFvQkE7Q0FDdkI7QUFDRCxNQUFNRyxxQ0FBcUM7SUFDdkM7Q0FDSDtBQUNNLFNBQVNDLHFCQUFxQkMsS0FBSztJQUN0QyxLQUFLLE1BQU1DLFFBQVFKLHFCQUFxQjtRQUNwQyxPQUFPRyxLQUFLLENBQUNDLEtBQUs7SUFDdEI7QUFDSjtBQUNPLFNBQVNDLDBCQUEwQkMsR0FBRyxFQUFFQyxNQUFNO0lBQ2pELE1BQU1DLGNBQWMsT0FBT0YsUUFBUTtJQUNuQyxNQUFNRyxXQUFXRCxjQUFjLElBQUlFLElBQUlKLE9BQU9BO0lBQzlDLEtBQUssTUFBTUYsUUFBUUoscUJBQXFCO1FBQ3BDUyxTQUFTRSxZQUFZLENBQUNDLE1BQU0sQ0FBQ1I7SUFDakM7SUFDQSxJQUFJRyxRQUFRO1FBQ1IsS0FBSyxNQUFNSCxRQUFRSCxtQ0FBbUM7WUFDbERRLFNBQVNFLFlBQVksQ0FBQ0MsTUFBTSxDQUFDUjtRQUNqQztJQUNKO0lBQ0EsT0FBT0ksY0FBY0MsU0FBU0ksUUFBUSxLQUFLSjtBQUMvQztBQUNBOzs7O0NBSUMsR0FBVSxTQUFTSyxxQkFBcUJDLE9BQU87SUFDNUMsS0FBSyxNQUFNQyxPQUFPakIsbUVBQWdCQSxDQUFDO1FBQy9CLE9BQU9nQixPQUFPLENBQUNDLElBQUk7SUFDdkI7QUFDSixFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvaW50ZXJuYWwtdXRpbHMuanM/YjMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBORVhUX1JTQ19VTklPTl9RVUVSWSB9IGZyb20gXCIuLi9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLWhlYWRlcnNcIjtcbmltcG9ydCB7IElOVEVSTkFMX0hFQURFUlMgfSBmcm9tIFwiLi4vc2hhcmVkL2xpYi9jb25zdGFudHNcIjtcbmNvbnN0IElOVEVSTkFMX1FVRVJZX05BTUVTID0gW1xuICAgIFwiX19uZXh0RmFsbGJhY2tcIixcbiAgICBcIl9fbmV4dExvY2FsZVwiLFxuICAgIFwiX19uZXh0SW5mZXJyZWRMb2NhbGVGcm9tRGVmYXVsdFwiLFxuICAgIFwiX19uZXh0RGVmYXVsdExvY2FsZVwiLFxuICAgIFwiX19uZXh0SXNOb3RGb3VuZFwiLFxuICAgIE5FWFRfUlNDX1VOSU9OX1FVRVJZXG5dO1xuY29uc3QgRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyA9IFtcbiAgICBcIl9fbmV4dERhdGFSZXFcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludGVybmFsUXVlcmllcyhxdWVyeSkge1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGRlbGV0ZSBxdWVyeVtuYW1lXTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyh1cmwsIGlzRWRnZSkge1xuICAgIGNvbnN0IGlzU3RyaW5nVXJsID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIjtcbiAgICBjb25zdCBpbnN0YW5jZSA9IGlzU3RyaW5nVXJsID8gbmV3IFVSTCh1cmwpIDogdXJsO1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGluc3RhbmNlLnNlYXJjaFBhcmFtcy5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGlmIChpc0VkZ2UpIHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIEVER0VfRVhURU5ERURfSU5URVJOQUxfUVVFUllfTkFNRVMpe1xuICAgICAgICAgICAgaW5zdGFuY2Uuc2VhcmNoUGFyYW1zLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaXNTdHJpbmdVcmwgPyBpbnN0YW5jZS50b1N0cmluZygpIDogaW5zdGFuY2U7XG59XG4vKipcbiAqIFN0cmlwIGludGVybmFsIGhlYWRlcnMgZnJvbSB0aGUgcmVxdWVzdCBoZWFkZXJzLlxuICpcbiAqIEBwYXJhbSBoZWFkZXJzIHRoZSBoZWFkZXJzIHRvIHN0cmlwIG9mIGludGVybmFsIGhlYWRlcnNcbiAqLyBleHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbEhlYWRlcnMoaGVhZGVycykge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIElOVEVSTkFMX0hFQURFUlMpe1xuICAgICAgICBkZWxldGUgaGVhZGVyc1trZXldO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJuYWwtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIk5FWFRfUlNDX1VOSU9OX1FVRVJZIiwiSU5URVJOQUxfSEVBREVSUyIsIklOVEVSTkFMX1FVRVJZX05BTUVTIiwiRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyIsInN0cmlwSW50ZXJuYWxRdWVyaWVzIiwicXVlcnkiLCJuYW1lIiwic3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyIsInVybCIsImlzRWRnZSIsImlzU3RyaW5nVXJsIiwiaW5zdGFuY2UiLCJVUkwiLCJzZWFyY2hQYXJhbXMiLCJkZWxldGUiLCJ0b1N0cmluZyIsInN0cmlwSW50ZXJuYWxIZWFkZXJzIiwiaGVhZGVycyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRenderSpan: () => (/* binding */ AppRenderSpan),\n/* harmony export */   AppRouteRouteHandlersSpan: () => (/* binding */ AppRouteRouteHandlersSpan),\n/* harmony export */   BaseServerSpan: () => (/* binding */ BaseServerSpan),\n/* harmony export */   LoadComponentsSpan: () => (/* binding */ LoadComponentsSpan),\n/* harmony export */   NextNodeServerSpan: () => (/* binding */ NextNodeServerSpan),\n/* harmony export */   NextServerSpan: () => (/* binding */ NextServerSpan),\n/* harmony export */   NextVanillaSpanAllowlist: () => (/* binding */ NextVanillaSpanAllowlist),\n/* harmony export */   NodeSpan: () => (/* binding */ NodeSpan),\n/* harmony export */   RenderSpan: () => (/* binding */ RenderSpan),\n/* harmony export */   ResolveMetadataSpan: () => (/* binding */ ResolveMetadataSpan),\n/* harmony export */   RouterSpan: () => (/* binding */ RouterSpan),\n/* harmony export */   StartServerSpan: () => (/* binding */ StartServerSpan)\n/* harmony export */ });\n/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan;\n(function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\n// This list is used to filter out spans that are not relevant to the user\nconst NextVanillaSpanAllowlist = [\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\"\n];\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/tracer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpanKind: () => (/* binding */ SpanKind),\n/* harmony export */   SpanStatusCode: () => (/* binding */ SpanStatusCode),\n/* harmony export */   getTracer: () => (/* binding */ getTracer)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (true) {\n    api = __webpack_require__(/*! @opentelemetry/api */ \"(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\");\n} else {}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nconst isPromise = (p)=>{\n    return p !== null && typeof p === \"object\" && typeof p.then === \"function\";\n};\nconst closeSpanWithError = (span, error)=>{\n    if ((error == null ? void 0 : error.bubble) === true) {\n        span.setAttribute(\"next.bubble\", true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey(\"next.rootSpanId\");\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer(\"next.js\", \"0.0.1\");\n    }\n    getContext() {\n        return context;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === \"function\" ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== \"1\" || options.hideSpan) {\n            return fn();\n        }\n        const spanName = options.spanName ?? type;\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            \"next.span_name\": spanName,\n            \"next.span_type\": type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isPromise(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== \"1\") {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === \"function\" && typeof fn === \"function\") {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === \"function\") {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\n //# sourceMappingURL=tracer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/adapter.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/adapter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adapter: () => (/* binding */ adapter)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spec-extension/fetch-event */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/router/utils/relativize-url */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _internal_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal-utils */ \"(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\");\n/* harmony import */ var _shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared/lib/router/utils/app-paths */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\");\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../async-storage/request-async-storage-wrapper */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\");\n/* harmony import */ var _client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../client/components/request-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__.NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__.getTracer)();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === \"true\") {\n            const { interceptTestApis, wrapRequestHandler } = __webpack_require__(/*! next/dist/experimental/testmode/server-edge */ \"(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\");\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nasync function adapter(params) {\n    ensureTestApisIntercepted();\n    await (0,_globals__WEBPACK_IMPORTED_MODULE_11__.ensureInstrumentationRegistered)();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    const prerenderManifest = typeof self.__PRERENDER_MANIFEST === \"string\" ? JSON.parse(self.__PRERENDER_MANIFEST) : undefined;\n    params.request.url = (0,_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__.normalizeRscURL)(params.request.url);\n    const requestUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestUrl.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestUrl.searchParams.getAll(key);\n        if (key !== _lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX && key.startsWith(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX)) {\n            const normalizedKey = key.substring(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX.length);\n            requestUrl.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestUrl.searchParams.append(normalizedKey, val);\n            }\n            requestUrl.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.fromNodeOutgoingHttpHeaders)(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeUrl =  false ? 0 : requestUrl;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: (0,_internal_utils__WEBPACK_IMPORTED_MODULE_7__.stripInternalSearchParams)(normalizeUrl, true).toString(),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: \"development\" !== \"development\",\n            fetchCacheKeyPrefix: undefined,\n            dev: \"development\" === \"development\",\n            requestHeaders: params.request.headers,\n            requestProtocol: \"https\",\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: {\n                        previewModeId: \"development-id\"\n                    }\n                };\n            }\n        });\n    }\n    const event = new _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === \"/middleware\" || params.page === \"/src/middleware\";\n        if (isMiddleware) {\n            return _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__.RequestAsyncStorageWrapper.wrap(_client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__.requestAsyncStorage, {\n                req: request,\n                renderOpts: {\n                    onUpdateCookies: (cookies)=>{\n                        cookiesFromResponse = cookies;\n                    },\n                    // @ts-expect-error: TODO: investigate why previewProps isn't on RenderOpts\n                    previewProps: (prerenderManifest == null ? void 0 : prerenderManifest.preview) || {\n                        previewModeId: \"development-id\",\n                        previewModeEncryptionKey: \"\",\n                        previewModeSigningKey: \"\"\n                    }\n                }\n            }, ()=>params.handler(request, event));\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set(\"set-cookie\", cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (true) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(undefined && 0)) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (true) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__.NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[_spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.waitUntilSymbol]),\n        fetchMetrics: request.fetchMetrics\n    };\n} //# sourceMappingURL=adapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/error.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/error.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSignatureError: () => (/* binding */ PageSignatureError),\n/* harmony export */   RemovedPageError: () => (/* binding */ RemovedPageError),\n/* harmony export */   RemovedUAError: () => (/* binding */ RemovedUAError)\n/* harmony export */ });\nclass PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nclass RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nclass RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSwyQkFBMkJDO0lBQ3BDQyxZQUFZLEVBQUVDLElBQUksRUFBRSxDQUFDO1FBQ2pCLEtBQUssQ0FBQyxDQUFDLGdCQUFnQixFQUFFQSxLQUFLOzs7Ozs7O0VBT3BDLENBQUM7SUFDQztBQUNKO0FBQ08sTUFBTUMseUJBQXlCSDtJQUNsQ0MsYUFBYTtRQUNULEtBQUssQ0FBQyxDQUFDOztFQUViLENBQUM7SUFDQztBQUNKO0FBQ08sTUFBTUcsdUJBQXVCSjtJQUNoQ0MsYUFBYTtRQUNULEtBQUssQ0FBQyxDQUFDOztFQUViLENBQUM7SUFDQztBQUNKLEVBRUEsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXJyb3IuanM/ZWFkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGFnZVNpZ25hdHVyZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgcGFnZSB9KXtcbiAgICAgICAgc3VwZXIoYFRoZSBtaWRkbGV3YXJlIFwiJHtwYWdlfVwiIGFjY2VwdHMgYW4gYXN5bmMgQVBJIGRpcmVjdGx5IHdpdGggdGhlIGZvcm06XG4gIFxuICBleHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0LCBldmVudCkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QoJy9uZXctbG9jYXRpb24nKVxuICB9XG4gIFxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtbmV3LXNpZ25hdHVyZVxuICBgKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUmVtb3ZlZFBhZ2VFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihgVGhlIHJlcXVlc3QucGFnZSBoYXMgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBcXGBVUkxQYXR0ZXJuXFxgLlxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcmVxdWVzdC1wYWdlXG4gIGApO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZW1vdmVkVUFFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihgVGhlIHJlcXVlc3QudWEgaGFzIGJlZW4gcmVtb3ZlZCBpbiBmYXZvdXIgb2YgXFxgdXNlckFnZW50XFxgIGZ1bmN0aW9uLlxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcGFyc2UtdXNlci1hZ2VudFxuICBgKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlU2lnbmF0dXJlRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwicGFnZSIsIlJlbW92ZWRQYWdlRXJyb3IiLCJSZW1vdmVkVUFFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/exports/next-request.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/exports/next-request.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _spec_extension_request__WEBPACK_IMPORTED_MODULE_0__.NextRequest)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n// This file is for modularized imports for next/server to get fully-treeshaking.\n //# sourceMappingURL=next-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL25leHQtcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlGQUFpRjtBQUNkLENBRW5FLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL2V4cG9ydHMvbmV4dC1yZXF1ZXN0LmpzP2M0ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIGlzIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzIGZvciBuZXh0L3NlcnZlciB0byBnZXQgZnVsbHktdHJlZXNoYWtpbmcuXG5leHBvcnQgeyBOZXh0UmVxdWVzdCBhcyBkZWZhdWx0IH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3JlcXVlc3RcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmV4dC1yZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6WyJOZXh0UmVxdWVzdCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/exports/next-request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/exports/next-response.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _spec_extension_response__WEBPACK_IMPORTED_MODULE_0__.NextResponse)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n// This file is for modularized imports for next/server to get fully-treeshaking.\n //# sourceMappingURL=next-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL25leHQtcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpRkFBaUY7QUFDWixDQUVyRSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL25leHQtcmVzcG9uc2UuanM/NjQxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgZm9yIG1vZHVsYXJpemVkIGltcG9ydHMgZm9yIG5leHQvc2VydmVyIHRvIGdldCBmdWxseS10cmVlc2hha2luZy5cbmV4cG9ydCB7IE5leHRSZXNwb25zZSBhcyBkZWZhdWx0IH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3Jlc3BvbnNlXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leHQtcmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/globals.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/globals.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureInstrumentationRegistered: () => (/* binding */ ensureInstrumentationRegistered)\n/* harmony export */ });\nasync function registerInstrumentation() {\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            await _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nlet registerInstrumentationPromise = null;\nfunction ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== __webpack_require__.g.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = __webpack_require__.g.process.env;\n        __webpack_require__.g.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals(); //# sourceMappingURL=globals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxlQUFlQTtJQUNYLElBQUksY0FBY0MsY0FBY0MsU0FBU0MsMEJBQTBCLElBQUlELFNBQVNDLDBCQUEwQixDQUFDQyxRQUFRLEVBQUU7UUFDakgsSUFBSTtZQUNBLE1BQU1GLFNBQVNDLDBCQUEwQixDQUFDQyxRQUFRO1FBQ3RELEVBQUUsT0FBT0MsS0FBSztZQUNWQSxJQUFJQyxPQUFPLEdBQUcsQ0FBQyxzREFBc0QsRUFBRUQsSUFBSUMsT0FBTyxDQUFDLENBQUM7WUFDcEYsTUFBTUQ7UUFDVjtJQUNKO0FBQ0o7QUFDQSxJQUFJRSxpQ0FBaUM7QUFDOUIsU0FBU0M7SUFDWixJQUFJLENBQUNELGdDQUFnQztRQUNqQ0EsaUNBQWlDUDtJQUNyQztJQUNBLE9BQU9PO0FBQ1g7QUFDQSxTQUFTRSxpQ0FBaUNDLE1BQU07SUFDNUMsc0hBQXNIO0lBQ3RILE9BQU8sQ0FBQywyQ0FBMkMsRUFBRUEsT0FBTzt3RUFDUSxDQUFDO0FBQ3pFO0FBQ0EsU0FBU0MscUJBQXFCQyxVQUFVO0lBQ3BDLE1BQU1DLFFBQVEsSUFBSUMsTUFBTSxZQUFZLEdBQUc7UUFDbkNDLEtBQUtDLElBQUksRUFBRUMsSUFBSTtZQUNYLElBQUlBLFNBQVMsUUFBUTtnQkFDakIsT0FBTyxDQUFDO1lBQ1o7WUFDQSxNQUFNLElBQUlDLE1BQU1ULGlDQUFpQ0c7UUFDckQ7UUFDQU87WUFDSSxNQUFNLElBQUlELE1BQU1ULGlDQUFpQ0c7UUFDckQ7UUFDQVEsT0FBT0MsT0FBTyxFQUFFQyxLQUFLLEVBQUVDLElBQUk7WUFDdkIsSUFBSSxPQUFPQSxJQUFJLENBQUMsRUFBRSxLQUFLLFlBQVk7Z0JBQy9CLE9BQU9BLElBQUksQ0FBQyxFQUFFLENBQUNWO1lBQ25CO1lBQ0EsTUFBTSxJQUFJSyxNQUFNVCxpQ0FBaUNHO1FBQ3JEO0lBQ0o7SUFDQSxPQUFPLElBQUlFLE1BQU0sQ0FBQyxHQUFHO1FBQ2pCQyxLQUFLLElBQUlGO0lBQ2I7QUFDSjtBQUNBLFNBQVNXO0lBQ0wsOERBQThEO0lBQzlELElBQUlDLFlBQVlDLHFCQUFNQSxDQUFDRCxPQUFPLEVBQUU7UUFDNUIsNERBQTREO1FBQzVEQSxRQUFRRSxHQUFHLEdBQUdELHFCQUFNQSxDQUFDRCxPQUFPLENBQUNFLEdBQUc7UUFDaENELHFCQUFNQSxDQUFDRCxPQUFPLEdBQUdBO0lBQ3JCO0lBQ0EsdUVBQXVFO0lBQ3ZFLDZEQUE2RDtJQUM3REcsT0FBT0MsY0FBYyxDQUFDNUIsWUFBWSx3QkFBd0I7UUFDdEQ2QixPQUFPbkI7UUFDUG9CLFlBQVk7UUFDWkMsY0FBYztJQUNsQjtJQUNBLGdFQUFnRTtJQUNoRSxLQUFLeEI7QUFDVDtBQUNBZ0Isa0JBRUEsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscy5qcz81YzZhIl0sInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCkge1xuICAgIGlmIChcIl9FTlRSSUVTXCIgaW4gZ2xvYmFsVGhpcyAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbiAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbi5yZWdpc3Rlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgX0VOVFJJRVMubWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24ucmVnaXN0ZXIoKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBlcnIubWVzc2FnZSA9IGBBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBsb2FkaW5nIGluc3RydW1lbnRhdGlvbiBob29rOiAke2Vyci5tZXNzYWdlfWA7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG59XG5sZXQgcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlID0gbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkKCkge1xuICAgIGlmICghcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZSA9IHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCk7XG4gICAgfVxuICAgIHJldHVybiByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2U7XG59XG5mdW5jdGlvbiBnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGUpIHtcbiAgICAvLyB3YXJuaW5nOiBpZiB5b3UgY2hhbmdlIHRoZXNlIG1lc3NhZ2VzLCB5b3UgbXVzdCBhZGp1c3QgaG93IHJlYWN0LWRldi1vdmVybGF5J3MgbWlkZGxld2FyZSBkZXRlY3RzIG1vZHVsZXMgbm90IGZvdW5kXG4gICAgcmV0dXJuIGBUaGUgZWRnZSBydW50aW1lIGRvZXMgbm90IHN1cHBvcnQgTm9kZS5qcyAnJHttb2R1bGV9JyBtb2R1bGUuXG5MZWFybiBNb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9ub2RlLW1vZHVsZS1pbi1lZGdlLXJ1bnRpbWVgO1xufVxuZnVuY3Rpb24gX19pbXBvcnRfdW5zdXBwb3J0ZWQobW9kdWxlTmFtZSkge1xuICAgIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KGZ1bmN0aW9uKCkge30sIHtcbiAgICAgICAgZ2V0IChfb2JqLCBwcm9wKSB7XG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gXCJ0aGVuXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlTmFtZSkpO1xuICAgICAgICB9LFxuICAgICAgICBjb25zdHJ1Y3QgKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZU5hbWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgYXBwbHkgKF90YXJnZXQsIF90aGlzLCBhcmdzKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcmdzWzBdKHByb3h5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGVOYW1lKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgICAgIGdldDogKCk9PnByb3h5XG4gICAgfSk7XG59XG5mdW5jdGlvbiBlbmhhbmNlR2xvYmFscygpIHtcbiAgICAvLyBUaGUgY29uZGl0aW9uIGlzIHRydWUgd2hlbiB0aGUgXCJwcm9jZXNzXCIgbW9kdWxlIGlzIHByb3ZpZGVkXG4gICAgaWYgKHByb2Nlc3MgIT09IGdsb2JhbC5wcm9jZXNzKSB7XG4gICAgICAgIC8vIHByZWZlciBsb2NhbCBwcm9jZXNzIGJ1dCBnbG9iYWwucHJvY2VzcyBoYXMgY29ycmVjdCBcImVudlwiXG4gICAgICAgIHByb2Nlc3MuZW52ID0gZ2xvYmFsLnByb2Nlc3MuZW52O1xuICAgICAgICBnbG9iYWwucHJvY2VzcyA9IHByb2Nlc3M7XG4gICAgfVxuICAgIC8vIHRvIGFsbG93IGJ1aWxkaW5nIGNvZGUgdGhhdCBpbXBvcnQgYnV0IGRvZXMgbm90IHVzZSBub2RlLmpzIG1vZHVsZXMsXG4gICAgLy8gd2VicGFjayB3aWxsIGV4cGVjdCB0aGlzIGZ1bmN0aW9uIHRvIGV4aXN0IGluIGdsb2JhbCBzY29wZVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnbG9iYWxUaGlzLCBcIl9faW1wb3J0X3Vuc3VwcG9ydGVkXCIsIHtcbiAgICAgICAgdmFsdWU6IF9faW1wb3J0X3Vuc3VwcG9ydGVkLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZVxuICAgIH0pO1xuICAgIC8vIEVhZ2VybHkgZmlyZSBpbnN0cnVtZW50YXRpb24gaG9vayB0byBtYWtlIHRoZSBzdGFydHVwIGZhc3Rlci5cbiAgICB2b2lkIGVuc3VyZUluc3RydW1lbnRhdGlvblJlZ2lzdGVyZWQoKTtcbn1cbmVuaGFuY2VHbG9iYWxzKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbHMuanMubWFwIl0sIm5hbWVzIjpbInJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uIiwiZ2xvYmFsVGhpcyIsIl9FTlRSSUVTIiwibWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24iLCJyZWdpc3RlciIsImVyciIsIm1lc3NhZ2UiLCJyZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2UiLCJlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkIiwiZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UiLCJtb2R1bGUiLCJfX2ltcG9ydF91bnN1cHBvcnRlZCIsIm1vZHVsZU5hbWUiLCJwcm94eSIsIlByb3h5IiwiZ2V0IiwiX29iaiIsInByb3AiLCJFcnJvciIsImNvbnN0cnVjdCIsImFwcGx5IiwiX3RhcmdldCIsIl90aGlzIiwiYXJncyIsImVuaGFuY2VHbG9iYWxzIiwicHJvY2VzcyIsImdsb2JhbCIsImVudiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/globals.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/next-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/next-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextURL: () => (/* binding */ NextURL)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\");\n/* harmony import */ var _shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\");\n/* harmony import */ var _shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\");\n/* harmony import */ var _shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\");\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = (0,_shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__.getNextPathnameInfo)(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0,_shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__.getHostname)(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0,_shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0,_shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__.formatNextPathnameInfo)({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n} //# sourceMappingURL=next-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeadersAdapter: () => (/* binding */ HeadersAdapter),\n/* harmony export */   ReadonlyHeadersError: () => (/* binding */ ReadonlyHeadersError)\n/* harmony export */ });\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n/**\n * @internal\n */ class ReadonlyHeadersError extends Error {\n    constructor(){\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === \"undefined\") return;\n                // If the original casing exists, return the value.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === \"undefined\") return false;\n                // If the original casing exists, return true.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === \"undefined\") return true;\n                // If the original casing exists, delete the property.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"append\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(\", \");\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === \"string\") {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== \"undefined\") return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== \"undefined\";\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUMzQzs7Q0FFQyxHQUFVLE1BQU1DLDZCQUE2QkM7SUFDMUNDLGFBQWE7UUFDVCxLQUFLLENBQUM7SUFDVjtJQUNBLE9BQU9DLFdBQVc7UUFDZCxNQUFNLElBQUlIO0lBQ2Q7QUFDSjtBQUNPLE1BQU1JLHVCQUF1QkM7SUFDaENILFlBQVlJLE9BQU8sQ0FBQztRQUNoQiwyRUFBMkU7UUFDM0UsMkVBQTJFO1FBQzNFLEtBQUs7UUFDTCxJQUFJLENBQUNBLE9BQU8sR0FBRyxJQUFJQyxNQUFNRCxTQUFTO1lBQzlCRSxLQUFLQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsUUFBUTtnQkFDdkIsc0VBQXNFO2dCQUN0RSxzRUFBc0U7Z0JBQ3RFLGNBQWM7Z0JBQ2QsSUFBSSxPQUFPRCxTQUFTLFVBQVU7b0JBQzFCLE9BQU9YLG9EQUFjQSxDQUFDUyxHQUFHLENBQUNDLFFBQVFDLE1BQU1DO2dCQUM1QztnQkFDQSxNQUFNQyxhQUFhRixLQUFLRyxXQUFXO2dCQUNuQyx3RUFBd0U7Z0JBQ3hFLHFFQUFxRTtnQkFDckUsa0JBQWtCO2dCQUNsQixNQUFNQyxXQUFXQyxPQUFPQyxJQUFJLENBQUNWLFNBQVNXLElBQUksQ0FBQyxDQUFDQyxJQUFJQSxFQUFFTCxXQUFXLE9BQU9EO2dCQUNwRSwwREFBMEQ7Z0JBQzFELElBQUksT0FBT0UsYUFBYSxhQUFhO2dCQUNyQyxtREFBbUQ7Z0JBQ25ELE9BQU9mLG9EQUFjQSxDQUFDUyxHQUFHLENBQUNDLFFBQVFLLFVBQVVIO1lBQ2hEO1lBQ0FRLEtBQUtWLE1BQU0sRUFBRUMsSUFBSSxFQUFFVSxLQUFLLEVBQUVULFFBQVE7Z0JBQzlCLElBQUksT0FBT0QsU0FBUyxVQUFVO29CQUMxQixPQUFPWCxvREFBY0EsQ0FBQ29CLEdBQUcsQ0FBQ1YsUUFBUUMsTUFBTVUsT0FBT1Q7Z0JBQ25EO2dCQUNBLE1BQU1DLGFBQWFGLEtBQUtHLFdBQVc7Z0JBQ25DLHdFQUF3RTtnQkFDeEUscUVBQXFFO2dCQUNyRSxrQkFBa0I7Z0JBQ2xCLE1BQU1DLFdBQVdDLE9BQU9DLElBQUksQ0FBQ1YsU0FBU1csSUFBSSxDQUFDLENBQUNDLElBQUlBLEVBQUVMLFdBQVcsT0FBT0Q7Z0JBQ3BFLGlFQUFpRTtnQkFDakUsT0FBT2Isb0RBQWNBLENBQUNvQixHQUFHLENBQUNWLFFBQVFLLFlBQVlKLE1BQU1VLE9BQU9UO1lBQy9EO1lBQ0FVLEtBQUtaLE1BQU0sRUFBRUMsSUFBSTtnQkFDYixJQUFJLE9BQU9BLFNBQVMsVUFBVSxPQUFPWCxvREFBY0EsQ0FBQ3NCLEdBQUcsQ0FBQ1osUUFBUUM7Z0JBQ2hFLE1BQU1FLGFBQWFGLEtBQUtHLFdBQVc7Z0JBQ25DLHdFQUF3RTtnQkFDeEUscUVBQXFFO2dCQUNyRSxrQkFBa0I7Z0JBQ2xCLE1BQU1DLFdBQVdDLE9BQU9DLElBQUksQ0FBQ1YsU0FBU1csSUFBSSxDQUFDLENBQUNDLElBQUlBLEVBQUVMLFdBQVcsT0FBT0Q7Z0JBQ3BFLHNEQUFzRDtnQkFDdEQsSUFBSSxPQUFPRSxhQUFhLGFBQWEsT0FBTztnQkFDNUMsOENBQThDO2dCQUM5QyxPQUFPZixvREFBY0EsQ0FBQ3NCLEdBQUcsQ0FBQ1osUUFBUUs7WUFDdEM7WUFDQVEsZ0JBQWdCYixNQUFNLEVBQUVDLElBQUk7Z0JBQ3hCLElBQUksT0FBT0EsU0FBUyxVQUFVLE9BQU9YLG9EQUFjQSxDQUFDdUIsY0FBYyxDQUFDYixRQUFRQztnQkFDM0UsTUFBTUUsYUFBYUYsS0FBS0csV0FBVztnQkFDbkMsd0VBQXdFO2dCQUN4RSxxRUFBcUU7Z0JBQ3JFLGtCQUFrQjtnQkFDbEIsTUFBTUMsV0FBV0MsT0FBT0MsSUFBSSxDQUFDVixTQUFTVyxJQUFJLENBQUMsQ0FBQ0MsSUFBSUEsRUFBRUwsV0FBVyxPQUFPRDtnQkFDcEUscURBQXFEO2dCQUNyRCxJQUFJLE9BQU9FLGFBQWEsYUFBYSxPQUFPO2dCQUM1QyxzREFBc0Q7Z0JBQ3RELE9BQU9mLG9EQUFjQSxDQUFDdUIsY0FBYyxDQUFDYixRQUFRSztZQUNqRDtRQUNKO0lBQ0o7SUFDQTs7O0dBR0QsR0FBRyxPQUFPUyxLQUFLakIsT0FBTyxFQUFFO1FBQ25CLE9BQU8sSUFBSUMsTUFBTUQsU0FBUztZQUN0QkUsS0FBS0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLFFBQVE7Z0JBQ3ZCLE9BQU9EO29CQUNILEtBQUs7b0JBQ0wsS0FBSztvQkFDTCxLQUFLO3dCQUNELE9BQU9WLHFCQUFxQkcsUUFBUTtvQkFDeEM7d0JBQ0ksT0FBT0osb0RBQWNBLENBQUNTLEdBQUcsQ0FBQ0MsUUFBUUMsTUFBTUM7Z0JBQ2hEO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7Ozs7OztHQU1ELEdBQUdhLE1BQU1KLEtBQUssRUFBRTtRQUNYLElBQUlLLE1BQU1DLE9BQU8sQ0FBQ04sUUFBUSxPQUFPQSxNQUFNTyxJQUFJLENBQUM7UUFDNUMsT0FBT1A7SUFDWDtJQUNBOzs7OztHQUtELEdBQUcsT0FBT1EsS0FBS3RCLE9BQU8sRUFBRTtRQUNuQixJQUFJQSxtQkFBbUJELFNBQVMsT0FBT0M7UUFDdkMsT0FBTyxJQUFJRixlQUFlRTtJQUM5QjtJQUNBdUIsT0FBT0MsSUFBSSxFQUFFVixLQUFLLEVBQUU7UUFDaEIsTUFBTVcsV0FBVyxJQUFJLENBQUN6QixPQUFPLENBQUN3QixLQUFLO1FBQ25DLElBQUksT0FBT0MsYUFBYSxVQUFVO1lBQzlCLElBQUksQ0FBQ3pCLE9BQU8sQ0FBQ3dCLEtBQUssR0FBRztnQkFDakJDO2dCQUNBWDthQUNIO1FBQ0wsT0FBTyxJQUFJSyxNQUFNQyxPQUFPLENBQUNLLFdBQVc7WUFDaENBLFNBQVNDLElBQUksQ0FBQ1o7UUFDbEIsT0FBTztZQUNILElBQUksQ0FBQ2QsT0FBTyxDQUFDd0IsS0FBSyxHQUFHVjtRQUN6QjtJQUNKO0lBQ0FhLE9BQU9ILElBQUksRUFBRTtRQUNULE9BQU8sSUFBSSxDQUFDeEIsT0FBTyxDQUFDd0IsS0FBSztJQUM3QjtJQUNBdEIsSUFBSXNCLElBQUksRUFBRTtRQUNOLE1BQU1WLFFBQVEsSUFBSSxDQUFDZCxPQUFPLENBQUN3QixLQUFLO1FBQ2hDLElBQUksT0FBT1YsVUFBVSxhQUFhLE9BQU8sSUFBSSxDQUFDSSxLQUFLLENBQUNKO1FBQ3BELE9BQU87SUFDWDtJQUNBQyxJQUFJUyxJQUFJLEVBQUU7UUFDTixPQUFPLE9BQU8sSUFBSSxDQUFDeEIsT0FBTyxDQUFDd0IsS0FBSyxLQUFLO0lBQ3pDO0lBQ0FYLElBQUlXLElBQUksRUFBRVYsS0FBSyxFQUFFO1FBQ2IsSUFBSSxDQUFDZCxPQUFPLENBQUN3QixLQUFLLEdBQUdWO0lBQ3pCO0lBQ0FjLFFBQVFDLFVBQVUsRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLEtBQUssTUFBTSxDQUFDTixNQUFNVixNQUFNLElBQUksSUFBSSxDQUFDaUIsT0FBTyxHQUFHO1lBQ3ZDRixXQUFXRyxJQUFJLENBQUNGLFNBQVNoQixPQUFPVSxNQUFNLElBQUk7UUFDOUM7SUFDSjtJQUNBLENBQUNPLFVBQVU7UUFDUCxLQUFLLE1BQU1FLE9BQU94QixPQUFPQyxJQUFJLENBQUMsSUFBSSxDQUFDVixPQUFPLEVBQUU7WUFDeEMsTUFBTXdCLE9BQU9TLElBQUkxQixXQUFXO1lBQzVCLGtFQUFrRTtZQUNsRSw0QkFBNEI7WUFDNUIsTUFBTU8sUUFBUSxJQUFJLENBQUNaLEdBQUcsQ0FBQ3NCO1lBQ3ZCLE1BQU07Z0JBQ0ZBO2dCQUNBVjthQUNIO1FBQ0w7SUFDSjtJQUNBLENBQUNKLE9BQU87UUFDSixLQUFLLE1BQU11QixPQUFPeEIsT0FBT0MsSUFBSSxDQUFDLElBQUksQ0FBQ1YsT0FBTyxFQUFFO1lBQ3hDLE1BQU13QixPQUFPUyxJQUFJMUIsV0FBVztZQUM1QixNQUFNaUI7UUFDVjtJQUNKO0lBQ0EsQ0FBQ1UsU0FBUztRQUNOLEtBQUssTUFBTUQsT0FBT3hCLE9BQU9DLElBQUksQ0FBQyxJQUFJLENBQUNWLE9BQU8sRUFBRTtZQUN4QyxrRUFBa0U7WUFDbEUsNEJBQTRCO1lBQzVCLE1BQU1jLFFBQVEsSUFBSSxDQUFDWixHQUFHLENBQUMrQjtZQUN2QixNQUFNbkI7UUFDVjtJQUNKO0lBQ0EsQ0FBQ3FCLE9BQU9DLFFBQVEsQ0FBQyxHQUFHO1FBQ2hCLE9BQU8sSUFBSSxDQUFDTCxPQUFPO0lBQ3ZCO0FBQ0osRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzLmpzPzFkYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVmbGVjdEFkYXB0ZXIgfSBmcm9tIFwiLi9yZWZsZWN0XCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovIGV4cG9ydCBjbGFzcyBSZWFkb25seUhlYWRlcnNFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihcIkhlYWRlcnMgY2Fubm90IGJlIG1vZGlmaWVkLiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9hcGktcmVmZXJlbmNlL2Z1bmN0aW9ucy9oZWFkZXJzXCIpO1xuICAgIH1cbiAgICBzdGF0aWMgY2FsbGFibGUoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWFkb25seUhlYWRlcnNFcnJvcigpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBIZWFkZXJzQWRhcHRlciBleHRlbmRzIEhlYWRlcnMge1xuICAgIGNvbnN0cnVjdG9yKGhlYWRlcnMpe1xuICAgICAgICAvLyBXZSd2ZSBhbHJlYWR5IG92ZXJyaWRkZW4gdGhlIG1ldGhvZHMgdGhhdCB3b3VsZCBiZSBjYWxsZWQsIHNvIHdlJ3JlIGp1c3RcbiAgICAgICAgLy8gY2FsbGluZyB0aGUgc3VwZXIgY29uc3RydWN0b3IgdG8gZW5zdXJlIHRoYXQgdGhlIGluc3RhbmNlb2YgY2hlY2sgd29ya3MuXG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IG5ldyBQcm94eShoZWFkZXJzLCB7XG4gICAgICAgICAgICBnZXQgKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgICAgICAvLyBCZWNhdXNlIHRoaXMgaXMganVzdCBhbiBvYmplY3QsIHdlIGV4cGVjdCB0aGF0IGFsbCBcImdldFwiIG9wZXJhdGlvbnNcbiAgICAgICAgICAgICAgICAvLyBhcmUgZm9yIHByb3BlcnRpZXMuIElmIGl0J3MgYSBcImdldFwiIGZvciBhIHN5bWJvbCwgd2UnbGwganVzdCByZXR1cm5cbiAgICAgICAgICAgICAgICAvLyB0aGUgc3ltYm9sLlxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBsb3dlcmNhc2VkID0gcHJvcC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIC8vIExldCdzIGZpbmQgdGhlIG9yaWdpbmFsIGNhc2luZyBvZiB0aGUga2V5LiBUaGlzIGFzc3VtZXMgdGhhdCB0aGVyZSBpc1xuICAgICAgICAgICAgICAgIC8vIG5vIG1peGVkIGNhc2Uga2V5cyAoZS5nLiBcIkNvbnRlbnQtVHlwZVwiIGFuZCBcImNvbnRlbnQtdHlwZVwiKSBpbiB0aGVcbiAgICAgICAgICAgICAgICAvLyBoZWFkZXJzIG9iamVjdC5cbiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbCA9IE9iamVjdC5rZXlzKGhlYWRlcnMpLmZpbmQoKG8pPT5vLnRvTG93ZXJDYXNlKCkgPT09IGxvd2VyY2FzZWQpO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvcmlnaW5hbCBjYXNpbmcgZG9lc24ndCBleGlzdCwgcmV0dXJuIHVuZGVmaW5lZC5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9yaWdpbmFsID09PSBcInVuZGVmaW5lZFwiKSByZXR1cm47XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBleGlzdHMsIHJldHVybiB0aGUgdmFsdWUuXG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlZmxlY3RBZGFwdGVyLmdldCh0YXJnZXQsIG9yaWdpbmFsLCByZWNlaXZlcik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0ICh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcikge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgbG93ZXJjYXNlZCA9IHByb3AudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBMZXQncyBmaW5kIHRoZSBvcmlnaW5hbCBjYXNpbmcgb2YgdGhlIGtleS4gVGhpcyBhc3N1bWVzIHRoYXQgdGhlcmUgaXNcbiAgICAgICAgICAgICAgICAvLyBubyBtaXhlZCBjYXNlIGtleXMgKGUuZy4gXCJDb250ZW50LVR5cGVcIiBhbmQgXCJjb250ZW50LXR5cGVcIikgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gaGVhZGVycyBvYmplY3QuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWwgPSBPYmplY3Qua2V5cyhoZWFkZXJzKS5maW5kKChvKT0+by50b0xvd2VyQ2FzZSgpID09PSBsb3dlcmNhc2VkKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGRvZXNuJ3QgZXhpc3QsIHVzZSB0aGUgcHJvcCBhcyB0aGUga2V5LlxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlci5zZXQodGFyZ2V0LCBvcmlnaW5hbCA/PyBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhhcyAodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwcm9wID09PSBcInN5bWJvbFwiKSByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuaGFzKHRhcmdldCwgcHJvcCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbG93ZXJjYXNlZCA9IHByb3AudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBMZXQncyBmaW5kIHRoZSBvcmlnaW5hbCBjYXNpbmcgb2YgdGhlIGtleS4gVGhpcyBhc3N1bWVzIHRoYXQgdGhlcmUgaXNcbiAgICAgICAgICAgICAgICAvLyBubyBtaXhlZCBjYXNlIGtleXMgKGUuZy4gXCJDb250ZW50LVR5cGVcIiBhbmQgXCJjb250ZW50LXR5cGVcIikgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gaGVhZGVycyBvYmplY3QuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWwgPSBPYmplY3Qua2V5cyhoZWFkZXJzKS5maW5kKChvKT0+by50b0xvd2VyQ2FzZSgpID09PSBsb3dlcmNhc2VkKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGRvZXNuJ3QgZXhpc3QsIHJldHVybiBmYWxzZS5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9yaWdpbmFsID09PSBcInVuZGVmaW5lZFwiKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBleGlzdHMsIHJldHVybiB0cnVlLlxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlci5oYXModGFyZ2V0LCBvcmlnaW5hbCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsZXRlUHJvcGVydHkgKHRhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzeW1ib2xcIikgcmV0dXJuIFJlZmxlY3RBZGFwdGVyLmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbG93ZXJjYXNlZCA9IHByb3AudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBMZXQncyBmaW5kIHRoZSBvcmlnaW5hbCBjYXNpbmcgb2YgdGhlIGtleS4gVGhpcyBhc3N1bWVzIHRoYXQgdGhlcmUgaXNcbiAgICAgICAgICAgICAgICAvLyBubyBtaXhlZCBjYXNlIGtleXMgKGUuZy4gXCJDb250ZW50LVR5cGVcIiBhbmQgXCJjb250ZW50LXR5cGVcIikgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gaGVhZGVycyBvYmplY3QuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWwgPSBPYmplY3Qua2V5cyhoZWFkZXJzKS5maW5kKChvKT0+by50b0xvd2VyQ2FzZSgpID09PSBsb3dlcmNhc2VkKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGRvZXNuJ3QgZXhpc3QsIHJldHVybiB0cnVlLlxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3JpZ2luYWwgPT09IFwidW5kZWZpbmVkXCIpIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvcmlnaW5hbCBjYXNpbmcgZXhpc3RzLCBkZWxldGUgdGhlIHByb3BlcnR5LlxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlci5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIG9yaWdpbmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBTZWFscyBhIEhlYWRlcnMgaW5zdGFuY2UgdG8gcHJldmVudCBtb2RpZmljYXRpb24gYnkgdGhyb3dpbmcgYW4gZXJyb3Igd2hlblxuICAgKiBhbnkgbXV0YXRpbmcgbWV0aG9kIGlzIGNhbGxlZC5cbiAgICovIHN0YXRpYyBzZWFsKGhlYWRlcnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm94eShoZWFkZXJzLCB7XG4gICAgICAgICAgICBnZXQgKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2gocHJvcCl7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJhcHBlbmRcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcImRlbGV0ZVwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwic2V0XCI6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhZG9ubHlIZWFkZXJzRXJyb3IuY2FsbGFibGU7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBNZXJnZXMgYSBoZWFkZXIgdmFsdWUgaW50byBhIHN0cmluZy4gVGhpcyBzdG9yZXMgbXVsdGlwbGUgdmFsdWVzIGFzIGFuXG4gICAqIGFycmF5LCBzbyB3ZSBuZWVkIHRvIG1lcmdlIHRoZW0gaW50byBhIHN0cmluZy5cbiAgICpcbiAgICogQHBhcmFtIHZhbHVlIGEgaGVhZGVyIHZhbHVlXG4gICAqIEByZXR1cm5zIGEgbWVyZ2VkIGhlYWRlciB2YWx1ZSAoYSBzdHJpbmcpXG4gICAqLyBtZXJnZSh2YWx1ZSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHJldHVybiB2YWx1ZS5qb2luKFwiLCBcIik7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAqIENyZWF0ZXMgYSBIZWFkZXJzIGluc3RhbmNlIGZyb20gYSBwbGFpbiBvYmplY3Qgb3IgYSBIZWFkZXJzIGluc3RhbmNlLlxuICAgKlxuICAgKiBAcGFyYW0gaGVhZGVycyBhIHBsYWluIG9iamVjdCBvciBhIEhlYWRlcnMgaW5zdGFuY2VcbiAgICogQHJldHVybnMgYSBoZWFkZXJzIGluc3RhbmNlXG4gICAqLyBzdGF0aWMgZnJvbShoZWFkZXJzKSB7XG4gICAgICAgIGlmIChoZWFkZXJzIGluc3RhbmNlb2YgSGVhZGVycykgcmV0dXJuIGhlYWRlcnM7XG4gICAgICAgIHJldHVybiBuZXcgSGVhZGVyc0FkYXB0ZXIoaGVhZGVycyk7XG4gICAgfVxuICAgIGFwcGVuZChuYW1lLCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHRoaXMuaGVhZGVyc1tuYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiBleGlzdGluZyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdGhpcy5oZWFkZXJzW25hbWVdID0gW1xuICAgICAgICAgICAgICAgIGV4aXN0aW5nLFxuICAgICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICBdO1xuICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmcpKSB7XG4gICAgICAgICAgICBleGlzdGluZy5wdXNoKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyc1tuYW1lXSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmhlYWRlcnNbbmFtZV07XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5oZWFkZXJzW25hbWVdO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSByZXR1cm4gdGhpcy5tZXJnZSh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBoYXMobmFtZSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHRoaXMuaGVhZGVyc1tuYW1lXSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICB9XG4gICAgc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuaGVhZGVyc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcpIHtcbiAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIHRoaXMuZW50cmllcygpKXtcbiAgICAgICAgICAgIGNhbGxiYWNrZm4uY2FsbCh0aGlzQXJnLCB2YWx1ZSwgbmFtZSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgKmVudHJpZXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVycykpe1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgLy8gV2UgYXNzZXJ0IGhlcmUgdGhhdCB0aGlzIGlzIGEgc3RyaW5nIGJlY2F1c2Ugd2UgZ290IGl0IGZyb20gdGhlXG4gICAgICAgICAgICAvLyBPYmplY3Qua2V5cygpIGNhbGwgYWJvdmUuXG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0KG5hbWUpO1xuICAgICAgICAgICAgeWllbGQgW1xuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICB9XG4gICAgKmtleXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVycykpe1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgeWllbGQgbmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAqdmFsdWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnMpKXtcbiAgICAgICAgICAgIC8vIFdlIGFzc2VydCBoZXJlIHRoYXQgdGhpcyBpcyBhIHN0cmluZyBiZWNhdXNlIHdlIGdvdCBpdCBmcm9tIHRoZVxuICAgICAgICAgICAgLy8gT2JqZWN0LmtleXMoKSBjYWxsIGFib3ZlLlxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldChrZXkpO1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIlJlZmxlY3RBZGFwdGVyIiwiUmVhZG9ubHlIZWFkZXJzRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiY2FsbGFibGUiLCJIZWFkZXJzQWRhcHRlciIsIkhlYWRlcnMiLCJoZWFkZXJzIiwiUHJveHkiLCJnZXQiLCJ0YXJnZXQiLCJwcm9wIiwicmVjZWl2ZXIiLCJsb3dlcmNhc2VkIiwidG9Mb3dlckNhc2UiLCJvcmlnaW5hbCIsIk9iamVjdCIsImtleXMiLCJmaW5kIiwibyIsInNldCIsInZhbHVlIiwiaGFzIiwiZGVsZXRlUHJvcGVydHkiLCJzZWFsIiwibWVyZ2UiLCJBcnJheSIsImlzQXJyYXkiLCJqb2luIiwiZnJvbSIsImFwcGVuZCIsIm5hbWUiLCJleGlzdGluZyIsInB1c2giLCJkZWxldGUiLCJmb3JFYWNoIiwiY2FsbGJhY2tmbiIsInRoaXNBcmciLCJlbnRyaWVzIiwiY2FsbCIsImtleSIsInZhbHVlcyIsIlN5bWJvbCIsIml0ZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectAdapter: () => (/* binding */ ReflectAdapter)\n/* harmony export */ });\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === \"function\") {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n} //# sourceMappingURL=reflect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQTtJQUNULE9BQU9DLElBQUlDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUU7UUFDL0IsTUFBTUMsUUFBUUMsUUFBUUwsR0FBRyxDQUFDQyxRQUFRQyxNQUFNQztRQUN4QyxJQUFJLE9BQU9DLFVBQVUsWUFBWTtZQUM3QixPQUFPQSxNQUFNRSxJQUFJLENBQUNMO1FBQ3RCO1FBQ0EsT0FBT0c7SUFDWDtJQUNBLE9BQU9HLElBQUlOLE1BQU0sRUFBRUMsSUFBSSxFQUFFRSxLQUFLLEVBQUVELFFBQVEsRUFBRTtRQUN0QyxPQUFPRSxRQUFRRSxHQUFHLENBQUNOLFFBQVFDLE1BQU1FLE9BQU9EO0lBQzVDO0lBQ0EsT0FBT0ssSUFBSVAsTUFBTSxFQUFFQyxJQUFJLEVBQUU7UUFDckIsT0FBT0csUUFBUUcsR0FBRyxDQUFDUCxRQUFRQztJQUMvQjtJQUNBLE9BQU9PLGVBQWVSLE1BQU0sRUFBRUMsSUFBSSxFQUFFO1FBQ2hDLE9BQU9HLFFBQVFJLGNBQWMsQ0FBQ1IsUUFBUUM7SUFDMUM7QUFDSixFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL3JlZmxlY3QuanM/MjA2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUmVmbGVjdEFkYXB0ZXIge1xuICAgIHN0YXRpYyBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5iaW5kKHRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBzdGF0aWMgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgfVxuICAgIHN0YXRpYyBoYXModGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3ApO1xuICAgIH1cbiAgICBzdGF0aWMgZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWZsZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJSZWZsZWN0QWRhcHRlciIsImdldCIsInRhcmdldCIsInByb3AiLCJyZWNlaXZlciIsInZhbHVlIiwiUmVmbGVjdCIsImJpbmQiLCJzZXQiLCJoYXMiLCJkZWxldGVQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutableRequestCookiesAdapter: () => (/* binding */ MutableRequestCookiesAdapter),\n/* harmony export */   ReadonlyRequestCookiesError: () => (/* binding */ ReadonlyRequestCookiesError),\n/* harmony export */   RequestCookiesAdapter: () => (/* binding */ RequestCookiesAdapter),\n/* harmony export */   appendMutableCookies: () => (/* binding */ appendMutableCookies),\n/* harmony export */   getModifiedCookieValues: () => (/* binding */ getModifiedCookieValues)\n/* harmony export */ });\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n\n/**\n * @internal\n */ class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"clear\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            var _fetch___nextGetStaticStore;\n            // TODO-APP: change method of getting staticGenerationAsyncStore\n            const staticGenerationAsyncStore = fetch.__nextGetStaticStore == null ? void 0 : (_fetch___nextGetStaticStore = fetch.__nextGetStaticStore.call(fetch)) == null ? void 0 : _fetch___nextGetStaticStore.getStore();\n            if (staticGenerationAsyncStore) {\n                staticGenerationAsyncStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        return new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case \"delete\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case \"set\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                return target.set(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n} //# sourceMappingURL=request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/cookies.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookies),\n/* harmony export */   ResponseCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__);\n //# sourceMappingURL=cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkYsQ0FFM0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy5qcz84YzkzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFJlcXVlc3RDb29raWVzLCBSZXNwb25zZUNvb2tpZXMgfSBmcm9tIFwibmV4dC9kaXN0L2NvbXBpbGVkL0BlZGdlLXJ1bnRpbWUvY29va2llc1wiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb29raWVzLmpzLm1hcCJdLCJuYW1lcyI6WyJSZXF1ZXN0Q29va2llcyIsIlJlc3BvbnNlQ29va2llcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextFetchEvent: () => (/* binding */ NextFetchEvent),\n/* harmony export */   waitUntilSymbol: () => (/* binding */ waitUntilSymbol)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){\n        this[waitUntilSymbol] = [];\n        this[passThroughSymbol] = false;\n    }\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nclass NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n} //# sourceMappingURL=fetch-event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUMsTUFBTUMsaUJBQWlCQyxPQUFPO0FBQzlCLE1BQU1DLG9CQUFvQkQsT0FBTztBQUMxQixNQUFNRSxrQkFBa0JGLE9BQU8sYUFBYTtBQUNuRCxNQUFNRztJQUNGLHFFQUFxRTtJQUNyRUMsWUFBWUMsUUFBUSxDQUFDO1FBQ2pCLElBQUksQ0FBQ0gsZ0JBQWdCLEdBQUcsRUFBRTtRQUMxQixJQUFJLENBQUNELGtCQUFrQixHQUFHO0lBQzlCO0lBQ0FLLFlBQVlDLFFBQVEsRUFBRTtRQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDUixlQUFlLEVBQUU7WUFDdkIsSUFBSSxDQUFDQSxlQUFlLEdBQUdTLFFBQVFDLE9BQU8sQ0FBQ0Y7UUFDM0M7SUFDSjtJQUNBRyx5QkFBeUI7UUFDckIsSUFBSSxDQUFDVCxrQkFBa0IsR0FBRztJQUM5QjtJQUNBVSxVQUFVQyxPQUFPLEVBQUU7UUFDZixJQUFJLENBQUNWLGdCQUFnQixDQUFDVyxJQUFJLENBQUNEO0lBQy9CO0FBQ0o7QUFDTyxNQUFNRSx1QkFBdUJYO0lBQ2hDQyxZQUFZVyxNQUFNLENBQUM7UUFDZixLQUFLLENBQUNBLE9BQU9DLE9BQU87UUFDcEIsSUFBSSxDQUFDQyxVQUFVLEdBQUdGLE9BQU9HLElBQUk7SUFDakM7SUFDQTs7OztHQUlELEdBQUcsSUFBSUYsVUFBVTtRQUNaLE1BQU0sSUFBSWxCLHNEQUFrQkEsQ0FBQztZQUN6Qm9CLE1BQU0sSUFBSSxDQUFDRCxVQUFVO1FBQ3pCO0lBQ0o7SUFDQTs7OztHQUlELEdBQUdYLGNBQWM7UUFDWixNQUFNLElBQUlSLHNEQUFrQkEsQ0FBQztZQUN6Qm9CLE1BQU0sSUFBSSxDQUFDRCxVQUFVO1FBQ3pCO0lBQ0o7QUFDSixFQUVBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2ZldGNoLWV2ZW50LmpzPzkyYmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZVNpZ25hdHVyZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yXCI7XG5jb25zdCByZXNwb25zZVN5bWJvbCA9IFN5bWJvbChcInJlc3BvbnNlXCIpO1xuY29uc3QgcGFzc1Rocm91Z2hTeW1ib2wgPSBTeW1ib2woXCJwYXNzVGhyb3VnaFwiKTtcbmV4cG9ydCBjb25zdCB3YWl0VW50aWxTeW1ib2wgPSBTeW1ib2woXCJ3YWl0VW50aWxcIik7XG5jbGFzcyBGZXRjaEV2ZW50IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZWxlc3MtY29uc3RydWN0b3JcbiAgICBjb25zdHJ1Y3RvcihfcmVxdWVzdCl7XG4gICAgICAgIHRoaXNbd2FpdFVudGlsU3ltYm9sXSA9IFtdO1xuICAgICAgICB0aGlzW3Bhc3NUaHJvdWdoU3ltYm9sXSA9IGZhbHNlO1xuICAgIH1cbiAgICByZXNwb25kV2l0aChyZXNwb25zZSkge1xuICAgICAgICBpZiAoIXRoaXNbcmVzcG9uc2VTeW1ib2xdKSB7XG4gICAgICAgICAgICB0aGlzW3Jlc3BvbnNlU3ltYm9sXSA9IFByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGFzc1Rocm91Z2hPbkV4Y2VwdGlvbigpIHtcbiAgICAgICAgdGhpc1twYXNzVGhyb3VnaFN5bWJvbF0gPSB0cnVlO1xuICAgIH1cbiAgICB3YWl0VW50aWwocHJvbWlzZSkge1xuICAgICAgICB0aGlzW3dhaXRVbnRpbFN5bWJvbF0ucHVzaChwcm9taXNlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTmV4dEZldGNoRXZlbnQgZXh0ZW5kcyBGZXRjaEV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbXMpe1xuICAgICAgICBzdXBlcihwYXJhbXMucmVxdWVzdCk7XG4gICAgICAgIHRoaXMuc291cmNlUGFnZSA9IHBhcmFtcy5wYWdlO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhlIGByZXF1ZXN0YCBpcyBub3cgdGhlIGZpcnN0IHBhcmFtZXRlciBhbmQgdGhlIEFQSSBpcyBub3cgYXN5bmMuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyBnZXQgcmVxdWVzdCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2luZyBgcmVzcG9uZFdpdGhgIGlzIG5vIGxvbmdlciBuZWVkZWQuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyByZXNwb25kV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC1ldmVudC5qcy5tYXAiXSwibmFtZXMiOlsiUGFnZVNpZ25hdHVyZUVycm9yIiwicmVzcG9uc2VTeW1ib2wiLCJTeW1ib2wiLCJwYXNzVGhyb3VnaFN5bWJvbCIsIndhaXRVbnRpbFN5bWJvbCIsIkZldGNoRXZlbnQiLCJjb25zdHJ1Y3RvciIsIl9yZXF1ZXN0IiwicmVzcG9uZFdpdGgiLCJyZXNwb25zZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicGFzc1Rocm91Z2hPbkV4Y2VwdGlvbiIsIndhaXRVbnRpbCIsInByb21pc2UiLCJwdXNoIiwiTmV4dEZldGNoRXZlbnQiLCJwYXJhbXMiLCJyZXF1ZXN0Iiwic291cmNlUGFnZSIsInBhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/request.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNALS: () => (/* binding */ INTERNALS),\n/* harmony export */   NextRequest: () => (/* binding */ NextRequest)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\nclass NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(url, {\n            headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            nextUrl,\n            url:  false ? 0 : nextUrl.toString()\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n} //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUM0QjtBQUNOO0FBQ2pCO0FBQ3BDLE1BQU1NLFlBQVlDLE9BQU8sb0JBQW9CO0FBQzdDLE1BQU1DLG9CQUFvQkM7SUFDN0JDLFlBQVlDLEtBQUssRUFBRUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUN6QixNQUFNQyxNQUFNLE9BQU9GLFVBQVUsWUFBWSxTQUFTQSxRQUFRQSxNQUFNRSxHQUFHLEdBQUdDLE9BQU9IO1FBQzdFVCxtREFBV0EsQ0FBQ1c7UUFDWixJQUFJRixpQkFBaUJGLFNBQVMsS0FBSyxDQUFDRSxPQUFPQzthQUN0QyxLQUFLLENBQUNDLEtBQUtEO1FBQ2hCLE1BQU1HLFVBQVUsSUFBSWYsOENBQU9BLENBQUNhLEtBQUs7WUFDN0JHLFNBQVNmLGlFQUF5QkEsQ0FBQyxJQUFJLENBQUNlLE9BQU87WUFDL0NDLFlBQVlMLEtBQUtLLFVBQVU7UUFDL0I7UUFDQSxJQUFJLENBQUNYLFVBQVUsR0FBRztZQUNkWSxTQUFTLElBQUliLG9EQUFjQSxDQUFDLElBQUksQ0FBQ1csT0FBTztZQUN4Q0csS0FBS1AsS0FBS08sR0FBRyxJQUFJLENBQUM7WUFDbEJDLElBQUlSLEtBQUtRLEVBQUU7WUFDWEw7WUFDQUYsS0FBS1EsTUFBOEMsR0FBR1IsQ0FBR0EsR0FBR0UsUUFBUVMsUUFBUTtRQUNoRjtJQUNKO0lBQ0EsQ0FBQ2pCLE9BQU9rQixHQUFHLENBQUMsK0JBQStCLEdBQUc7UUFDMUMsT0FBTztZQUNIUCxTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUNyQkMsS0FBSyxJQUFJLENBQUNBLEdBQUc7WUFDYkMsSUFBSSxJQUFJLENBQUNBLEVBQUU7WUFDWEwsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckJGLEtBQUssSUFBSSxDQUFDQSxHQUFHO1lBQ2Isa0NBQWtDO1lBQ2xDYSxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkMsT0FBTyxJQUFJLENBQUNBLEtBQUs7WUFDakJDLGFBQWEsSUFBSSxDQUFDQSxXQUFXO1lBQzdCQyxhQUFhLElBQUksQ0FBQ0EsV0FBVztZQUM3QmIsU0FBU2MsT0FBT0MsV0FBVyxDQUFDLElBQUksQ0FBQ2YsT0FBTztZQUN4Q2dCLFdBQVcsSUFBSSxDQUFDQSxTQUFTO1lBQ3pCQyxXQUFXLElBQUksQ0FBQ0EsU0FBUztZQUN6QkMsUUFBUSxJQUFJLENBQUNBLE1BQU07WUFDbkJDLE1BQU0sSUFBSSxDQUFDQSxJQUFJO1lBQ2ZDLFVBQVUsSUFBSSxDQUFDQSxRQUFRO1lBQ3ZCQyxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkMsZ0JBQWdCLElBQUksQ0FBQ0EsY0FBYztZQUNuQ0MsUUFBUSxJQUFJLENBQUNBLE1BQU07UUFDdkI7SUFDSjtJQUNBLElBQUlyQixVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUNaLFVBQVUsQ0FBQ1ksT0FBTztJQUNsQztJQUNBLElBQUlDLE1BQU07UUFDTixPQUFPLElBQUksQ0FBQ2IsVUFBVSxDQUFDYSxHQUFHO0lBQzlCO0lBQ0EsSUFBSUMsS0FBSztRQUNMLE9BQU8sSUFBSSxDQUFDZCxVQUFVLENBQUNjLEVBQUU7SUFDN0I7SUFDQSxJQUFJTCxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUNULFVBQVUsQ0FBQ1MsT0FBTztJQUNsQztJQUNBOzs7O0dBSUQsR0FBRyxJQUFJeUIsT0FBTztRQUNULE1BQU0sSUFBSXBDLG9EQUFnQkE7SUFDOUI7SUFDQTs7OztHQUlELEdBQUcsSUFBSXFDLEtBQUs7UUFDUCxNQUFNLElBQUl0QyxrREFBY0E7SUFDNUI7SUFDQSxJQUFJVSxNQUFNO1FBQ04sT0FBTyxJQUFJLENBQUNQLFVBQVUsQ0FBQ08sR0FBRztJQUM5QjtBQUNKLEVBRUEsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVxdWVzdC5qcz8xNWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRVUkwgfSBmcm9tIFwiLi4vbmV4dC11cmxcIjtcbmltcG9ydCB7IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMsIHZhbGlkYXRlVVJMIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5pbXBvcnQgeyBSZW1vdmVkVUFFcnJvciwgUmVtb3ZlZFBhZ2VFcnJvciB9IGZyb20gXCIuLi9lcnJvclwiO1xuaW1wb3J0IHsgUmVxdWVzdENvb2tpZXMgfSBmcm9tIFwiLi9jb29raWVzXCI7XG5leHBvcnQgY29uc3QgSU5URVJOQUxTID0gU3ltYm9sKFwiaW50ZXJuYWwgcmVxdWVzdFwiKTtcbmV4cG9ydCBjbGFzcyBOZXh0UmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuICAgIGNvbnN0cnVjdG9yKGlucHV0LCBpbml0ID0ge30pe1xuICAgICAgICBjb25zdCB1cmwgPSB0eXBlb2YgaW5wdXQgIT09IFwic3RyaW5nXCIgJiYgXCJ1cmxcIiBpbiBpbnB1dCA/IGlucHV0LnVybCA6IFN0cmluZyhpbnB1dCk7XG4gICAgICAgIHZhbGlkYXRlVVJMKHVybCk7XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFJlcXVlc3QpIHN1cGVyKGlucHV0LCBpbml0KTtcbiAgICAgICAgZWxzZSBzdXBlcih1cmwsIGluaXQpO1xuICAgICAgICBjb25zdCBuZXh0VXJsID0gbmV3IE5leHRVUkwodXJsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBuZXh0Q29uZmlnOiBpbml0Lm5leHRDb25maWdcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXNbSU5URVJOQUxTXSA9IHtcbiAgICAgICAgICAgIGNvb2tpZXM6IG5ldyBSZXF1ZXN0Q29va2llcyh0aGlzLmhlYWRlcnMpLFxuICAgICAgICAgICAgZ2VvOiBpbml0LmdlbyB8fCB7fSxcbiAgICAgICAgICAgIGlwOiBpbml0LmlwLFxuICAgICAgICAgICAgbmV4dFVybCxcbiAgICAgICAgICAgIHVybDogcHJvY2Vzcy5lbnYuX19ORVhUX05PX01JRERMRVdBUkVfVVJMX05PUk1BTElaRSA/IHVybCA6IG5leHRVcmwudG9TdHJpbmcoKVxuICAgICAgICB9O1xuICAgIH1cbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXG4gICAgICAgICAgICBnZW86IHRoaXMuZ2VvLFxuICAgICAgICAgICAgaXA6IHRoaXMuaXAsXG4gICAgICAgICAgICBuZXh0VXJsOiB0aGlzLm5leHRVcmwsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgLy8gcmVzdCBvZiBwcm9wcyBjb21lIGZyb20gUmVxdWVzdFxuICAgICAgICAgICAgYm9keVVzZWQ6IHRoaXMuYm9keVVzZWQsXG4gICAgICAgICAgICBjYWNoZTogdGhpcy5jYWNoZSxcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzOiB0aGlzLmNyZWRlbnRpYWxzLFxuICAgICAgICAgICAgZGVzdGluYXRpb246IHRoaXMuZGVzdGluYXRpb24sXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy5oZWFkZXJzKSxcbiAgICAgICAgICAgIGludGVncml0eTogdGhpcy5pbnRlZ3JpdHksXG4gICAgICAgICAgICBrZWVwYWxpdmU6IHRoaXMua2VlcGFsaXZlLFxuICAgICAgICAgICAgbWV0aG9kOiB0aGlzLm1ldGhvZCxcbiAgICAgICAgICAgIG1vZGU6IHRoaXMubW9kZSxcbiAgICAgICAgICAgIHJlZGlyZWN0OiB0aGlzLnJlZGlyZWN0LFxuICAgICAgICAgICAgcmVmZXJyZXI6IHRoaXMucmVmZXJyZXIsXG4gICAgICAgICAgICByZWZlcnJlclBvbGljeTogdGhpcy5yZWZlcnJlclBvbGljeSxcbiAgICAgICAgICAgIHNpZ25hbDogdGhpcy5zaWduYWxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGNvb2tpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uY29va2llcztcbiAgICB9XG4gICAgZ2V0IGdlbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5nZW87XG4gICAgfVxuICAgIGdldCBpcCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5pcDtcbiAgICB9XG4gICAgZ2V0IG5leHRVcmwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10ubmV4dFVybDtcbiAgICB9XG4gICAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqIGBwYWdlYCBoYXMgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBgVVJMUGF0dGVybmAuXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcbiAgICovIGdldCBwYWdlKCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVtb3ZlZFBhZ2VFcnJvcigpO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICogYHVhYCBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XG4gICAqLyBnZXQgdWEoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZW1vdmVkVUFFcnJvcigpO1xuICAgIH1cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnVybDtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk5leHRVUkwiLCJ0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzIiwidmFsaWRhdGVVUkwiLCJSZW1vdmVkVUFFcnJvciIsIlJlbW92ZWRQYWdlRXJyb3IiLCJSZXF1ZXN0Q29va2llcyIsIklOVEVSTkFMUyIsIlN5bWJvbCIsIk5leHRSZXF1ZXN0IiwiUmVxdWVzdCIsImNvbnN0cnVjdG9yIiwiaW5wdXQiLCJpbml0IiwidXJsIiwiU3RyaW5nIiwibmV4dFVybCIsImhlYWRlcnMiLCJuZXh0Q29uZmlnIiwiY29va2llcyIsImdlbyIsImlwIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUiLCJ0b1N0cmluZyIsImZvciIsImJvZHlVc2VkIiwiY2FjaGUiLCJjcmVkZW50aWFscyIsImRlc3RpbmF0aW9uIiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJpbnRlZ3JpdHkiLCJrZWVwYWxpdmUiLCJtZXRob2QiLCJtb2RlIiwicmVkaXJlY3QiLCJyZWZlcnJlciIsInJlZmVycmVyUG9saWN5Iiwic2lnbmFsIiwicGFnZSIsInVhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/response.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextResponse: () => (/* binding */ NextResponse)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nclass NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_2__.ResponseCookies(this.headers),\n            url: init.url ? new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(init.url, {\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n} //# sourceMappingURL=response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeOutgoingHttpHeaders: () => (/* binding */ fromNodeOutgoingHttpHeaders),\n/* harmony export */   splitCookiesString: () => (/* binding */ splitCookiesString),\n/* harmony export */   toNodeOutgoingHttpHeaders: () => (/* binding */ toNodeOutgoingHttpHeaders),\n/* harmony export */   validateURL: () => (/* binding */ validateURL)\n/* harmony export */ });\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRouterContext: () => (/* binding */ AppRouterContext),\n/* harmony export */   GlobalLayoutRouterContext: () => (/* binding */ GlobalLayoutRouterContext),\n/* harmony export */   LayoutRouterContext: () => (/* binding */ LayoutRouterContext),\n/* harmony export */   MissingSlotContext: () => (/* binding */ MissingSlotContext),\n/* harmony export */   TemplateContext: () => (/* binding */ TemplateContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nconst AppRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst LayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst GlobalLayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst TemplateContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nif (true) {\n    AppRouterContext.displayName = \"AppRouterContext\";\n    LayoutRouterContext.displayName = \"LayoutRouterContext\";\n    GlobalLayoutRouterContext.displayName = \"GlobalLayoutRouterContext\";\n    TemplateContext.displayName = \"TemplateContext\";\n}\nconst MissingSlotContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(new Set()); //# sourceMappingURL=app-router-context.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBRTBCO0FBQ25CLE1BQU1DLGlDQUFtQkQsMERBQW1CLENBQUMsTUFBTTtBQUNuRCxNQUFNRyxvQ0FBc0JILDBEQUFtQixDQUFDLE1BQU07QUFDdEQsTUFBTUksMENBQTRCSiwwREFBbUIsQ0FBQyxNQUFNO0FBQzVELE1BQU1LLGdDQUFrQkwsMERBQW1CLENBQUMsTUFBTTtBQUN6RCxJQUFJTSxJQUFxQyxFQUFFO0lBQ3ZDTCxpQkFBaUJNLFdBQVcsR0FBRztJQUMvQkosb0JBQW9CSSxXQUFXLEdBQUc7SUFDbENILDBCQUEwQkcsV0FBVyxHQUFHO0lBQ3hDRixnQkFBZ0JFLFdBQVcsR0FBRztBQUNsQztBQUNPLE1BQU1DLG1DQUFxQlIsMERBQW1CLENBQUMsSUFBSVMsT0FBTyxDQUVqRSw2REFBNkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanM/Y2I3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGNvbnN0IEFwcFJvdXRlckNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGNvbnN0IExheW91dFJvdXRlckNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGNvbnN0IEdsb2JhbExheW91dFJvdXRlckNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGNvbnN0IFRlbXBsYXRlQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQXBwUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiQXBwUm91dGVyQ29udGV4dFwiO1xuICAgIExheW91dFJvdXRlckNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkxheW91dFJvdXRlckNvbnRleHRcIjtcbiAgICBHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0XCI7XG4gICAgVGVtcGxhdGVDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJUZW1wbGF0ZUNvbnRleHRcIjtcbn1cbmV4cG9ydCBjb25zdCBNaXNzaW5nU2xvdENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG5ldyBTZXQoKSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJBcHBSb3V0ZXJDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIkxheW91dFJvdXRlckNvbnRleHQiLCJHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0IiwiVGVtcGxhdGVDb250ZXh0IiwicHJvY2VzcyIsImRpc3BsYXlOYW1lIiwiTWlzc2luZ1Nsb3RDb250ZXh0IiwiU2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/constants.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_BUILD_MANIFEST: () => (/* binding */ APP_BUILD_MANIFEST),\n/* harmony export */   APP_CLIENT_INTERNALS: () => (/* binding */ APP_CLIENT_INTERNALS),\n/* harmony export */   APP_PATHS_MANIFEST: () => (/* binding */ APP_PATHS_MANIFEST),\n/* harmony export */   APP_PATH_ROUTES_MANIFEST: () => (/* binding */ APP_PATH_ROUTES_MANIFEST),\n/* harmony export */   BARREL_OPTIMIZATION_PREFIX: () => (/* binding */ BARREL_OPTIMIZATION_PREFIX),\n/* harmony export */   BLOCKED_PAGES: () => (/* binding */ BLOCKED_PAGES),\n/* harmony export */   BUILD_ID_FILE: () => (/* binding */ BUILD_ID_FILE),\n/* harmony export */   BUILD_MANIFEST: () => (/* binding */ BUILD_MANIFEST),\n/* harmony export */   CLIENT_PUBLIC_FILES_PATH: () => (/* binding */ CLIENT_PUBLIC_FILES_PATH),\n/* harmony export */   CLIENT_REFERENCE_MANIFEST: () => (/* binding */ CLIENT_REFERENCE_MANIFEST),\n/* harmony export */   CLIENT_STATIC_FILES_PATH: () => (/* binding */ CLIENT_STATIC_FILES_PATH),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_AMP: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_AMP),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_MAIN: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_MAIN),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_MAIN_APP: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_MAIN_APP),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_POLYFILLS: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_POLYFILLS),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_WEBPACK: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_WEBPACK),\n/* harmony export */   COMPILER_INDEXES: () => (/* binding */ COMPILER_INDEXES),\n/* harmony export */   COMPILER_NAMES: () => (/* binding */ COMPILER_NAMES),\n/* harmony export */   CONFIG_FILES: () => (/* binding */ CONFIG_FILES),\n/* harmony export */   DEFAULT_SANS_SERIF_FONT: () => (/* binding */ DEFAULT_SANS_SERIF_FONT),\n/* harmony export */   DEFAULT_SERIF_FONT: () => (/* binding */ DEFAULT_SERIF_FONT),\n/* harmony export */   DEV_CLIENT_PAGES_MANIFEST: () => (/* binding */ DEV_CLIENT_PAGES_MANIFEST),\n/* harmony export */   DEV_MIDDLEWARE_MANIFEST: () => (/* binding */ DEV_MIDDLEWARE_MANIFEST),\n/* harmony export */   EDGE_RUNTIME_WEBPACK: () => (/* binding */ EDGE_RUNTIME_WEBPACK),\n/* harmony export */   EDGE_UNSUPPORTED_NODE_APIS: () => (/* binding */ EDGE_UNSUPPORTED_NODE_APIS),\n/* harmony export */   EXPORT_DETAIL: () => (/* binding */ EXPORT_DETAIL),\n/* harmony export */   EXPORT_MARKER: () => (/* binding */ EXPORT_MARKER),\n/* harmony export */   FONT_MANIFEST: () => (/* binding */ FONT_MANIFEST),\n/* harmony export */   FUNCTIONS_CONFIG_MANIFEST: () => (/* binding */ FUNCTIONS_CONFIG_MANIFEST),\n/* harmony export */   GOOGLE_FONT_PROVIDER: () => (/* binding */ GOOGLE_FONT_PROVIDER),\n/* harmony export */   IMAGES_MANIFEST: () => (/* binding */ IMAGES_MANIFEST),\n/* harmony export */   INTERNAL_HEADERS: () => (/* binding */ INTERNAL_HEADERS),\n/* harmony export */   MIDDLEWARE_BUILD_MANIFEST: () => (/* binding */ MIDDLEWARE_BUILD_MANIFEST),\n/* harmony export */   MIDDLEWARE_MANIFEST: () => (/* binding */ MIDDLEWARE_MANIFEST),\n/* harmony export */   MIDDLEWARE_REACT_LOADABLE_MANIFEST: () => (/* binding */ MIDDLEWARE_REACT_LOADABLE_MANIFEST),\n/* harmony export */   MODERN_BROWSERSLIST_TARGET: () => (/* reexport default from dynamic */ _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   NEXT_BUILTIN_DOCUMENT: () => (/* binding */ NEXT_BUILTIN_DOCUMENT),\n/* harmony export */   NEXT_FONT_MANIFEST: () => (/* binding */ NEXT_FONT_MANIFEST),\n/* harmony export */   OPTIMIZED_FONT_PROVIDERS: () => (/* binding */ OPTIMIZED_FONT_PROVIDERS),\n/* harmony export */   PAGES_MANIFEST: () => (/* binding */ PAGES_MANIFEST),\n/* harmony export */   PHASE_DEVELOPMENT_SERVER: () => (/* binding */ PHASE_DEVELOPMENT_SERVER),\n/* harmony export */   PHASE_EXPORT: () => (/* binding */ PHASE_EXPORT),\n/* harmony export */   PHASE_INFO: () => (/* binding */ PHASE_INFO),\n/* harmony export */   PHASE_PRODUCTION_BUILD: () => (/* binding */ PHASE_PRODUCTION_BUILD),\n/* harmony export */   PHASE_PRODUCTION_SERVER: () => (/* binding */ PHASE_PRODUCTION_SERVER),\n/* harmony export */   PHASE_TEST: () => (/* binding */ PHASE_TEST),\n/* harmony export */   PRERENDER_MANIFEST: () => (/* binding */ PRERENDER_MANIFEST),\n/* harmony export */   REACT_LOADABLE_MANIFEST: () => (/* binding */ REACT_LOADABLE_MANIFEST),\n/* harmony export */   ROUTES_MANIFEST: () => (/* binding */ ROUTES_MANIFEST),\n/* harmony export */   RSC_MODULE_TYPES: () => (/* binding */ RSC_MODULE_TYPES),\n/* harmony export */   SERVER_DIRECTORY: () => (/* binding */ SERVER_DIRECTORY),\n/* harmony export */   SERVER_FILES_MANIFEST: () => (/* binding */ SERVER_FILES_MANIFEST),\n/* harmony export */   SERVER_PROPS_ID: () => (/* binding */ SERVER_PROPS_ID),\n/* harmony export */   SERVER_REFERENCE_MANIFEST: () => (/* binding */ SERVER_REFERENCE_MANIFEST),\n/* harmony export */   STATIC_PROPS_ID: () => (/* binding */ STATIC_PROPS_ID),\n/* harmony export */   STATIC_STATUS_PAGES: () => (/* binding */ STATIC_STATUS_PAGES),\n/* harmony export */   STRING_LITERAL_DROP_BUNDLE: () => (/* binding */ STRING_LITERAL_DROP_BUNDLE),\n/* harmony export */   SUBRESOURCE_INTEGRITY_MANIFEST: () => (/* binding */ SUBRESOURCE_INTEGRITY_MANIFEST),\n/* harmony export */   SYSTEM_ENTRYPOINTS: () => (/* binding */ SYSTEM_ENTRYPOINTS),\n/* harmony export */   TRACE_OUTPUT_VERSION: () => (/* binding */ TRACE_OUTPUT_VERSION),\n/* harmony export */   TURBO_TRACE_DEFAULT_MEMORY_LIMIT: () => (/* binding */ TURBO_TRACE_DEFAULT_MEMORY_LIMIT)\n/* harmony export */ });\n/* harmony import */ var _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modern-browserslist-target */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js\");\n/* harmony import */ var _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst COMPILER_NAMES = {\n    client: \"client\",\n    server: \"server\",\n    edgeServer: \"edge-server\"\n};\n/**\n * Headers that are set by the Next.js server and should be stripped from the\n * request headers going to the user's application.\n */ const INTERNAL_HEADERS = [\n    \"x-invoke-error\",\n    \"x-invoke-output\",\n    \"x-invoke-path\",\n    \"x-invoke-query\",\n    \"x-invoke-status\",\n    \"x-middleware-invoke\"\n];\nconst COMPILER_INDEXES = {\n    [COMPILER_NAMES.client]: 0,\n    [COMPILER_NAMES.server]: 1,\n    [COMPILER_NAMES.edgeServer]: 2\n};\nconst PHASE_EXPORT = \"phase-export\";\nconst PHASE_PRODUCTION_BUILD = \"phase-production-build\";\nconst PHASE_PRODUCTION_SERVER = \"phase-production-server\";\nconst PHASE_DEVELOPMENT_SERVER = \"phase-development-server\";\nconst PHASE_TEST = \"phase-test\";\nconst PHASE_INFO = \"phase-info\";\nconst PAGES_MANIFEST = \"pages-manifest.json\";\nconst APP_PATHS_MANIFEST = \"app-paths-manifest.json\";\nconst APP_PATH_ROUTES_MANIFEST = \"app-path-routes-manifest.json\";\nconst BUILD_MANIFEST = \"build-manifest.json\";\nconst APP_BUILD_MANIFEST = \"app-build-manifest.json\";\nconst FUNCTIONS_CONFIG_MANIFEST = \"functions-config-manifest.json\";\nconst SUBRESOURCE_INTEGRITY_MANIFEST = \"subresource-integrity-manifest\";\nconst NEXT_FONT_MANIFEST = \"next-font-manifest\";\nconst EXPORT_MARKER = \"export-marker.json\";\nconst EXPORT_DETAIL = \"export-detail.json\";\nconst PRERENDER_MANIFEST = \"prerender-manifest.json\";\nconst ROUTES_MANIFEST = \"routes-manifest.json\";\nconst IMAGES_MANIFEST = \"images-manifest.json\";\nconst SERVER_FILES_MANIFEST = \"required-server-files.json\";\nconst DEV_CLIENT_PAGES_MANIFEST = \"_devPagesManifest.json\";\nconst MIDDLEWARE_MANIFEST = \"middleware-manifest.json\";\nconst DEV_MIDDLEWARE_MANIFEST = \"_devMiddlewareManifest.json\";\nconst REACT_LOADABLE_MANIFEST = \"react-loadable-manifest.json\";\nconst FONT_MANIFEST = \"font-manifest.json\";\nconst SERVER_DIRECTORY = \"server\";\nconst CONFIG_FILES = [\n    \"next.config.js\",\n    \"next.config.mjs\"\n];\nconst BUILD_ID_FILE = \"BUILD_ID\";\nconst BLOCKED_PAGES = [\n    \"/_document\",\n    \"/_app\",\n    \"/_error\"\n];\nconst CLIENT_PUBLIC_FILES_PATH = \"public\";\nconst CLIENT_STATIC_FILES_PATH = \"static\";\nconst STRING_LITERAL_DROP_BUNDLE = \"__NEXT_DROP_CLIENT_FILE__\";\nconst NEXT_BUILTIN_DOCUMENT = \"__NEXT_BUILTIN_DOCUMENT__\";\nconst BARREL_OPTIMIZATION_PREFIX = \"__barrel_optimize__\";\n// server/[entry]/page_client-reference-manifest.js\nconst CLIENT_REFERENCE_MANIFEST = \"client-reference-manifest\";\n// server/server-reference-manifest\nconst SERVER_REFERENCE_MANIFEST = \"server-reference-manifest\";\n// server/middleware-build-manifest.js\nconst MIDDLEWARE_BUILD_MANIFEST = \"middleware-build-manifest\";\n// server/middleware-react-loadable-manifest.js\nconst MIDDLEWARE_REACT_LOADABLE_MANIFEST = \"middleware-react-loadable-manifest\";\n// static/runtime/main.js\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN = \"main\";\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = \"\" + CLIENT_STATIC_FILES_RUNTIME_MAIN + \"-app\";\n// next internal client components chunk for layouts\nconst APP_CLIENT_INTERNALS = \"app-pages-internals\";\n// static/runtime/react-refresh.js\nconst CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = \"react-refresh\";\n// static/runtime/amp.js\nconst CLIENT_STATIC_FILES_RUNTIME_AMP = \"amp\";\n// static/runtime/webpack.js\nconst CLIENT_STATIC_FILES_RUNTIME_WEBPACK = \"webpack\";\n// static/runtime/polyfills.js\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = \"polyfills\";\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(CLIENT_STATIC_FILES_RUNTIME_POLYFILLS);\nconst EDGE_RUNTIME_WEBPACK = \"edge-runtime-webpack\";\nconst STATIC_PROPS_ID = \"__N_SSG\";\nconst SERVER_PROPS_ID = \"__N_SSP\";\nconst GOOGLE_FONT_PROVIDER = \"https://fonts.googleapis.com/\";\nconst OPTIMIZED_FONT_PROVIDERS = [\n    {\n        url: GOOGLE_FONT_PROVIDER,\n        preconnect: \"https://fonts.gstatic.com\"\n    },\n    {\n        url: \"https://use.typekit.net\",\n        preconnect: \"https://use.typekit.net\"\n    }\n];\nconst DEFAULT_SERIF_FONT = {\n    name: \"Times New Roman\",\n    xAvgCharWidth: 821,\n    azAvgWidth: 854.3953488372093,\n    unitsPerEm: 2048\n};\nconst DEFAULT_SANS_SERIF_FONT = {\n    name: \"Arial\",\n    xAvgCharWidth: 904,\n    azAvgWidth: 934.5116279069767,\n    unitsPerEm: 2048\n};\nconst STATIC_STATUS_PAGES = [\n    \"/500\"\n];\nconst TRACE_OUTPUT_VERSION = 1;\n// in `MB`\nconst TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000;\nconst RSC_MODULE_TYPES = {\n    client: \"client\",\n    server: \"server\"\n};\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nconst EDGE_UNSUPPORTED_NODE_APIS = [\n    \"clearImmediate\",\n    \"setImmediate\",\n    \"BroadcastChannel\",\n    \"ByteLengthQueuingStrategy\",\n    \"CompressionStream\",\n    \"CountQueuingStrategy\",\n    \"DecompressionStream\",\n    \"DomException\",\n    \"MessageChannel\",\n    \"MessageEvent\",\n    \"MessagePort\",\n    \"ReadableByteStreamController\",\n    \"ReadableStreamBYOBRequest\",\n    \"ReadableStreamDefaultController\",\n    \"TransformStreamDefaultController\",\n    \"WritableStreamDefaultController\"\n];\nconst SYSTEM_ENTRYPOINTS = new Set([\n    CLIENT_STATIC_FILES_RUNTIME_MAIN,\n    CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n    CLIENT_STATIC_FILES_RUNTIME_AMP,\n    CLIENT_STATIC_FILES_RUNTIME_MAIN_APP\n]); //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/get-hostname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostname: () => (/* binding */ getHostname)\n/* harmony export */ });\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\", 1)[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBQVUsU0FBU0EsWUFBWUMsTUFBTSxFQUFFQyxPQUFPO0lBQzNDLDJFQUEyRTtJQUMzRSxZQUFZO0lBQ1osSUFBSUM7SUFDSixJQUFJLENBQUNELFdBQVcsT0FBTyxLQUFLLElBQUlBLFFBQVFFLElBQUksS0FBSyxDQUFDQyxNQUFNQyxPQUFPLENBQUNKLFFBQVFFLElBQUksR0FBRztRQUMzRUQsV0FBV0QsUUFBUUUsSUFBSSxDQUFDRyxRQUFRLEdBQUdDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZELE9BQU8sSUFBSVAsT0FBT0UsUUFBUSxFQUFFO1FBQ3hCQSxXQUFXRixPQUFPRSxRQUFRO0lBQzlCLE9BQU87SUFDUCxPQUFPQSxTQUFTTSxXQUFXO0FBQy9CLEVBRUEsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLmpzPzc2MzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWtlcyBhbiBvYmplY3Qgd2l0aCBhIGhvc3RuYW1lIHByb3BlcnR5IChsaWtlIGEgcGFyc2VkIFVSTCkgYW5kIHNvbWVcbiAqIGhlYWRlcnMgdGhhdCBtYXkgY29udGFpbiBIb3N0IGFuZCByZXR1cm5zIHRoZSBwcmVmZXJyZWQgaG9zdG5hbWUuXG4gKiBAcGFyYW0gcGFyc2VkIEFuIG9iamVjdCBjb250YWluaW5nIGEgaG9zdG5hbWUgcHJvcGVydHkuXG4gKiBAcGFyYW0gaGVhZGVycyBBIGRpY3Rpb25hcnkgd2l0aCBoZWFkZXJzIGNvbnRhaW5pbmcgYSBgaG9zdGAuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGdldEhvc3RuYW1lKHBhcnNlZCwgaGVhZGVycykge1xuICAgIC8vIEdldCB0aGUgaG9zdG5hbWUgZnJvbSB0aGUgaGVhZGVycyBpZiBpdCBleGlzdHMsIG90aGVyd2lzZSB1c2UgdGhlIHBhcnNlZFxuICAgIC8vIGhvc3RuYW1lLlxuICAgIGxldCBob3N0bmFtZTtcbiAgICBpZiAoKGhlYWRlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGhlYWRlcnMuaG9zdCkgJiYgIUFycmF5LmlzQXJyYXkoaGVhZGVycy5ob3N0KSkge1xuICAgICAgICBob3N0bmFtZSA9IGhlYWRlcnMuaG9zdC50b1N0cmluZygpLnNwbGl0KFwiOlwiLCAxKVswXTtcbiAgICB9IGVsc2UgaWYgKHBhcnNlZC5ob3N0bmFtZSkge1xuICAgICAgICBob3N0bmFtZSA9IHBhcnNlZC5ob3N0bmFtZTtcbiAgICB9IGVsc2UgcmV0dXJuO1xuICAgIHJldHVybiBob3N0bmFtZS50b0xvd2VyQ2FzZSgpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtaG9zdG5hbWUuanMubWFwIl0sIm5hbWVzIjpbImdldEhvc3RuYW1lIiwicGFyc2VkIiwiaGVhZGVycyIsImhvc3RuYW1lIiwiaG9zdCIsIkFycmF5IiwiaXNBcnJheSIsInRvU3RyaW5nIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PathParamsContext: () => (/* binding */ PathParamsContext),\n/* harmony export */   PathnameContext: () => (/* binding */ PathnameContext),\n/* harmony export */   SearchParamsContext: () => (/* binding */ SearchParamsContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nconst SearchParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathnameContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nif (true) {\n    SearchParamsContext.displayName = \"SearchParamsContext\";\n    PathnameContext.displayName = \"PathnameContext\";\n    PathParamsContext.displayName = \"PathParamsContext\";\n} //# sourceMappingURL=hooks-client-context.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9ob29rcy1jbGllbnQtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBRXNDO0FBQy9CLE1BQU1DLG9DQUFzQkQsb0RBQWFBLENBQUMsTUFBTTtBQUNoRCxNQUFNRSxnQ0FBa0JGLG9EQUFhQSxDQUFDLE1BQU07QUFDNUMsTUFBTUcsa0NBQW9CSCxvREFBYUEsQ0FBQyxNQUFNO0FBQ3JELElBQUlJLElBQXFDLEVBQUU7SUFDdkNILG9CQUFvQkksV0FBVyxHQUFHO0lBQ2xDSCxnQkFBZ0JHLFdBQVcsR0FBRztJQUM5QkYsa0JBQWtCRSxXQUFXLEdBQUc7QUFDcEMsRUFFQSwrREFBK0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9ob29rcy1jbGllbnQtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcz84OTZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgY29uc3QgU2VhcmNoUGFyYW1zQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgY29uc3QgUGF0aG5hbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBjb25zdCBQYXRoUGFyYW1zQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgU2VhcmNoUGFyYW1zQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiU2VhcmNoUGFyYW1zQ29udGV4dFwiO1xuICAgIFBhdGhuYW1lQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUGF0aG5hbWVDb250ZXh0XCI7XG4gICAgUGF0aFBhcmFtc0NvbnRleHQuZGlzcGxheU5hbWUgPSBcIlBhdGhQYXJhbXNDb250ZXh0XCI7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhvb2tzLWNsaWVudC1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwiU2VhcmNoUGFyYW1zQ29udGV4dCIsIlBhdGhuYW1lQ29udGV4dCIsIlBhdGhQYXJhbXNDb250ZXh0IiwicHJvY2VzcyIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectDomainLocale: () => (/* binding */ detectDomainLocale)\n/* harmony export */ });\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\", 1)[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxtQkFBbUJDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxjQUFjO0lBQ3BFLElBQUksQ0FBQ0YsYUFBYTtJQUNsQixJQUFJRSxnQkFBZ0I7UUFDaEJBLGlCQUFpQkEsZUFBZUMsV0FBVztJQUMvQztJQUNBLEtBQUssTUFBTUMsUUFBUUosWUFBWTtRQUMzQixJQUFJSyxjQUFjQztRQUNsQix5QkFBeUI7UUFDekIsTUFBTUMsaUJBQWlCLENBQUNGLGVBQWVELEtBQUtJLE1BQU0sS0FBSyxPQUFPLEtBQUssSUFBSUgsYUFBYUksS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQ04sV0FBVztRQUNoSCxJQUFJRixhQUFhTSxrQkFBa0JMLG1CQUFtQkUsS0FBS00sYUFBYSxDQUFDUCxXQUFXLE1BQU8sRUFBQ0csZ0JBQWdCRixLQUFLTyxPQUFPLEtBQUssT0FBTyxLQUFLLElBQUlMLGNBQWNNLElBQUksQ0FBQyxDQUFDQyxTQUFTQSxPQUFPVixXQUFXLE9BQU9ELGVBQWMsR0FBSTtZQUNqTixPQUFPRTtRQUNYO0lBQ0o7QUFDSixFQUVBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUuanM/YmNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkl0ZW1zLCBob3N0bmFtZSwgZGV0ZWN0ZWRMb2NhbGUpIHtcbiAgICBpZiAoIWRvbWFpbkl0ZW1zKSByZXR1cm47XG4gICAgaWYgKGRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgIGRldGVjdGVkTG9jYWxlID0gZGV0ZWN0ZWRMb2NhbGUudG9Mb3dlckNhc2UoKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGRvbWFpbkl0ZW1zKXtcbiAgICAgICAgdmFyIF9pdGVtX2RvbWFpbiwgX2l0ZW1fbG9jYWxlcztcbiAgICAgICAgLy8gcmVtb3ZlIHBvcnQgaWYgcHJlc2VudFxuICAgICAgICBjb25zdCBkb21haW5Ib3N0bmFtZSA9IChfaXRlbV9kb21haW4gPSBpdGVtLmRvbWFpbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9pdGVtX2RvbWFpbi5zcGxpdChcIjpcIiwgMSlbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKGhvc3RuYW1lID09PSBkb21haW5Ib3N0bmFtZSB8fCBkZXRlY3RlZExvY2FsZSA9PT0gaXRlbS5kZWZhdWx0TG9jYWxlLnRvTG93ZXJDYXNlKCkgfHwgKChfaXRlbV9sb2NhbGVzID0gaXRlbS5sb2NhbGVzKSA9PSBudWxsID8gdm9pZCAwIDogX2l0ZW1fbG9jYWxlcy5zb21lKChsb2NhbGUpPT5sb2NhbGUudG9Mb3dlckNhc2UoKSA9PT0gZGV0ZWN0ZWRMb2NhbGUpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVjdC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXRlY3REb21haW5Mb2NhbGUiLCJkb21haW5JdGVtcyIsImhvc3RuYW1lIiwiZGV0ZWN0ZWRMb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsIml0ZW0iLCJfaXRlbV9kb21haW4iLCJfaXRlbV9sb2NhbGVzIiwiZG9tYWluSG9zdG5hbWUiLCJkb21haW4iLCJzcGxpdCIsImRlZmF1bHRMb2NhbGUiLCJsb2NhbGVzIiwic29tZSIsImxvY2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeLocalePath: () => (/* binding */ normalizeLocalePath)\n/* harmony export */ });\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7O0NBUUMsR0FBVSxTQUFTQSxvQkFBb0JDLFFBQVEsRUFBRUMsT0FBTztJQUNyRCxJQUFJQztJQUNKLCtEQUErRDtJQUMvRCxNQUFNQyxnQkFBZ0JILFNBQVNJLEtBQUssQ0FBQztJQUNwQ0gsQ0FBQUEsV0FBVyxFQUFFLEVBQUVJLElBQUksQ0FBQyxDQUFDQztRQUNsQixJQUFJSCxhQUFhLENBQUMsRUFBRSxJQUFJQSxhQUFhLENBQUMsRUFBRSxDQUFDSSxXQUFXLE9BQU9ELE9BQU9DLFdBQVcsSUFBSTtZQUM3RUwsaUJBQWlCSTtZQUNqQkgsY0FBY0ssTUFBTSxDQUFDLEdBQUc7WUFDeEJSLFdBQVdHLGNBQWNNLElBQUksQ0FBQyxRQUFRO1lBQ3RDLE9BQU87UUFDWDtRQUNBLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSFQ7UUFDQUU7SUFDSjtBQUNKLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanM/NmY4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZvciBhIHBhdGhuYW1lIHRoYXQgbWF5IGluY2x1ZGUgYSBsb2NhbGUgZnJvbSBhIGxpc3Qgb2YgbG9jYWxlcywgaXRcbiAqIHJlbW92ZXMgdGhlIGxvY2FsZSBmcm9tIHRoZSBwYXRobmFtZSByZXR1cm5pbmcgaXQgYWxvbmdzaWRlIHdpdGggdGhlXG4gKiBkZXRlY3RlZCBsb2NhbGUuXG4gKlxuICogQHBhcmFtIHBhdGhuYW1lIEEgcGF0aG5hbWUgdGhhdCBtYXkgaW5jbHVkZSBhIGxvY2FsZS5cbiAqIEBwYXJhbSBsb2NhbGVzIEEgbGlzdCBvZiBsb2NhbGVzLlxuICogQHJldHVybnMgVGhlIGRldGVjdGVkIGxvY2FsZSBhbmQgcGF0aG5hbWUgd2l0aG91dCBsb2NhbGVcbiAqLyBleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplTG9jYWxlUGF0aChwYXRobmFtZSwgbG9jYWxlcykge1xuICAgIGxldCBkZXRlY3RlZExvY2FsZTtcbiAgICAvLyBmaXJzdCBpdGVtIHdpbGwgYmUgZW1wdHkgc3RyaW5nIGZyb20gc3BsaXR0aW5nIGF0IGZpcnN0IGNoYXJcbiAgICBjb25zdCBwYXRobmFtZVBhcnRzID0gcGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICAgIChsb2NhbGVzIHx8IFtdKS5zb21lKChsb2NhbGUpPT57XG4gICAgICAgIGlmIChwYXRobmFtZVBhcnRzWzFdICYmIHBhdGhuYW1lUGFydHNbMV0udG9Mb3dlckNhc2UoKSA9PT0gbG9jYWxlLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgIGRldGVjdGVkTG9jYWxlID0gbG9jYWxlO1xuICAgICAgICAgICAgcGF0aG5hbWVQYXJ0cy5zcGxpY2UoMSwgMSk7XG4gICAgICAgICAgICBwYXRobmFtZSA9IHBhdGhuYW1lUGFydHMuam9pbihcIi9cIikgfHwgXCIvXCI7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgIGRldGVjdGVkTG9jYWxlXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9ybWFsaXplLWxvY2FsZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJub3JtYWxpemVMb2NhbGVQYXRoIiwicGF0aG5hbWUiLCJsb2NhbGVzIiwiZGV0ZWN0ZWRMb2NhbGUiLCJwYXRobmFtZVBhcnRzIiwic3BsaXQiLCJzb21lIiwibG9jYWxlIiwidG9Mb3dlckNhc2UiLCJzcGxpY2UiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BailoutToCSRError: () => (/* binding */ BailoutToCSRError),\n/* harmony export */   isBailoutToCSRError: () => (/* binding */ isBailoutToCSRError)\n/* harmony export */ });\n// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = \"BAILOUT_TO_CLIENT_SIDE_RENDERING\";\n/** An error that should be thrown when we want to bail out to client-side rendering. */ class BailoutToCSRError extends Error {\n    constructor(reason){\n        super(\"Bail out to client-side rendering: \" + reason);\n        this.reason = reason;\n        this.digest = BAILOUT_TO_CSR;\n    }\n}\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */ function isBailoutToCSRError(err) {\n    if (typeof err !== \"object\" || err === null || !(\"digest\" in err)) {\n        return false;\n    }\n    return err.digest === BAILOUT_TO_CSR;\n} //# sourceMappingURL=bailout-to-csr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvYmFpbG91dC10by1jc3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwrR0FBK0c7QUFDL0csTUFBTUEsaUJBQWlCO0FBQ3ZCLHNGQUFzRixHQUFVLE1BQU1DLDBCQUEwQkM7SUFDNUhDLFlBQVlDLE1BQU0sQ0FBQztRQUNmLEtBQUssQ0FBQyx3Q0FBd0NBO1FBQzlDLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ0MsTUFBTSxHQUFHTDtJQUNsQjtBQUNKO0FBQ0EsNEdBQTRHLEdBQVUsU0FBU00sb0JBQW9CQyxHQUFHO0lBQ2xKLElBQUksT0FBT0EsUUFBUSxZQUFZQSxRQUFRLFFBQVEsQ0FBRSxhQUFZQSxHQUFFLEdBQUk7UUFDL0QsT0FBTztJQUNYO0lBQ0EsT0FBT0EsSUFBSUYsTUFBTSxLQUFLTDtBQUMxQixFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2xhenktZHluYW1pYy9iYWlsb3V0LXRvLWNzci5qcz8wOTRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaGFzIHRvIGJlIGEgc2hhcmVkIG1vZHVsZSB3aGljaCBpcyBzaGFyZWQgYmV0d2VlbiBjbGllbnQgY29tcG9uZW50IGVycm9yIGJvdW5kYXJ5IGFuZCBkeW5hbWljIGNvbXBvbmVudFxuY29uc3QgQkFJTE9VVF9UT19DU1IgPSBcIkJBSUxPVVRfVE9fQ0xJRU5UX1NJREVfUkVOREVSSU5HXCI7XG4vKiogQW4gZXJyb3IgdGhhdCBzaG91bGQgYmUgdGhyb3duIHdoZW4gd2Ugd2FudCB0byBiYWlsIG91dCB0byBjbGllbnQtc2lkZSByZW5kZXJpbmcuICovIGV4cG9ydCBjbGFzcyBCYWlsb3V0VG9DU1JFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihyZWFzb24pe1xuICAgICAgICBzdXBlcihcIkJhaWwgb3V0IHRvIGNsaWVudC1zaWRlIHJlbmRlcmluZzogXCIgKyByZWFzb24pO1xuICAgICAgICB0aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBCQUlMT1VUX1RPX0NTUjtcbiAgICB9XG59XG4vKiogQ2hlY2tzIGlmIGEgcGFzc2VkIGFyZ3VtZW50IGlzIGFuIGVycm9yIHRoYXQgaXMgdGhyb3duIGlmIHdlIHdhbnQgdG8gYmFpbCBvdXQgdG8gY2xpZW50LXNpZGUgcmVuZGVyaW5nLiAqLyBleHBvcnQgZnVuY3Rpb24gaXNCYWlsb3V0VG9DU1JFcnJvcihlcnIpIHtcbiAgICBpZiAodHlwZW9mIGVyciAhPT0gXCJvYmplY3RcIiB8fCBlcnIgPT09IG51bGwgfHwgIShcImRpZ2VzdFwiIGluIGVycikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gZXJyLmRpZ2VzdCA9PT0gQkFJTE9VVF9UT19DU1I7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhaWxvdXQtdG8tY3NyLmpzLm1hcCJdLCJuYW1lcyI6WyJCQUlMT1VUX1RPX0NTUiIsIkJhaWxvdXRUb0NTUkVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsInJlYXNvbiIsImRpZ2VzdCIsImlzQmFpbG91dFRvQ1NSRXJyb3IiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
eval("// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */ \nconst MODERN_BROWSERSLIST_TARGET = [\n    \"chrome 64\",\n    \"edge 79\",\n    \"firefox 67\",\n    \"opera 51\",\n    \"safari 12\"\n];\nmodule.exports = MODERN_BROWSERSLIST_TARGET; //# sourceMappingURL=modern-browserslist-target.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9tb2Rlcm4tYnJvd3NlcnNsaXN0LXRhcmdldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvRkFBb0Y7QUFDcEYsa0VBQWtFO0FBQ2xFOzs7OztDQUtDLEdBQUc7QUFBQSxNQUFNQSw2QkFBNkI7SUFDbkM7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNIO0FBQ0RDLE9BQU9DLE9BQU8sR0FBR0YsNEJBRWpCLHNEQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL21vZGVybi1icm93c2Vyc2xpc3QtdGFyZ2V0LmpzPzExMDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogVGhpcyBmaWxlIGlzIEpTIGJlY2F1c2UgaXQncyB1c2VkIGJ5IHRoZSB0YXNrZmlsZS1zd2MuanMgZmlsZSwgd2hpY2ggaXMgSlMuXG4vLyBLZWVwIGZpbGUgY2hhbmdlcyBpbiBzeW5jIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgYC5kLnRzYCBmaWxlcy5cbi8qKlxuICogVGhlc2UgYXJlIHRoZSBicm93c2VyIHZlcnNpb25zIHRoYXQgc3VwcG9ydCBhbGwgb2YgdGhlIGZvbGxvd2luZzpcbiAqIHN0YXRpYyBpbXBvcnQ6IGh0dHBzOi8vY2FuaXVzZS5jb20vZXM2LW1vZHVsZVxuICogZHluYW1pYyBpbXBvcnQ6IGh0dHBzOi8vY2FuaXVzZS5jb20vZXM2LW1vZHVsZS1keW5hbWljLWltcG9ydFxuICogaW1wb3J0Lm1ldGE6IGh0dHBzOi8vY2FuaXVzZS5jb20vbWRuLWphdmFzY3JpcHRfb3BlcmF0b3JzX2ltcG9ydF9tZXRhXG4gKi8gY29uc3QgTU9ERVJOX0JST1dTRVJTTElTVF9UQVJHRVQgPSBbXG4gICAgXCJjaHJvbWUgNjRcIixcbiAgICBcImVkZ2UgNzlcIixcbiAgICBcImZpcmVmb3ggNjdcIixcbiAgICBcIm9wZXJhIDUxXCIsXG4gICAgXCJzYWZhcmkgMTJcIlxuXTtcbm1vZHVsZS5leHBvcnRzID0gTU9ERVJOX0JST1dTRVJTTElTVF9UQVJHRVQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZGVybi1icm93c2Vyc2xpc3QtdGFyZ2V0LmpzLm1hcCJdLCJuYW1lcyI6WyJNT0RFUk5fQlJPV1NFUlNMSVNUX1RBUkdFVCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLeadingSlash: () => (/* binding */ ensureLeadingSlash)\n/* harmony export */ });\n/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ function ensureLeadingSlash(path) {\n    return path.startsWith(\"/\") ? path : \"/\" + path;\n} //# sourceMappingURL=ensure-leading-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9wYWdlLXBhdGgvZW5zdXJlLWxlYWRpbmctc2xhc2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUFVLFNBQVNBLG1CQUFtQkMsSUFBSTtJQUN2QyxPQUFPQSxLQUFLQyxVQUFVLENBQUMsT0FBT0QsT0FBTyxNQUFNQTtBQUMvQyxFQUVBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3BhZ2UtcGF0aC9lbnN1cmUtbGVhZGluZy1zbGFzaC5qcz8wNDY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRm9yIGEgZ2l2ZW4gcGFnZSBwYXRoLCB0aGlzIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCB0aGVyZSBpcyBhIGxlYWRpbmcgc2xhc2guXG4gKiBJZiB0aGVyZSBpcyBub3QgYSBsZWFkaW5nIHNsYXNoLCBvbmUgaXMgYWRkZWQsIG90aGVyd2lzZSBpdCBpcyBub29wLlxuICovIGV4cG9ydCBmdW5jdGlvbiBlbnN1cmVMZWFkaW5nU2xhc2gocGF0aCkge1xuICAgIHJldHVybiBwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5zdXJlLWxlYWRpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsInBhdGgiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocale: () => (/* binding */ addLocale)\n/* harmony export */ });\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_0__.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDQTtBQUNsRDs7OztDQUlDLEdBQVUsU0FBU0UsVUFBVUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLGFBQWEsRUFBRUMsWUFBWTtJQUNuRSw0RUFBNEU7SUFDNUUsc0JBQXNCO0lBQ3RCLElBQUksQ0FBQ0YsVUFBVUEsV0FBV0MsZUFBZSxPQUFPRjtJQUNoRCxNQUFNSSxRQUFRSixLQUFLSyxXQUFXO0lBQzlCLDJFQUEyRTtJQUMzRSxpQ0FBaUM7SUFDakMsSUFBSSxDQUFDRixjQUFjO1FBQ2YsSUFBSUwsK0RBQWFBLENBQUNNLE9BQU8sU0FBUyxPQUFPSjtRQUN6QyxJQUFJRiwrREFBYUEsQ0FBQ00sT0FBTyxNQUFNSCxPQUFPSSxXQUFXLEtBQUssT0FBT0w7SUFDakU7SUFDQSxxQ0FBcUM7SUFDckMsT0FBT0gsK0RBQWFBLENBQUNHLE1BQU0sTUFBTUM7QUFDckMsRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcz9mODMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFBhdGhQcmVmaXggfSBmcm9tIFwiLi9hZGQtcGF0aC1wcmVmaXhcIjtcbmltcG9ydCB7IHBhdGhIYXNQcmVmaXggfSBmcm9tIFwiLi9wYXRoLWhhcy1wcmVmaXhcIjtcbi8qKlxuICogRm9yIGEgZ2l2ZW4gcGF0aCBhbmQgYSBsb2NhbGUsIGlmIHRoZSBsb2NhbGUgaXMgZ2l2ZW4sIGl0IHdpbGwgcHJlZml4IHRoZVxuICogbG9jYWxlLiBUaGUgcGF0aCBzaG91bGRuJ3QgYmUgYW4gQVBJIHBhdGguIElmIGEgZGVmYXVsdCBsb2NhbGUgaXMgZ2l2ZW4gdGhlXG4gKiBwcmVmaXggd2lsbCBiZSBvbWl0dGVkIGlmIHRoZSBsb2NhbGUgaXMgYWxyZWFkeSB0aGUgZGVmYXVsdCBsb2NhbGUuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGFkZExvY2FsZShwYXRoLCBsb2NhbGUsIGRlZmF1bHRMb2NhbGUsIGlnbm9yZVByZWZpeCkge1xuICAgIC8vIElmIG5vIGxvY2FsZSB3YXMgZ2l2ZW4gb3IgdGhlIGxvY2FsZSBpcyB0aGUgZGVmYXVsdCBsb2NhbGUsIHdlIGRvbid0IG5lZWRcbiAgICAvLyB0byBwcmVmaXggdGhlIHBhdGguXG4gICAgaWYgKCFsb2NhbGUgfHwgbG9jYWxlID09PSBkZWZhdWx0TG9jYWxlKSByZXR1cm4gcGF0aDtcbiAgICBjb25zdCBsb3dlciA9IHBhdGgudG9Mb3dlckNhc2UoKTtcbiAgICAvLyBJZiB0aGUgcGF0aCBpcyBhbiBBUEkgcGF0aCBvciB0aGUgcGF0aCBhbHJlYWR5IGhhcyB0aGUgbG9jYWxlIHByZWZpeCwgd2VcbiAgICAvLyBkb24ndCBuZWVkIHRvIHByZWZpeCB0aGUgcGF0aC5cbiAgICBpZiAoIWlnbm9yZVByZWZpeCkge1xuICAgICAgICBpZiAocGF0aEhhc1ByZWZpeChsb3dlciwgXCIvYXBpXCIpKSByZXR1cm4gcGF0aDtcbiAgICAgICAgaWYgKHBhdGhIYXNQcmVmaXgobG93ZXIsIFwiL1wiICsgbG9jYWxlLnRvTG93ZXJDYXNlKCkpKSByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgLy8gQWRkIHRoZSBsb2NhbGUgcHJlZml4IHRvIHRoZSBwYXRoLlxuICAgIHJldHVybiBhZGRQYXRoUHJlZml4KHBhdGgsIFwiL1wiICsgbG9jYWxlKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiYWRkUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJhZGRMb2NhbGUiLCJwYXRoIiwibG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsImxvd2VyIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathPrefix: () => (/* binding */ addPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7Q0FHQyxHQUFVLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLENBQUNELEtBQUtFLFVBQVUsQ0FBQyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHUCxzREFBU0EsQ0FBQ0U7SUFDNUMsT0FBTyxLQUFLQyxTQUFTRSxXQUFXQyxRQUFRQztBQUM1QyxFQUVBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1wcmVmaXguanM/MTA3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tIFwiLi9wYXJzZS1wYXRoXCI7XG4vKipcbiAqIEFkZHMgdGhlIHByb3ZpZGVkIHByZWZpeCB0byB0aGUgZ2l2ZW4gcGF0aC4gSXQgZmlyc3QgZW5zdXJlcyB0aGF0IHRoZSBwYXRoXG4gKiBpcyBpbmRlZWQgc3RhcnRpbmcgd2l0aCBhIHNsYXNoLlxuICovIGV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhcHJlZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lLCBxdWVyeSwgaGFzaCB9ID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIHJldHVybiBcIlwiICsgcHJlZml4ICsgcGF0aG5hbWUgKyBxdWVyeSArIGhhc2g7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1wYXRoLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwiYWRkUGF0aFByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathSuffix: () => (/* binding */ addPathSuffix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7O0NBSUMsR0FBVSxTQUFTQyxjQUFjQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLENBQUMsUUFBUSxDQUFDRCxRQUFRO1FBQ2xDLE9BQU9EO0lBQ1g7SUFDQSxNQUFNLEVBQUVHLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUUsR0FBR1Asc0RBQVNBLENBQUNFO0lBQzVDLE9BQU8sS0FBS0csV0FBV0YsU0FBU0csUUFBUUM7QUFDNUMsRUFFQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzP2RmY2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSBcIi4vcGFyc2UtcGF0aFwiO1xuLyoqXG4gKiBTaW1pbGFybHkgdG8gYGFkZFBhdGhQcmVmaXhgLCB0aGlzIGZ1bmN0aW9uIGFkZHMgYSBzdWZmaXggYXQgdGhlIGVuZCBvbiB0aGVcbiAqIHByb3ZpZGVkIHBhdGguIEl0IGFsc28gd29ya3Mgb25seSBmb3IgcGF0aHMgZW5zdXJpbmcgdGhlIGFyZ3VtZW50IHN0YXJ0c1xuICogd2l0aCBhIHNsYXNoLlxuICovIGV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoU3VmZml4KHBhdGgsIHN1ZmZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhc3VmZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lLCBxdWVyeSwgaGFzaCB9ID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIHJldHVybiBcIlwiICsgcGF0aG5hbWUgKyBzdWZmaXggKyBxdWVyeSArIGhhc2g7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1wYXRoLXN1ZmZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwiYWRkUGF0aFN1ZmZpeCIsInBhdGgiLCJzdWZmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeAppPath: () => (/* binding */ normalizeAppPath),\n/* harmony export */   normalizeRscURL: () => (/* binding */ normalizeRscURL)\n/* harmony export */ });\n/* harmony import */ var _page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../page-path/ensure-leading-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ function normalizeAppPath(route) {\n    return (0,_page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(route.split(\"/\").reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0,_segment__WEBPACK_IMPORTED_MODULE_1__.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === \"@\") {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === \"page\" || segment === \"route\") && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, \"\"));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, \"$1\");\n} //# sourceMappingURL=app-paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEU7QUFDM0I7QUFDL0M7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWtCQyxHQUFVLFNBQVNFLGlCQUFpQkMsS0FBSztJQUN0QyxPQUFPSCxtRkFBa0JBLENBQUNHLE1BQU1DLEtBQUssQ0FBQyxLQUFLQyxNQUFNLENBQUMsQ0FBQ0MsVUFBVUMsU0FBU0MsT0FBT0M7UUFDekUsOEJBQThCO1FBQzlCLElBQUksQ0FBQ0YsU0FBUztZQUNWLE9BQU9EO1FBQ1g7UUFDQSxzQkFBc0I7UUFDdEIsSUFBSUwsd0RBQWNBLENBQUNNLFVBQVU7WUFDekIsT0FBT0Q7UUFDWDtRQUNBLGlDQUFpQztRQUNqQyxJQUFJQyxPQUFPLENBQUMsRUFBRSxLQUFLLEtBQUs7WUFDcEIsT0FBT0Q7UUFDWDtRQUNBLHVEQUF1RDtRQUN2RCxJQUFJLENBQUNDLFlBQVksVUFBVUEsWUFBWSxPQUFNLEtBQU1DLFVBQVVDLFNBQVNDLE1BQU0sR0FBRyxHQUFHO1lBQzlFLE9BQU9KO1FBQ1g7UUFDQSxPQUFPQSxXQUFXLE1BQU1DO0lBQzVCLEdBQUc7QUFDUDtBQUNBOzs7Q0FHQyxHQUFVLFNBQVNJLGdCQUFnQkMsR0FBRztJQUNuQyxPQUFPQSxJQUFJQyxPQUFPLENBQUMsZUFDbkI7QUFDSixFQUVBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hcHAtcGF0aHMuanM/YjY4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbnN1cmVMZWFkaW5nU2xhc2ggfSBmcm9tIFwiLi4vLi4vcGFnZS1wYXRoL2Vuc3VyZS1sZWFkaW5nLXNsYXNoXCI7XG5pbXBvcnQgeyBpc0dyb3VwU2VnbWVudCB9IGZyb20gXCIuLi8uLi9zZWdtZW50XCI7XG4vKipcbiAqIE5vcm1hbGl6ZXMgYW4gYXBwIHJvdXRlIHNvIGl0IHJlcHJlc2VudHMgdGhlIGFjdHVhbCByZXF1ZXN0IHBhdGguIEVzc2VudGlhbGx5XG4gKiBwZXJmb3JtaW5nIHRoZSBmb2xsb3dpbmcgdHJhbnNmb3JtYXRpb25zOlxuICpcbiAqIC0gYC8oZGFzaGJvYXJkKS91c2VyL1tpZF0vcGFnZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvKGRhc2hib2FyZCkvYWNjb3VudC9wYWdlYCB0byBgL2FjY291bnRgXG4gKiAtIGAvdXNlci9baWRdL3BhZ2VgIHRvIGAvdXNlci9baWRdYFxuICogLSBgL2FjY291bnQvcGFnZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3BhZ2VgIHRvIGAvYFxuICogLSBgLyhkYXNoYm9hcmQpL3VzZXIvW2lkXS9yb3V0ZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvKGRhc2hib2FyZCkvYWNjb3VudC9yb3V0ZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3VzZXIvW2lkXS9yb3V0ZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvYWNjb3VudC9yb3V0ZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3JvdXRlYCB0byBgL2BcbiAqIC0gYC9gIHRvIGAvYFxuICpcbiAqIEBwYXJhbSByb3V0ZSB0aGUgYXBwIHJvdXRlIHRvIG5vcm1hbGl6ZVxuICogQHJldHVybnMgdGhlIG5vcm1hbGl6ZWQgcGF0aG5hbWVcbiAqLyBleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplQXBwUGF0aChyb3V0ZSkge1xuICAgIHJldHVybiBlbnN1cmVMZWFkaW5nU2xhc2gocm91dGUuc3BsaXQoXCIvXCIpLnJlZHVjZSgocGF0aG5hbWUsIHNlZ21lbnQsIGluZGV4LCBzZWdtZW50cyk9PntcbiAgICAgICAgLy8gRW1wdHkgc2VnbWVudHMgYXJlIGlnbm9yZWQuXG4gICAgICAgIGlmICghc2VnbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIEdyb3VwcyBhcmUgaWdub3JlZC5cbiAgICAgICAgaWYgKGlzR3JvdXBTZWdtZW50KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGFyYWxsZWwgc2VnbWVudHMgYXJlIGlnbm9yZWQuXG4gICAgICAgIGlmIChzZWdtZW50WzBdID09PSBcIkBcIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRoZSBsYXN0IHNlZ21lbnQgKGlmIGl0J3MgYSBsZWFmKSBzaG91bGQgYmUgaWdub3JlZC5cbiAgICAgICAgaWYgKChzZWdtZW50ID09PSBcInBhZ2VcIiB8fCBzZWdtZW50ID09PSBcInJvdXRlXCIpICYmIGluZGV4ID09PSBzZWdtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhdGhuYW1lICsgXCIvXCIgKyBzZWdtZW50O1xuICAgIH0sIFwiXCIpKTtcbn1cbi8qKlxuICogU3RyaXBzIHRoZSBgLnJzY2AgZXh0ZW5zaW9uIGlmIGl0J3MgaW4gdGhlIHBhdGhuYW1lLlxuICogU2luY2UgdGhpcyBmdW5jdGlvbiBpcyB1c2VkIG9uIGZ1bGwgdXJscyBpdCBjaGVja3MgYD9gIGZvciBzZWFyY2hQYXJhbXMgaGFuZGxpbmcuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVJzY1VSTCh1cmwpIHtcbiAgICByZXR1cm4gdXJsLnJlcGxhY2UoL1xcLnJzYygkfFxcPykvLCAvLyAkMSBlbnN1cmVzIGA/YCBpcyBwcmVzZXJ2ZWRcbiAgICBcIiQxXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGF0aHMuanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsImlzR3JvdXBTZWdtZW50Iiwibm9ybWFsaXplQXBwUGF0aCIsInJvdXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJwYXRobmFtZSIsInNlZ21lbnQiLCJpbmRleCIsInNlZ21lbnRzIiwibGVuZ3RoIiwibm9ybWFsaXplUnNjVVJMIiwidXJsIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatNextPathnameInfo: () => (/* binding */ formatNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-trailing-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\");\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _add_path_suffix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-path-suffix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\");\n/* harmony import */ var _add_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\");\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0,_add_locale__WEBPACK_IMPORTED_MODULE_3__.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)((0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)(pathname, \"/\") : pathname : (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4RDtBQUNaO0FBQ0E7QUFDVDtBQUNsQyxTQUFTSSx1QkFBdUJDLElBQUk7SUFDdkMsSUFBSUMsV0FBV0gsc0RBQVNBLENBQUNFLEtBQUtDLFFBQVEsRUFBRUQsS0FBS0UsTUFBTSxFQUFFRixLQUFLRyxPQUFPLEdBQUdDLFlBQVlKLEtBQUtLLGFBQWEsRUFBRUwsS0FBS00sWUFBWTtJQUNySCxJQUFJTixLQUFLRyxPQUFPLElBQUksQ0FBQ0gsS0FBS08sYUFBYSxFQUFFO1FBQ3JDTixXQUFXTiwyRUFBbUJBLENBQUNNO0lBQ25DO0lBQ0EsSUFBSUQsS0FBS0csT0FBTyxFQUFFO1FBQ2RGLFdBQVdKLCtEQUFhQSxDQUFDRCwrREFBYUEsQ0FBQ0ssVUFBVSxpQkFBaUJELEtBQUtHLE9BQU8sR0FBR0gsS0FBS0MsUUFBUSxLQUFLLE1BQU0sZUFBZTtJQUM1SDtJQUNBQSxXQUFXTCwrREFBYUEsQ0FBQ0ssVUFBVUQsS0FBS1EsUUFBUTtJQUNoRCxPQUFPLENBQUNSLEtBQUtHLE9BQU8sSUFBSUgsS0FBS08sYUFBYSxHQUFHLENBQUNOLFNBQVNRLFFBQVEsQ0FBQyxPQUFPWiwrREFBYUEsQ0FBQ0ksVUFBVSxPQUFPQSxXQUFXTiwyRUFBbUJBLENBQUNNO0FBQ3pJLEVBRUEscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanM/NTQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW1vdmVUcmFpbGluZ1NsYXNoIH0gZnJvbSBcIi4vcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCI7XG5pbXBvcnQgeyBhZGRQYXRoUHJlZml4IH0gZnJvbSBcIi4vYWRkLXBhdGgtcHJlZml4XCI7XG5pbXBvcnQgeyBhZGRQYXRoU3VmZml4IH0gZnJvbSBcIi4vYWRkLXBhdGgtc3VmZml4XCI7XG5pbXBvcnQgeyBhZGRMb2NhbGUgfSBmcm9tIFwiLi9hZGQtbG9jYWxlXCI7XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyhpbmZvKSB7XG4gICAgbGV0IHBhdGhuYW1lID0gYWRkTG9jYWxlKGluZm8ucGF0aG5hbWUsIGluZm8ubG9jYWxlLCBpbmZvLmJ1aWxkSWQgPyB1bmRlZmluZWQgOiBpbmZvLmRlZmF1bHRMb2NhbGUsIGluZm8uaWdub3JlUHJlZml4KTtcbiAgICBpZiAoaW5mby5idWlsZElkIHx8ICFpbmZvLnRyYWlsaW5nU2xhc2gpIHtcbiAgICAgICAgcGF0aG5hbWUgPSByZW1vdmVUcmFpbGluZ1NsYXNoKHBhdGhuYW1lKTtcbiAgICB9XG4gICAgaWYgKGluZm8uYnVpbGRJZCkge1xuICAgICAgICBwYXRobmFtZSA9IGFkZFBhdGhTdWZmaXgoYWRkUGF0aFByZWZpeChwYXRobmFtZSwgXCIvX25leHQvZGF0YS9cIiArIGluZm8uYnVpbGRJZCksIGluZm8ucGF0aG5hbWUgPT09IFwiL1wiID8gXCJpbmRleC5qc29uXCIgOiBcIi5qc29uXCIpO1xuICAgIH1cbiAgICBwYXRobmFtZSA9IGFkZFBhdGhQcmVmaXgocGF0aG5hbWUsIGluZm8uYmFzZVBhdGgpO1xuICAgIHJldHVybiAhaW5mby5idWlsZElkICYmIGluZm8udHJhaWxpbmdTbGFzaCA/ICFwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgPyBhZGRQYXRoU3VmZml4KHBhdGhuYW1lLCBcIi9cIikgOiBwYXRobmFtZSA6IHJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXQtbmV4dC1wYXRobmFtZS1pbmZvLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVUcmFpbGluZ1NsYXNoIiwiYWRkUGF0aFByZWZpeCIsImFkZFBhdGhTdWZmaXgiLCJhZGRMb2NhbGUiLCJmb3JtYXROZXh0UGF0aG5hbWVJbmZvIiwiaW5mbyIsInBhdGhuYW1lIiwibG9jYWxlIiwiYnVpbGRJZCIsInVuZGVmaW5lZCIsImRlZmF1bHRMb2NhbGUiLCJpZ25vcmVQcmVmaXgiLCJ0cmFpbGluZ1NsYXNoIiwiYmFzZVBhdGgiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPathnameInfo: () => (/* binding */ getNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\");\n/* harmony import */ var _remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_2__.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0,_remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    let pathnameNoDataPrefix = info.pathname;\n    if (info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.buildId = buildId;\n        pathnameNoDataPrefix = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        // update pathname with normalized if enabled although\n        // we use normalized to populate locale info still\n        if (options.parseData === true) {\n            info.pathname = pathnameNoDataPrefix;\n        }\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (i18n) {\n        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n        if (!result.detectedLocale && info.buildId) {\n            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);\n            if (result.detectedLocale) {\n                info.locale = result.detectedLocale;\n            }\n        }\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQ2Y7QUFDTjtBQUMzQyxTQUFTRyxvQkFBb0JDLFFBQVEsRUFBRUMsT0FBTztJQUNqRCxJQUFJQztJQUNKLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLGFBQWEsRUFBRSxHQUFHLENBQUNILHNCQUFzQkQsUUFBUUssVUFBVSxLQUFLLE9BQU9KLHNCQUFzQixDQUFDO0lBQ3RILE1BQU1LLE9BQU87UUFDVFA7UUFDQUssZUFBZUwsYUFBYSxNQUFNQSxTQUFTUSxRQUFRLENBQUMsT0FBT0g7SUFDL0Q7SUFDQSxJQUFJRixZQUFZTCwrREFBYUEsQ0FBQ1MsS0FBS1AsUUFBUSxFQUFFRyxXQUFXO1FBQ3BESSxLQUFLUCxRQUFRLEdBQUdILHFFQUFnQkEsQ0FBQ1UsS0FBS1AsUUFBUSxFQUFFRztRQUNoREksS0FBS0osUUFBUSxHQUFHQTtJQUNwQjtJQUNBLElBQUlNLHVCQUF1QkYsS0FBS1AsUUFBUTtJQUN4QyxJQUFJTyxLQUFLUCxRQUFRLENBQUNVLFVBQVUsQ0FBQyxtQkFBbUJILEtBQUtQLFFBQVEsQ0FBQ1EsUUFBUSxDQUFDLFVBQVU7UUFDN0UsTUFBTUcsUUFBUUosS0FBS1AsUUFBUSxDQUFDWSxPQUFPLENBQUMsb0JBQW9CLElBQUlBLE9BQU8sQ0FBQyxXQUFXLElBQUlDLEtBQUssQ0FBQztRQUN6RixNQUFNQyxVQUFVSCxLQUFLLENBQUMsRUFBRTtRQUN4QkosS0FBS08sT0FBTyxHQUFHQTtRQUNmTCx1QkFBdUJFLEtBQUssQ0FBQyxFQUFFLEtBQUssVUFBVSxNQUFNQSxNQUFNSSxLQUFLLENBQUMsR0FBR0MsSUFBSSxDQUFDLE9BQU87UUFDL0Usc0RBQXNEO1FBQ3RELGtEQUFrRDtRQUNsRCxJQUFJZixRQUFRZ0IsU0FBUyxLQUFLLE1BQU07WUFDNUJWLEtBQUtQLFFBQVEsR0FBR1M7UUFDcEI7SUFDSjtJQUNBLDRFQUE0RTtJQUM1RSx5QkFBeUI7SUFDekIsSUFBSUwsTUFBTTtRQUNOLElBQUljLFNBQVNqQixRQUFRa0IsWUFBWSxHQUFHbEIsUUFBUWtCLFlBQVksQ0FBQ0MsT0FBTyxDQUFDYixLQUFLUCxRQUFRLElBQUlKLGdGQUFtQkEsQ0FBQ1csS0FBS1AsUUFBUSxFQUFFSSxLQUFLaUIsT0FBTztRQUNqSWQsS0FBS2UsTUFBTSxHQUFHSixPQUFPSyxjQUFjO1FBQ25DLElBQUlDO1FBQ0pqQixLQUFLUCxRQUFRLEdBQUcsQ0FBQ3dCLG1CQUFtQk4sT0FBT2xCLFFBQVEsS0FBSyxPQUFPd0IsbUJBQW1CakIsS0FBS1AsUUFBUTtRQUMvRixJQUFJLENBQUNrQixPQUFPSyxjQUFjLElBQUloQixLQUFLTyxPQUFPLEVBQUU7WUFDeENJLFNBQVNqQixRQUFRa0IsWUFBWSxHQUFHbEIsUUFBUWtCLFlBQVksQ0FBQ0MsT0FBTyxDQUFDWCx3QkFBd0JiLGdGQUFtQkEsQ0FBQ2Esc0JBQXNCTCxLQUFLaUIsT0FBTztZQUMzSSxJQUFJSCxPQUFPSyxjQUFjLEVBQUU7Z0JBQ3ZCaEIsS0FBS2UsTUFBTSxHQUFHSixPQUFPSyxjQUFjO1lBQ3ZDO1FBQ0o7SUFDSjtJQUNBLE9BQU9oQjtBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8uanM/MTQ1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub3JtYWxpemVMb2NhbGVQYXRoIH0gZnJvbSBcIi4uLy4uL2kxOG4vbm9ybWFsaXplLWxvY2FsZS1wYXRoXCI7XG5pbXBvcnQgeyByZW1vdmVQYXRoUHJlZml4IH0gZnJvbSBcIi4vcmVtb3ZlLXBhdGgtcHJlZml4XCI7XG5pbXBvcnQgeyBwYXRoSGFzUHJlZml4IH0gZnJvbSBcIi4vcGF0aC1oYXMtcHJlZml4XCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV4dFBhdGhuYW1lSW5mbyhwYXRobmFtZSwgb3B0aW9ucykge1xuICAgIHZhciBfb3B0aW9uc19uZXh0Q29uZmlnO1xuICAgIGNvbnN0IHsgYmFzZVBhdGgsIGkxOG4sIHRyYWlsaW5nU2xhc2ggfSA9IChfb3B0aW9uc19uZXh0Q29uZmlnID0gb3B0aW9ucy5uZXh0Q29uZmlnKSAhPSBudWxsID8gX29wdGlvbnNfbmV4dENvbmZpZyA6IHt9O1xuICAgIGNvbnN0IGluZm8gPSB7XG4gICAgICAgIHBhdGhuYW1lLFxuICAgICAgICB0cmFpbGluZ1NsYXNoOiBwYXRobmFtZSAhPT0gXCIvXCIgPyBwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgOiB0cmFpbGluZ1NsYXNoXG4gICAgfTtcbiAgICBpZiAoYmFzZVBhdGggJiYgcGF0aEhhc1ByZWZpeChpbmZvLnBhdGhuYW1lLCBiYXNlUGF0aCkpIHtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IHJlbW92ZVBhdGhQcmVmaXgoaW5mby5wYXRobmFtZSwgYmFzZVBhdGgpO1xuICAgICAgICBpbmZvLmJhc2VQYXRoID0gYmFzZVBhdGg7XG4gICAgfVxuICAgIGxldCBwYXRobmFtZU5vRGF0YVByZWZpeCA9IGluZm8ucGF0aG5hbWU7XG4gICAgaWYgKGluZm8ucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9fbmV4dC9kYXRhL1wiKSAmJiBpbmZvLnBhdGhuYW1lLmVuZHNXaXRoKFwiLmpzb25cIikpIHtcbiAgICAgICAgY29uc3QgcGF0aHMgPSBpbmZvLnBhdGhuYW1lLnJlcGxhY2UoL15cXC9fbmV4dFxcL2RhdGFcXC8vLCBcIlwiKS5yZXBsYWNlKC9cXC5qc29uJC8sIFwiXCIpLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgY29uc3QgYnVpbGRJZCA9IHBhdGhzWzBdO1xuICAgICAgICBpbmZvLmJ1aWxkSWQgPSBidWlsZElkO1xuICAgICAgICBwYXRobmFtZU5vRGF0YVByZWZpeCA9IHBhdGhzWzFdICE9PSBcImluZGV4XCIgPyBcIi9cIiArIHBhdGhzLnNsaWNlKDEpLmpvaW4oXCIvXCIpIDogXCIvXCI7XG4gICAgICAgIC8vIHVwZGF0ZSBwYXRobmFtZSB3aXRoIG5vcm1hbGl6ZWQgaWYgZW5hYmxlZCBhbHRob3VnaFxuICAgICAgICAvLyB3ZSB1c2Ugbm9ybWFsaXplZCB0byBwb3B1bGF0ZSBsb2NhbGUgaW5mbyBzdGlsbFxuICAgICAgICBpZiAob3B0aW9ucy5wYXJzZURhdGEgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGluZm8ucGF0aG5hbWUgPSBwYXRobmFtZU5vRGF0YVByZWZpeDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiBwcm92aWRlZCwgdXNlIHRoZSBsb2NhbGUgcm91dGUgbm9ybWFsaXplciB0byBkZXRlY3QgdGhlIGxvY2FsZSBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIGZ1bmN0aW9uIGJlbG93LlxuICAgIGlmIChpMThuKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBvcHRpb25zLmkxOG5Qcm92aWRlciA/IG9wdGlvbnMuaTE4blByb3ZpZGVyLmFuYWx5emUoaW5mby5wYXRobmFtZSkgOiBub3JtYWxpemVMb2NhbGVQYXRoKGluZm8ucGF0aG5hbWUsIGkxOG4ubG9jYWxlcyk7XG4gICAgICAgIGluZm8ubG9jYWxlID0gcmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICB2YXIgX3Jlc3VsdF9wYXRobmFtZTtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IChfcmVzdWx0X3BhdGhuYW1lID0gcmVzdWx0LnBhdGhuYW1lKSAhPSBudWxsID8gX3Jlc3VsdF9wYXRobmFtZSA6IGluZm8ucGF0aG5hbWU7XG4gICAgICAgIGlmICghcmVzdWx0LmRldGVjdGVkTG9jYWxlICYmIGluZm8uYnVpbGRJZCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gb3B0aW9ucy5pMThuUHJvdmlkZXIgPyBvcHRpb25zLmkxOG5Qcm92aWRlci5hbmFseXplKHBhdGhuYW1lTm9EYXRhUHJlZml4KSA6IG5vcm1hbGl6ZUxvY2FsZVBhdGgocGF0aG5hbWVOb0RhdGFQcmVmaXgsIGkxOG4ubG9jYWxlcyk7XG4gICAgICAgICAgICBpZiAocmVzdWx0LmRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgICAgICAgICAgaW5mby5sb2NhbGUgPSByZXN1bHQuZGV0ZWN0ZWRMb2NhbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1uZXh0LXBhdGhuYW1lLWluZm8uanMubWFwIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJyZW1vdmVQYXRoUHJlZml4IiwicGF0aEhhc1ByZWZpeCIsImdldE5leHRQYXRobmFtZUluZm8iLCJwYXRobmFtZSIsIm9wdGlvbnMiLCJfb3B0aW9uc19uZXh0Q29uZmlnIiwiYmFzZVBhdGgiLCJpMThuIiwidHJhaWxpbmdTbGFzaCIsIm5leHRDb25maWciLCJpbmZvIiwiZW5kc1dpdGgiLCJwYXRobmFtZU5vRGF0YVByZWZpeCIsInN0YXJ0c1dpdGgiLCJwYXRocyIsInJlcGxhY2UiLCJzcGxpdCIsImJ1aWxkSWQiLCJzbGljZSIsImpvaW4iLCJwYXJzZURhdGEiLCJyZXN1bHQiLCJpMThuUHJvdmlkZXIiLCJhbmFseXplIiwibG9jYWxlcyIsImxvY2FsZSIsImRldGVjdGVkTG9jYWxlIiwiX3Jlc3VsdF9wYXRobmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePath: () => (/* binding */ parsePath)\n/* harmony export */ });\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUFVLFNBQVNBLFVBQVVDLElBQUk7SUFDOUIsTUFBTUMsWUFBWUQsS0FBS0UsT0FBTyxDQUFDO0lBQy9CLE1BQU1DLGFBQWFILEtBQUtFLE9BQU8sQ0FBQztJQUNoQyxNQUFNRSxXQUFXRCxhQUFhLENBQUMsS0FBTUYsQ0FBQUEsWUFBWSxLQUFLRSxhQUFhRixTQUFRO0lBQzNFLElBQUlHLFlBQVlILFlBQVksQ0FBQyxHQUFHO1FBQzVCLE9BQU87WUFDSEksVUFBVUwsS0FBS00sU0FBUyxDQUFDLEdBQUdGLFdBQVdELGFBQWFGO1lBQ3BETSxPQUFPSCxXQUFXSixLQUFLTSxTQUFTLENBQUNILFlBQVlGLFlBQVksQ0FBQyxJQUFJQSxZQUFZTyxhQUFhO1lBQ3ZGQyxNQUFNUixZQUFZLENBQUMsSUFBSUQsS0FBS1UsS0FBSyxDQUFDVCxhQUFhO1FBQ25EO0lBQ0o7SUFDQSxPQUFPO1FBQ0hJLFVBQVVMO1FBQ1ZPLE9BQU87UUFDUEUsTUFBTTtJQUNWO0FBQ0osRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcz9iM2M0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYSBwYXRoIHRoaXMgZnVuY3Rpb24gd2lsbCBmaW5kIHRoZSBwYXRobmFtZSwgcXVlcnkgYW5kIGhhc2ggYW5kIHJldHVyblxuICogdGhlbS4gVGhpcyBpcyB1c2VmdWwgdG8gcGFyc2UgZnVsbCBwYXRocyBvbiB0aGUgY2xpZW50IHNpZGUuXG4gKiBAcGFyYW0gcGF0aCBBIHBhdGggdG8gcGFyc2UgZS5nLiAvZm9vL2Jhcj9pZD0xI2hhc2hcbiAqLyBleHBvcnQgZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgICBjb25zdCBoYXNoSW5kZXggPSBwYXRoLmluZGV4T2YoXCIjXCIpO1xuICAgIGNvbnN0IHF1ZXJ5SW5kZXggPSBwYXRoLmluZGV4T2YoXCI/XCIpO1xuICAgIGNvbnN0IGhhc1F1ZXJ5ID0gcXVlcnlJbmRleCA+IC0xICYmIChoYXNoSW5kZXggPCAwIHx8IHF1ZXJ5SW5kZXggPCBoYXNoSW5kZXgpO1xuICAgIGlmIChoYXNRdWVyeSB8fCBoYXNoSW5kZXggPiAtMSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGF0aG5hbWU6IHBhdGguc3Vic3RyaW5nKDAsIGhhc1F1ZXJ5ID8gcXVlcnlJbmRleCA6IGhhc2hJbmRleCksXG4gICAgICAgICAgICBxdWVyeTogaGFzUXVlcnkgPyBwYXRoLnN1YnN0cmluZyhxdWVyeUluZGV4LCBoYXNoSW5kZXggPiAtMSA/IGhhc2hJbmRleCA6IHVuZGVmaW5lZCkgOiBcIlwiLFxuICAgICAgICAgICAgaGFzaDogaGFzaEluZGV4ID4gLTEgPyBwYXRoLnNsaWNlKGhhc2hJbmRleCkgOiBcIlwiXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhdGhuYW1lOiBwYXRoLFxuICAgICAgICBxdWVyeTogXCJcIixcbiAgICAgICAgaGFzaDogXCJcIlxuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbInBhcnNlUGF0aCIsInBhdGgiLCJoYXNoSW5kZXgiLCJpbmRleE9mIiwicXVlcnlJbmRleCIsImhhc1F1ZXJ5IiwicGF0aG5hbWUiLCJzdWJzdHJpbmciLCJxdWVyeSIsInVuZGVmaW5lZCIsImhhc2giLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathHasPrefix: () => (/* binding */ pathHasPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7Ozs7Q0FNQyxHQUFVLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLE9BQU9ELFNBQVMsVUFBVTtRQUMxQixPQUFPO0lBQ1g7SUFDQSxNQUFNLEVBQUVFLFFBQVEsRUFBRSxHQUFHSixzREFBU0EsQ0FBQ0U7SUFDL0IsT0FBT0UsYUFBYUQsVUFBVUMsU0FBU0MsVUFBVSxDQUFDRixTQUFTO0FBQy9ELEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhdGgtaGFzLXByZWZpeC5qcz82NGJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gXCIuL3BhcnNlLXBhdGhcIjtcbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gcGF0aCBzdGFydHMgd2l0aCBhIGdpdmVuIHByZWZpeC4gSXQgZW5zdXJlcyBpdCBtYXRjaGVzXG4gKiBleGFjdGx5IHdpdGhvdXQgY29udGFpbmluZyBleHRyYSBjaGFycy4gZS5nLiBwcmVmaXggL2RvY3Mgc2hvdWxkIHJlcGxhY2VcbiAqIGZvciAvZG9jcywgL2RvY3MvLCAvZG9jcy9hIGJ1dCBub3QgL2RvY3Nzc1xuICogQHBhcmFtIHBhdGggVGhlIHBhdGggdG8gY2hlY2suXG4gKiBAcGFyYW0gcHJlZml4IFRoZSBwcmVmaXggdG8gY2hlY2sgYWdhaW5zdC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gcGF0aEhhc1ByZWZpeChwYXRoLCBwcmVmaXgpIHtcbiAgICBpZiAodHlwZW9mIHBhdGggIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lIH0gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgcmV0dXJuIHBhdGhuYW1lID09PSBwcmVmaXggfHwgcGF0aG5hbWUuc3RhcnRzV2l0aChwcmVmaXggKyBcIi9cIik7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtaGFzLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwicGF0aEhhc1ByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   relativizeURL: () => (/* binding */ relativizeURL)\n/* harmony export */ });\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = baseURL.protocol + \"//\" + baseURL.host;\n    return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n} //# sourceMappingURL=relativize-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVsYXRpdml6ZS11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FBVSxTQUFTQSxjQUFjQyxHQUFHLEVBQUVDLElBQUk7SUFDdkMsTUFBTUMsVUFBVSxPQUFPRCxTQUFTLFdBQVcsSUFBSUUsSUFBSUYsUUFBUUE7SUFDM0QsTUFBTUcsV0FBVyxJQUFJRCxJQUFJSCxLQUFLQztJQUM5QixNQUFNSSxTQUFTSCxRQUFRSSxRQUFRLEdBQUcsT0FBT0osUUFBUUssSUFBSTtJQUNyRCxPQUFPSCxTQUFTRSxRQUFRLEdBQUcsT0FBT0YsU0FBU0csSUFBSSxLQUFLRixTQUFTRCxTQUFTSSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0osUUFBUSxNQUFNRCxTQUFTSSxRQUFRO0FBQzVILEVBRUEsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbGF0aXZpemUtdXJsLmpzPzczZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhIFVSTCBhcyBhIHN0cmluZyBhbmQgYSBiYXNlIFVSTCBpdCB3aWxsIG1ha2UgdGhlIFVSTCByZWxhdGl2ZVxuICogaWYgdGhlIHBhcnNlZCBwcm90b2NvbCBhbmQgaG9zdCBpcyB0aGUgc2FtZSBhcyB0aGUgb25lIGluIHRoZSBiYXNlXG4gKiBVUkwuIE90aGVyd2lzZSBpdCByZXR1cm5zIHRoZSBzYW1lIFVSTCBzdHJpbmcuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHJlbGF0aXZpemVVUkwodXJsLCBiYXNlKSB7XG4gICAgY29uc3QgYmFzZVVSTCA9IHR5cGVvZiBiYXNlID09PSBcInN0cmluZ1wiID8gbmV3IFVSTChiYXNlKSA6IGJhc2U7XG4gICAgY29uc3QgcmVsYXRpdmUgPSBuZXcgVVJMKHVybCwgYmFzZSk7XG4gICAgY29uc3Qgb3JpZ2luID0gYmFzZVVSTC5wcm90b2NvbCArIFwiLy9cIiArIGJhc2VVUkwuaG9zdDtcbiAgICByZXR1cm4gcmVsYXRpdmUucHJvdG9jb2wgKyBcIi8vXCIgKyByZWxhdGl2ZS5ob3N0ID09PSBvcmlnaW4gPyByZWxhdGl2ZS50b1N0cmluZygpLnJlcGxhY2Uob3JpZ2luLCBcIlwiKSA6IHJlbGF0aXZlLnRvU3RyaW5nKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF0aXZpemUtdXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJyZWxhdGl2aXplVVJMIiwidXJsIiwiYmFzZSIsImJhc2VVUkwiLCJVUkwiLCJyZWxhdGl2ZSIsIm9yaWdpbiIsInByb3RvY29sIiwiaG9zdCIsInRvU3RyaW5nIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removePathPrefix: () => (/* binding */ removePathPrefix)\n/* harmony export */ });\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_0__.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xEOzs7Ozs7O0NBT0MsR0FBVSxTQUFTQyxpQkFBaUJDLElBQUksRUFBRUMsTUFBTTtJQUM3Qyx5RUFBeUU7SUFDekUsMEVBQTBFO0lBQzFFLGtCQUFrQjtJQUNsQixFQUFFO0lBQ0Ysb0JBQW9CO0lBQ3BCLEVBQUU7SUFDRixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixJQUFJLENBQUNILCtEQUFhQSxDQUFDRSxNQUFNQyxTQUFTO1FBQzlCLE9BQU9EO0lBQ1g7SUFDQSwrQ0FBK0M7SUFDL0MsTUFBTUUsZ0JBQWdCRixLQUFLRyxLQUFLLENBQUNGLE9BQU9HLE1BQU07SUFDOUMsMkVBQTJFO0lBQzNFLElBQUlGLGNBQWNHLFVBQVUsQ0FBQyxNQUFNO1FBQy9CLE9BQU9IO0lBQ1g7SUFDQSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sTUFBTUE7QUFDakIsRUFFQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzPzExYTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGF0aEhhc1ByZWZpeCB9IGZyb20gXCIuL3BhdGgtaGFzLXByZWZpeFwiO1xuLyoqXG4gKiBHaXZlbiBhIHBhdGggYW5kIGEgcHJlZml4IGl0IHdpbGwgcmVtb3ZlIHRoZSBwcmVmaXggd2hlbiBpdCBleGlzdHMgaW4gdGhlXG4gKiBnaXZlbiBwYXRoLiBJdCBlbnN1cmVzIGl0IG1hdGNoZXMgZXhhY3RseSB3aXRob3V0IGNvbnRhaW5pbmcgZXh0cmEgY2hhcnNcbiAqIGFuZCBpZiB0aGUgcHJlZml4IGlzIG5vdCB0aGVyZSBpdCB3aWxsIGJlIG5vb3AuXG4gKlxuICogQHBhcmFtIHBhdGggVGhlIHBhdGggdG8gcmVtb3ZlIHRoZSBwcmVmaXggZnJvbS5cbiAqIEBwYXJhbSBwcmVmaXggVGhlIHByZWZpeCB0byBiZSByZW1vdmVkLlxuICovIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIC8vIElmIHRoZSBwYXRoIGRvZXNuJ3Qgc3RhcnQgd2l0aCB0aGUgcHJlZml4IHdlIGNhbiByZXR1cm4gaXQgYXMgaXMuIFRoaXNcbiAgICAvLyBwcm90ZWN0cyB1cyBmcm9tIHNpdHVhdGlvbnMgd2hlcmUgdGhlIHByZWZpeCBpcyBhIHN1YnN0cmluZyBvZiB0aGUgcGF0aFxuICAgIC8vIHByZWZpeCBzdWNoIGFzOlxuICAgIC8vXG4gICAgLy8gRm9yIHByZWZpeDogL2Jsb2dcbiAgICAvL1xuICAgIC8vICAgL2Jsb2cgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2cvIC0+IHRydWVcbiAgICAvLyAgIC9ibG9nLzEgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2dnaW5nIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvMSAtPiBmYWxzZVxuICAgIGlmICghcGF0aEhhc1ByZWZpeChwYXRoLCBwcmVmaXgpKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICAvLyBSZW1vdmUgdGhlIHByZWZpeCBmcm9tIHRoZSBwYXRoIHZpYSBzbGljaW5nLlxuICAgIGNvbnN0IHdpdGhvdXRQcmVmaXggPSBwYXRoLnNsaWNlKHByZWZpeC5sZW5ndGgpO1xuICAgIC8vIElmIHRoZSBwYXRoIHdpdGhvdXQgdGhlIHByZWZpeCBzdGFydHMgd2l0aCBhIGAvYCB3ZSBjYW4gcmV0dXJuIGl0IGFzIGlzLlxuICAgIGlmICh3aXRob3V0UHJlZml4LnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIHJldHVybiB3aXRob3V0UHJlZml4O1xuICAgIH1cbiAgICAvLyBJZiB0aGUgcGF0aCB3aXRob3V0IHRoZSBwcmVmaXggZG9lc24ndCBzdGFydCB3aXRoIGEgYC9gIHdlIG5lZWQgdG8gYWRkIGl0XG4gICAgLy8gYmFjayB0byB0aGUgcGF0aCB0byBtYWtlIHN1cmUgaXQncyBhIHZhbGlkIHBhdGguXG4gICAgcmV0dXJuIFwiL1wiICsgd2l0aG91dFByZWZpeDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXBhdGgtcHJlZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJwYXRoSGFzUHJlZml4IiwicmVtb3ZlUGF0aFByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJ3aXRob3V0UHJlZml4Iiwic2xpY2UiLCJsZW5ndGgiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTrailingSlash: () => (/* binding */ removeTrailingSlash)\n/* harmony export */ });\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FBVSxTQUFTQSxvQkFBb0JDLEtBQUs7SUFDekMsT0FBT0EsTUFBTUMsT0FBTyxDQUFDLE9BQU8sT0FBTztBQUN2QyxFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtdHJhaWxpbmctc2xhc2guanM/ODJmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgdGhlIHRyYWlsaW5nIHNsYXNoIGZvciBhIGdpdmVuIHJvdXRlIG9yIHBhZ2UgcGF0aC4gUHJlc2VydmVzIHRoZVxuICogcm9vdCBwYWdlLiBFeGFtcGxlczpcbiAqICAgLSBgL2Zvby9iYXIvYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9mb28vYmFyYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9gIC0+IGAvYFxuICovIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVUcmFpbGluZ1NsYXNoKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlLnJlcGxhY2UoL1xcLyQvLCBcIlwiKSB8fCBcIi9cIjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVUcmFpbGluZ1NsYXNoIiwicm91dGUiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/segment.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SEGMENT_KEY: () => (/* binding */ DEFAULT_SEGMENT_KEY),\n/* harmony export */   PAGE_SEGMENT_KEY: () => (/* binding */ PAGE_SEGMENT_KEY),\n/* harmony export */   isGroupSegment: () => (/* binding */ isGroupSegment)\n/* harmony export */ });\nfunction isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === \"(\" && segment.endsWith(\")\");\n}\nconst PAGE_SEGMENT_KEY = \"__PAGE__\";\nconst DEFAULT_SEGMENT_KEY = \"__DEFAULT__\"; //# sourceMappingURL=segment.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZWdtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLGVBQWVDLE9BQU87SUFDbEMsc0NBQXNDO0lBQ3RDLE9BQU9BLE9BQU8sQ0FBQyxFQUFFLEtBQUssT0FBT0EsUUFBUUMsUUFBUSxDQUFDO0FBQ2xEO0FBQ08sTUFBTUMsbUJBQW1CLFdBQVc7QUFDcEMsTUFBTUMsc0JBQXNCLGNBQWMsQ0FFakQsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvc2VnbWVudC5qcz9mY2Q2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0dyb3VwU2VnbWVudChzZWdtZW50KSB7XG4gICAgLy8gVXNlIGFycmF5WzBdIGZvciBwZXJmb3JtYW50IHB1cnBvc2VcbiAgICByZXR1cm4gc2VnbWVudFswXSA9PT0gXCIoXCIgJiYgc2VnbWVudC5lbmRzV2l0aChcIilcIik7XG59XG5leHBvcnQgY29uc3QgUEFHRV9TRUdNRU5UX0tFWSA9IFwiX19QQUdFX19cIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NFR01FTlRfS0VZID0gXCJfX0RFRkFVTFRfX1wiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWdtZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJpc0dyb3VwU2VnbWVudCIsInNlZ21lbnQiLCJlbmRzV2l0aCIsIlBBR0VfU0VHTUVOVF9LRVkiLCJERUZBVUxUX1NFR01FTlRfS0VZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerInsertedHTMLContext: () => (/* binding */ ServerInsertedHTMLContext),\n/* harmony export */   useServerInsertedHTML: () => (/* binding */ useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nconst ServerInsertedHTMLContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nfunction useServerInsertedHTML(callback) {\n    const addInsertedServerHTMLCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ServerInsertedHTMLContext);\n    // Should have no effects on client where there's no flush effects provider\n    if (addInsertedServerHTMLCallback) {\n        addInsertedServerHTMLCallback(callback);\n    }\n} //# sourceMappingURL=server-inserted-html.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZXJ2ZXItaW5zZXJ0ZWQtaHRtbC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFFMEM7QUFDMUMsd0VBQXdFO0FBQ3hFLHNEQUFzRDtBQUN0RCxFQUFFO0FBQ0YsMENBQTBDO0FBQzFDLEVBQUU7QUFDRiwwREFBMEQ7QUFDbkQsTUFBTUUsNEJBQTRCLFdBQVcsR0FBR0YsMERBQW1CLENBQUMsTUFBTTtBQUMxRSxTQUFTSSxzQkFBc0JDLFFBQVE7SUFDMUMsTUFBTUMsZ0NBQWdDTCxpREFBVUEsQ0FBQ0M7SUFDakQsMkVBQTJFO0lBQzNFLElBQUlJLCtCQUErQjtRQUMvQkEsOEJBQThCRDtJQUNsQztBQUNKLEVBRUEsK0RBQStEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvc2VydmVyLWluc2VydGVkLWh0bWwuc2hhcmVkLXJ1bnRpbWUuanM/NjUwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbi8vIFVzZSBgUmVhY3QuY3JlYXRlQ29udGV4dGAgdG8gYXZvaWQgZXJyb3JzIGZyb20gdGhlIFJTQyBjaGVja3MgYmVjYXVzZVxuLy8gaXQgY2FuJ3QgYmUgaW1wb3J0ZWQgZGlyZWN0bHkgaW4gU2VydmVyIENvbXBvbmVudHM6XG4vL1xuLy8gICBpbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSAncmVhY3QnXG4vL1xuLy8gTW9yZSBpbmZvOiBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvcHVsbC80MDY4NlxuZXhwb3J0IGNvbnN0IFNlcnZlckluc2VydGVkSFRNTENvbnRleHQgPSAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgZnVuY3Rpb24gdXNlU2VydmVySW5zZXJ0ZWRIVE1MKGNhbGxiYWNrKSB7XG4gICAgY29uc3QgYWRkSW5zZXJ0ZWRTZXJ2ZXJIVE1MQ2FsbGJhY2sgPSB1c2VDb250ZXh0KFNlcnZlckluc2VydGVkSFRNTENvbnRleHQpO1xuICAgIC8vIFNob3VsZCBoYXZlIG5vIGVmZmVjdHMgb24gY2xpZW50IHdoZXJlIHRoZXJlJ3Mgbm8gZmx1c2ggZWZmZWN0cyBwcm92aWRlclxuICAgIGlmIChhZGRJbnNlcnRlZFNlcnZlckhUTUxDYWxsYmFjaykge1xuICAgICAgICBhZGRJbnNlcnRlZFNlcnZlckhUTUxDYWxsYmFjayhjYWxsYmFjayk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2ZXItaW5zZXJ0ZWQtaHRtbC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VDb250ZXh0IiwiU2VydmVySW5zZXJ0ZWRIVE1MQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VTZXJ2ZXJJbnNlcnRlZEhUTUwiLCJjYWxsYmFjayIsImFkZEluc2VydGVkU2VydmVySFRNTENhbGxiYWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/context.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    withRequest: function() {\n        return withRequest;\n    },\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    }\n});\nconst _nodeasync_hooks = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, \"next-test-proxy-port\");\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, \"next-test-data\") || \"\";\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n} //# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsY0FBYyxDQUFDTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsYUFBYTtRQUNULE9BQU9BO0lBQ1g7SUFDQUMsZ0JBQWdCO1FBQ1osT0FBT0E7SUFDWDtBQUNKO0FBQ0EsTUFBTU8sbUJBQW1CQyxtQkFBT0EsQ0FBQywwQ0FBa0I7QUFDbkQsTUFBTUMsY0FBYyxJQUFJRixpQkFBaUJHLGlCQUFpQjtBQUMxRCxTQUFTQywyQkFBMkJDLEdBQUcsRUFBRUMsTUFBTTtJQUMzQyxNQUFNQyxrQkFBa0JELE9BQU9FLE1BQU0sQ0FBQ0gsS0FBSztJQUMzQyxJQUFJLENBQUNFLGlCQUFpQjtRQUNsQixPQUFPRTtJQUNYO0lBQ0EsTUFBTUMsTUFBTUosT0FBT0ksR0FBRyxDQUFDTDtJQUN2QixNQUFNTSxZQUFZQyxPQUFPTDtJQUN6QixNQUFNTSxXQUFXUCxPQUFPRSxNQUFNLENBQUNILEtBQUsscUJBQXFCO0lBQ3pELE9BQU87UUFDSEs7UUFDQUM7UUFDQUU7SUFDSjtBQUNKO0FBQ0EsU0FBU3JCLFlBQVlhLEdBQUcsRUFBRUMsTUFBTSxFQUFFUSxFQUFFO0lBQ2hDLE1BQU1DLGNBQWNYLDJCQUEyQkMsS0FBS0M7SUFDcEQsSUFBSSxDQUFDUyxhQUFhO1FBQ2QsT0FBT0Q7SUFDWDtJQUNBLE9BQU9aLFlBQVljLEdBQUcsQ0FBQ0QsYUFBYUQ7QUFDeEM7QUFDQSxTQUFTckIsZUFBZVksR0FBRyxFQUFFQyxNQUFNO0lBQy9CLE1BQU1TLGNBQWNiLFlBQVllLFFBQVE7SUFDeEMsSUFBSUYsYUFBYTtRQUNiLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixPQUFPQyxRQUFRO1FBQ2YsT0FBT0YsMkJBQTJCQyxLQUFLQztJQUMzQztJQUNBLE9BQU9HO0FBQ1gsRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcz85MzU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgd2l0aFJlcXVlc3Q6IG51bGwsXG4gICAgZ2V0VGVzdFJlcUluZm86IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgd2l0aFJlcXVlc3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd2l0aFJlcXVlc3Q7XG4gICAgfSxcbiAgICBnZXRUZXN0UmVxSW5mbzogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRUZXN0UmVxSW5mbztcbiAgICB9XG59KTtcbmNvbnN0IF9ub2RlYXN5bmNfaG9va3MgPSByZXF1aXJlKFwibm9kZTphc3luY19ob29rc1wiKTtcbmNvbnN0IHRlc3RTdG9yYWdlID0gbmV3IF9ub2RlYXN5bmNfaG9va3MuQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbmZ1bmN0aW9uIGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKSB7XG4gICAgY29uc3QgcHJveHlQb3J0SGVhZGVyID0gcmVhZGVyLmhlYWRlcihyZXEsIFwibmV4dC10ZXN0LXByb3h5LXBvcnRcIik7XG4gICAgaWYgKCFwcm94eVBvcnRIZWFkZXIpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgdXJsID0gcmVhZGVyLnVybChyZXEpO1xuICAgIGNvbnN0IHByb3h5UG9ydCA9IE51bWJlcihwcm94eVBvcnRIZWFkZXIpO1xuICAgIGNvbnN0IHRlc3REYXRhID0gcmVhZGVyLmhlYWRlcihyZXEsIFwibmV4dC10ZXN0LWRhdGFcIikgfHwgXCJcIjtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cmwsXG4gICAgICAgIHByb3h5UG9ydCxcbiAgICAgICAgdGVzdERhdGFcbiAgICB9O1xufVxuZnVuY3Rpb24gd2l0aFJlcXVlc3QocmVxLCByZWFkZXIsIGZuKSB7XG4gICAgY29uc3QgdGVzdFJlcUluZm8gPSBleHRyYWN0VGVzdEluZm9Gcm9tUmVxdWVzdChyZXEsIHJlYWRlcik7XG4gICAgaWYgKCF0ZXN0UmVxSW5mbykge1xuICAgICAgICByZXR1cm4gZm4oKTtcbiAgICB9XG4gICAgcmV0dXJuIHRlc3RTdG9yYWdlLnJ1bih0ZXN0UmVxSW5mbywgZm4pO1xufVxuZnVuY3Rpb24gZ2V0VGVzdFJlcUluZm8ocmVxLCByZWFkZXIpIHtcbiAgICBjb25zdCB0ZXN0UmVxSW5mbyA9IHRlc3RTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKHRlc3RSZXFJbmZvKSB7XG4gICAgICAgIHJldHVybiB0ZXN0UmVxSW5mbztcbiAgICB9XG4gICAgaWYgKHJlcSAmJiByZWFkZXIpIHtcbiAgICAgICAgcmV0dXJuIGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGV4dC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJ3aXRoUmVxdWVzdCIsImdldFRlc3RSZXFJbmZvIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX25vZGVhc3luY19ob29rcyIsInJlcXVpcmUiLCJ0ZXN0U3RvcmFnZSIsIkFzeW5jTG9jYWxTdG9yYWdlIiwiZXh0cmFjdFRlc3RJbmZvRnJvbVJlcXVlc3QiLCJyZXEiLCJyZWFkZXIiLCJwcm94eVBvcnRIZWFkZXIiLCJoZWFkZXIiLCJ1bmRlZmluZWQiLCJ1cmwiLCJwcm94eVBvcnQiLCJOdW1iZXIiLCJ0ZXN0RGF0YSIsImZuIiwidGVzdFJlcUluZm8iLCJydW4iLCJnZXRTdG9yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/fetch.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    reader: function() {\n        return reader;\n    },\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? \"\").split(\"\\n\");\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes(\"/next/dist/\"));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace(\"webpack-internal:///(rsc)/\", \"\").trim());\n    return stack.join(\"    \");\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: \"fetch\",\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    \"next-test-stack\",\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString(\"base64\") : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, \"base64\") : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        throw new Error(`No test info for ${request.method} ${request.url}`);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: \"POST\",\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw new Error(`Proxy request failed: ${resp.status}`);\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case \"continue\":\n            return originalFetch(request);\n        case \"abort\":\n        case \"unhandled\":\n            throw new Error(`Proxy request aborted [${request.method} ${request.url}]`);\n        default:\n            break;\n    }\n    return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n    __webpack_require__.g.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        __webpack_require__.g.fetch = originalFetch;\n    };\n} //# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvZmV0Y2guanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBSU47QUFDQSxTQUFTSSxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJVixPQUFPQyxjQUFjLENBQUNRLFFBQVFFLE1BQU07UUFDcERDLFlBQVk7UUFDWkMsS0FBS0gsR0FBRyxDQUFDQyxLQUFLO0lBQ2xCO0FBQ0o7QUFDQUgsUUFBUU4sU0FBUztJQUNiRyxRQUFRO1FBQ0osT0FBT0E7SUFDWDtJQUNBQyxhQUFhO1FBQ1QsT0FBT0E7SUFDWDtJQUNBQyxnQkFBZ0I7UUFDWixPQUFPQTtJQUNYO0FBQ0o7QUFDQSxNQUFNTyxXQUFXQyxtQkFBT0EsQ0FBQyx5RkFBVztBQUNwQyxNQUFNVixTQUFTO0lBQ1hXLEtBQUtDLEdBQUc7UUFDSixPQUFPQSxJQUFJRCxHQUFHO0lBQ2xCO0lBQ0FFLFFBQVFELEdBQUcsRUFBRU4sSUFBSTtRQUNiLE9BQU9NLElBQUlFLE9BQU8sQ0FBQ04sR0FBRyxDQUFDRjtJQUMzQjtBQUNKO0FBQ0EsU0FBU1M7SUFDTCxJQUFJQyxRQUFRLENBQUMsSUFBSUMsUUFBUUQsS0FBSyxJQUFJLEVBQUMsRUFBR0UsS0FBSyxDQUFDO0lBQzVDLHFEQUFxRDtJQUNyRCxJQUFJLElBQUlDLElBQUksR0FBR0EsSUFBSUgsTUFBTUksTUFBTSxFQUFFRCxJQUFJO1FBQ2pDLElBQUlILEtBQUssQ0FBQ0csRUFBRSxDQUFDQyxNQUFNLEdBQUcsR0FBRztZQUNyQkosUUFBUUEsTUFBTUssS0FBSyxDQUFDRjtZQUNwQjtRQUNKO0lBQ0o7SUFDQSwrQkFBK0I7SUFDL0JILFFBQVFBLE1BQU1NLE1BQU0sQ0FBQyxDQUFDQyxJQUFJLENBQUNBLEVBQUVDLFFBQVEsQ0FBQztJQUN0QyxtQkFBbUI7SUFDbkJSLFFBQVFBLE1BQU1LLEtBQUssQ0FBQyxHQUFHO0lBQ3ZCLHVDQUF1QztJQUN2Q0wsUUFBUUEsTUFBTVMsR0FBRyxDQUFDLENBQUNDLElBQUlBLEVBQUVDLE9BQU8sQ0FBQyw4QkFBOEIsSUFBSUMsSUFBSTtJQUN2RSxPQUFPWixNQUFNYSxJQUFJLENBQUM7QUFDdEI7QUFDQSxlQUFlQyxrQkFBa0JDLFFBQVEsRUFBRUMsT0FBTztJQUM5QyxNQUFNLEVBQUVyQixHQUFHLEVBQUVzQixNQUFNLEVBQUVuQixPQUFPLEVBQUVvQixJQUFJLEVBQUVDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxTQUFTLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLGNBQWMsRUFBRSxHQUFHVDtJQUNoSCxPQUFPO1FBQ0hEO1FBQ0FXLEtBQUs7UUFDTFYsU0FBUztZQUNMckI7WUFDQXNCO1lBQ0FuQixTQUFTO21CQUNGNkIsTUFBTUMsSUFBSSxDQUFDOUI7Z0JBQ2Q7b0JBQ0k7b0JBQ0FDO2lCQUNIO2FBQ0o7WUFDRG1CLE1BQU1BLE9BQU9XLE1BQU1BLENBQUNELElBQUksQ0FBQyxNQUFNWixRQUFRYyxXQUFXLElBQUlDLFFBQVEsQ0FBQyxZQUFZO1lBQzNFWjtZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztRQUNKO0lBQ0o7QUFDSjtBQUNBLFNBQVNPLGNBQWNDLGFBQWE7SUFDaEMsTUFBTSxFQUFFQyxNQUFNLEVBQUVwQyxPQUFPLEVBQUVvQixJQUFJLEVBQUUsR0FBR2UsY0FBY0UsUUFBUTtJQUN4RCxPQUFPLElBQUlDLFNBQVNsQixPQUFPVyxNQUFNQSxDQUFDRCxJQUFJLENBQUNWLE1BQU0sWUFBWSxNQUFNO1FBQzNEZ0I7UUFDQXBDLFNBQVMsSUFBSXVDLFFBQVF2QztJQUN6QjtBQUNKO0FBQ0EsZUFBZWIsWUFBWXFELGFBQWEsRUFBRXRCLE9BQU87SUFDN0MsTUFBTXVCLFdBQVcsQ0FBQyxHQUFHOUMsU0FBUytDLGNBQWMsRUFBRXhCLFNBQVNoQztJQUN2RCxJQUFJLENBQUN1RCxVQUFVO1FBQ1gsTUFBTSxJQUFJdEMsTUFBTSxDQUFDLGlCQUFpQixFQUFFZSxRQUFRQyxNQUFNLENBQUMsQ0FBQyxFQUFFRCxRQUFRckIsR0FBRyxDQUFDLENBQUM7SUFDdkU7SUFDQSxNQUFNLEVBQUVvQixRQUFRLEVBQUUwQixTQUFTLEVBQUUsR0FBR0Y7SUFDaEMsTUFBTUcsZUFBZSxNQUFNNUIsa0JBQWtCQyxVQUFVQztJQUN2RCxNQUFNMkIsT0FBTyxNQUFNTCxjQUFjLENBQUMsaUJBQWlCLEVBQUVHLFVBQVUsQ0FBQyxFQUFFO1FBQzlEeEIsUUFBUTtRQUNSQyxNQUFNMEIsS0FBS0MsU0FBUyxDQUFDSDtRQUNyQkksTUFBTTtZQUNGLGFBQWE7WUFDYkMsVUFBVTtRQUNkO0lBQ0o7SUFDQSxJQUFJLENBQUNKLEtBQUtLLEVBQUUsRUFBRTtRQUNWLE1BQU0sSUFBSS9DLE1BQU0sQ0FBQyxzQkFBc0IsRUFBRTBDLEtBQUtULE1BQU0sQ0FBQyxDQUFDO0lBQzFEO0lBQ0EsTUFBTUQsZ0JBQWdCLE1BQU1VLEtBQUtNLElBQUk7SUFDckMsTUFBTSxFQUFFdkIsR0FBRyxFQUFFLEdBQUdPO0lBQ2hCLE9BQU9QO1FBQ0gsS0FBSztZQUNELE9BQU9ZLGNBQWN0QjtRQUN6QixLQUFLO1FBQ0wsS0FBSztZQUNELE1BQU0sSUFBSWYsTUFBTSxDQUFDLHVCQUF1QixFQUFFZSxRQUFRQyxNQUFNLENBQUMsQ0FBQyxFQUFFRCxRQUFRckIsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM5RTtZQUNJO0lBQ1I7SUFDQSxPQUFPcUMsY0FBY0M7QUFDekI7QUFDQSxTQUFTL0MsZUFBZW9ELGFBQWE7SUFDakNZLHFCQUFNQSxDQUFDQyxLQUFLLEdBQUcsU0FBU0MsVUFBVUMsS0FBSyxFQUFFQyxJQUFJO1FBQ3pDLElBQUlDO1FBQ0osaUNBQWlDO1FBQ2pDLGFBQWE7UUFDYixJQUFJRCxRQUFRLE9BQU8sS0FBSyxJQUFJLENBQUNDLGFBQWFELEtBQUtSLElBQUksS0FBSyxPQUFPLEtBQUssSUFBSVMsV0FBV1IsUUFBUSxFQUFFO1lBQ3pGLE9BQU9ULGNBQWNlLE9BQU9DO1FBQ2hDO1FBQ0EsT0FBT3JFLFlBQVlxRCxlQUFlLElBQUlrQixRQUFRSCxPQUFPQztJQUN6RDtJQUNBLE9BQU87UUFDSEoscUJBQU1BLENBQUNDLEtBQUssR0FBR2I7SUFDbkI7QUFDSixFQUVBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2V4cGVyaW1lbnRhbC90ZXN0bW9kZS9mZXRjaC5qcz85NmYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgcmVhZGVyOiBudWxsLFxuICAgIGhhbmRsZUZldGNoOiBudWxsLFxuICAgIGludGVyY2VwdEZldGNoOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIHJlYWRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZWFkZXI7XG4gICAgfSxcbiAgICBoYW5kbGVGZXRjaDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVGZXRjaDtcbiAgICB9LFxuICAgIGludGVyY2VwdEZldGNoOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGludGVyY2VwdEZldGNoO1xuICAgIH1cbn0pO1xuY29uc3QgX2NvbnRleHQgPSByZXF1aXJlKFwiLi9jb250ZXh0XCIpO1xuY29uc3QgcmVhZGVyID0ge1xuICAgIHVybCAocmVxKSB7XG4gICAgICAgIHJldHVybiByZXEudXJsO1xuICAgIH0sXG4gICAgaGVhZGVyIChyZXEsIG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHJlcS5oZWFkZXJzLmdldChuYW1lKTtcbiAgICB9XG59O1xuZnVuY3Rpb24gZ2V0VGVzdFN0YWNrKCkge1xuICAgIGxldCBzdGFjayA9IChuZXcgRXJyb3IoKS5zdGFjayA/PyBcIlwiKS5zcGxpdChcIlxcblwiKTtcbiAgICAvLyBTa2lwIHRoZSBmaXJzdCBsaW5lIGFuZCBmaW5kIGZpcnN0IG5vbi1lbXB0eSBsaW5lLlxuICAgIGZvcihsZXQgaSA9IDE7IGkgPCBzdGFjay5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGlmIChzdGFja1tpXS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBzdGFjayA9IHN0YWNrLnNsaWNlKGkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gRmlsdGVyIG91dCBmcmFubWV3b3JrIGxpbmVzLlxuICAgIHN0YWNrID0gc3RhY2suZmlsdGVyKChmKT0+IWYuaW5jbHVkZXMoXCIvbmV4dC9kaXN0L1wiKSk7XG4gICAgLy8gQXQgbW9zdCA1IGxpbmVzLlxuICAgIHN0YWNrID0gc3RhY2suc2xpY2UoMCwgNSk7XG4gICAgLy8gQ2xlYW51cCBzb21lIGludGVybmFsIGluZm8gYW5kIHRyaW0uXG4gICAgc3RhY2sgPSBzdGFjay5tYXAoKHMpPT5zLnJlcGxhY2UoXCJ3ZWJwYWNrLWludGVybmFsOi8vLyhyc2MpL1wiLCBcIlwiKS50cmltKCkpO1xuICAgIHJldHVybiBzdGFjay5qb2luKFwiICAgIFwiKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGJ1aWxkUHJveHlSZXF1ZXN0KHRlc3REYXRhLCByZXF1ZXN0KSB7XG4gICAgY29uc3QgeyB1cmwsIG1ldGhvZCwgaGVhZGVycywgYm9keSwgY2FjaGUsIGNyZWRlbnRpYWxzLCBpbnRlZ3JpdHksIG1vZGUsIHJlZGlyZWN0LCByZWZlcnJlciwgcmVmZXJyZXJQb2xpY3kgfSA9IHJlcXVlc3Q7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGVzdERhdGEsXG4gICAgICAgIGFwaTogXCJmZXRjaFwiLFxuICAgICAgICByZXF1ZXN0OiB7XG4gICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICBoZWFkZXJzOiBbXG4gICAgICAgICAgICAgICAgLi4uQXJyYXkuZnJvbShoZWFkZXJzKSxcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIFwibmV4dC10ZXN0LXN0YWNrXCIsXG4gICAgICAgICAgICAgICAgICAgIGdldFRlc3RTdGFjaygpXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGJvZHk6IGJvZHkgPyBCdWZmZXIuZnJvbShhd2FpdCByZXF1ZXN0LmFycmF5QnVmZmVyKCkpLnRvU3RyaW5nKFwiYmFzZTY0XCIpIDogbnVsbCxcbiAgICAgICAgICAgIGNhY2hlLFxuICAgICAgICAgICAgY3JlZGVudGlhbHMsXG4gICAgICAgICAgICBpbnRlZ3JpdHksXG4gICAgICAgICAgICBtb2RlLFxuICAgICAgICAgICAgcmVkaXJlY3QsXG4gICAgICAgICAgICByZWZlcnJlcixcbiAgICAgICAgICAgIHJlZmVycmVyUG9saWN5XG4gICAgICAgIH1cbiAgICB9O1xufVxuZnVuY3Rpb24gYnVpbGRSZXNwb25zZShwcm94eVJlc3BvbnNlKSB7XG4gICAgY29uc3QgeyBzdGF0dXMsIGhlYWRlcnMsIGJvZHkgfSA9IHByb3h5UmVzcG9uc2UucmVzcG9uc2U7XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShib2R5ID8gQnVmZmVyLmZyb20oYm9keSwgXCJiYXNlNjRcIikgOiBudWxsLCB7XG4gICAgICAgIHN0YXR1cyxcbiAgICAgICAgaGVhZGVyczogbmV3IEhlYWRlcnMoaGVhZGVycylcbiAgICB9KTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUZldGNoKG9yaWdpbmFsRmV0Y2gsIHJlcXVlc3QpIHtcbiAgICBjb25zdCB0ZXN0SW5mbyA9ICgwLCBfY29udGV4dC5nZXRUZXN0UmVxSW5mbykocmVxdWVzdCwgcmVhZGVyKTtcbiAgICBpZiAoIXRlc3RJbmZvKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gdGVzdCBpbmZvIGZvciAke3JlcXVlc3QubWV0aG9kfSAke3JlcXVlc3QudXJsfWApO1xuICAgIH1cbiAgICBjb25zdCB7IHRlc3REYXRhLCBwcm94eVBvcnQgfSA9IHRlc3RJbmZvO1xuICAgIGNvbnN0IHByb3h5UmVxdWVzdCA9IGF3YWl0IGJ1aWxkUHJveHlSZXF1ZXN0KHRlc3REYXRhLCByZXF1ZXN0KTtcbiAgICBjb25zdCByZXNwID0gYXdhaXQgb3JpZ2luYWxGZXRjaChgaHR0cDovL2xvY2FsaG9zdDoke3Byb3h5UG9ydH1gLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHByb3h5UmVxdWVzdCksXG4gICAgICAgIG5leHQ6IHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGludGVybmFsOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoIXJlc3Aub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcm94eSByZXF1ZXN0IGZhaWxlZDogJHtyZXNwLnN0YXR1c31gKTtcbiAgICB9XG4gICAgY29uc3QgcHJveHlSZXNwb25zZSA9IGF3YWl0IHJlc3AuanNvbigpO1xuICAgIGNvbnN0IHsgYXBpIH0gPSBwcm94eVJlc3BvbnNlO1xuICAgIHN3aXRjaChhcGkpe1xuICAgICAgICBjYXNlIFwiY29udGludWVcIjpcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEZldGNoKHJlcXVlc3QpO1xuICAgICAgICBjYXNlIFwiYWJvcnRcIjpcbiAgICAgICAgY2FzZSBcInVuaGFuZGxlZFwiOlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcm94eSByZXF1ZXN0IGFib3J0ZWQgWyR7cmVxdWVzdC5tZXRob2R9ICR7cmVxdWVzdC51cmx9XWApO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBidWlsZFJlc3BvbnNlKHByb3h5UmVzcG9uc2UpO1xufVxuZnVuY3Rpb24gaW50ZXJjZXB0RmV0Y2gob3JpZ2luYWxGZXRjaCkge1xuICAgIGdsb2JhbC5mZXRjaCA9IGZ1bmN0aW9uIHRlc3RGZXRjaChpbnB1dCwgaW5pdCkge1xuICAgICAgICB2YXIgX2luaXRfbmV4dDtcbiAgICAgICAgLy8gUGFzc3Rocm91Z2ggaW50ZXJuYWwgcmVxdWVzdHMuXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaWYgKGluaXQgPT0gbnVsbCA/IHZvaWQgMCA6IChfaW5pdF9uZXh0ID0gaW5pdC5uZXh0KSA9PSBudWxsID8gdm9pZCAwIDogX2luaXRfbmV4dC5pbnRlcm5hbCkge1xuICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsRmV0Y2goaW5wdXQsIGluaXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoYW5kbGVGZXRjaChvcmlnaW5hbEZldGNoLCBuZXcgUmVxdWVzdChpbnB1dCwgaW5pdCkpO1xuICAgIH07XG4gICAgcmV0dXJuICgpPT57XG4gICAgICAgIGdsb2JhbC5mZXRjaCA9IG9yaWdpbmFsRmV0Y2g7XG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwicmVhZGVyIiwiaGFuZGxlRmV0Y2giLCJpbnRlcmNlcHRGZXRjaCIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9jb250ZXh0IiwicmVxdWlyZSIsInVybCIsInJlcSIsImhlYWRlciIsImhlYWRlcnMiLCJnZXRUZXN0U3RhY2siLCJzdGFjayIsIkVycm9yIiwic3BsaXQiLCJpIiwibGVuZ3RoIiwic2xpY2UiLCJmaWx0ZXIiLCJmIiwiaW5jbHVkZXMiLCJtYXAiLCJzIiwicmVwbGFjZSIsInRyaW0iLCJqb2luIiwiYnVpbGRQcm94eVJlcXVlc3QiLCJ0ZXN0RGF0YSIsInJlcXVlc3QiLCJtZXRob2QiLCJib2R5IiwiY2FjaGUiLCJjcmVkZW50aWFscyIsImludGVncml0eSIsIm1vZGUiLCJyZWRpcmVjdCIsInJlZmVycmVyIiwicmVmZXJyZXJQb2xpY3kiLCJhcGkiLCJBcnJheSIsImZyb20iLCJCdWZmZXIiLCJhcnJheUJ1ZmZlciIsInRvU3RyaW5nIiwiYnVpbGRSZXNwb25zZSIsInByb3h5UmVzcG9uc2UiLCJzdGF0dXMiLCJyZXNwb25zZSIsIlJlc3BvbnNlIiwiSGVhZGVycyIsIm9yaWdpbmFsRmV0Y2giLCJ0ZXN0SW5mbyIsImdldFRlc3RSZXFJbmZvIiwicHJveHlQb3J0IiwicHJveHlSZXF1ZXN0IiwicmVzcCIsIkpTT04iLCJzdHJpbmdpZnkiLCJuZXh0IiwiaW50ZXJuYWwiLCJvayIsImpzb24iLCJnbG9iYWwiLCJmZXRjaCIsInRlc3RGZXRjaCIsImlucHV0IiwiaW5pdCIsIl9pbml0X25leHQiLCJSZXF1ZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/server-edge.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst _fetch = __webpack_require__(/*! ./fetch */ \"(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(__webpack_require__.g.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n} //# sourceMappingURL=server-edge.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FHTjtBQUNBLFNBQVNHLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlULE9BQU9DLGNBQWMsQ0FBQ08sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLG1CQUFtQjtRQUNmLE9BQU9BO0lBQ1g7SUFDQUMsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLFdBQVdDLG1CQUFPQSxDQUFDLHlGQUFXO0FBQ3BDLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLHFGQUFTO0FBQ2hDLFNBQVNUO0lBQ0wsT0FBTyxDQUFDLEdBQUdVLE9BQU9DLGNBQWMsRUFBRUMscUJBQU1BLENBQUNDLEtBQUs7QUFDbEQ7QUFDQSxTQUFTWixtQkFBbUJhLE9BQU87SUFDL0IsT0FBTyxDQUFDQyxLQUFLQyxLQUFLLENBQUMsR0FBR1IsU0FBU1MsV0FBVyxFQUFFRixLQUFLTCxPQUFPUSxNQUFNLEVBQUUsSUFBSUosUUFBUUMsS0FBS0M7QUFDckYsRUFFQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanM/NDcxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGludGVyY2VwdFRlc3RBcGlzOiBudWxsLFxuICAgIHdyYXBSZXF1ZXN0SGFuZGxlcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBpbnRlcmNlcHRUZXN0QXBpczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpbnRlcmNlcHRUZXN0QXBpcztcbiAgICB9LFxuICAgIHdyYXBSZXF1ZXN0SGFuZGxlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3cmFwUmVxdWVzdEhhbmRsZXI7XG4gICAgfVxufSk7XG5jb25zdCBfY29udGV4dCA9IHJlcXVpcmUoXCIuL2NvbnRleHRcIik7XG5jb25zdCBfZmV0Y2ggPSByZXF1aXJlKFwiLi9mZXRjaFwiKTtcbmZ1bmN0aW9uIGludGVyY2VwdFRlc3RBcGlzKCkge1xuICAgIHJldHVybiAoMCwgX2ZldGNoLmludGVyY2VwdEZldGNoKShnbG9iYWwuZmV0Y2gpO1xufVxuZnVuY3Rpb24gd3JhcFJlcXVlc3RIYW5kbGVyKGhhbmRsZXIpIHtcbiAgICByZXR1cm4gKHJlcSwgZm4pPT4oMCwgX2NvbnRleHQud2l0aFJlcXVlc3QpKHJlcSwgX2ZldGNoLnJlYWRlciwgKCk9PmhhbmRsZXIocmVxLCBmbikpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2ZXItZWRnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJpbnRlcmNlcHRUZXN0QXBpcyIsIndyYXBSZXF1ZXN0SGFuZGxlciIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9jb250ZXh0IiwicmVxdWlyZSIsIl9mZXRjaCIsImludGVyY2VwdEZldGNoIiwiZ2xvYmFsIiwiZmV0Y2giLCJoYW5kbGVyIiwicmVxIiwiZm4iLCJ3aXRoUmVxdWVzdCIsInJlYWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/no-case/dist.es2015/index.js":
/*!***************************************************!*\
  !*** ./node_modules/no-case/dist.es2015/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noCase: () => (/* binding */ noCase)\n/* harmony export */ });\n/* harmony import */ var lower_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lower-case */ \"(middleware)/./node_modules/lower-case/dist.es2015/index.js\");\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [\n    /([a-z0-9])([A-Z])/g,\n    /([A-Z])([A-Z][a-z])/g\n];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */ function noCase(input, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lower_case__WEBPACK_IMPORTED_MODULE_0__.lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\x00$2\"), stripRegexp, \"\\x00\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while(result.charAt(start) === \"\\x00\")start++;\n    while(result.charAt(end - 1) === \"\\x00\")end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\x00\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */ function replace(input, re, value) {\n    if (re instanceof RegExp) return input.replace(re, value);\n    return re.reduce(function(input, re) {\n        return input.replace(re, value);\n    }, input);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDdkMsb0ZBQW9GO0FBQ3BGLElBQUlDLHVCQUF1QjtJQUFDO0lBQXNCO0NBQXVCO0FBQ3pFLGtDQUFrQztBQUNsQyxJQUFJQyx1QkFBdUI7QUFDM0I7O0NBRUMsR0FDTSxTQUFTQyxPQUFPQyxLQUFLLEVBQUVDLE9BQU87SUFDakMsSUFBSUEsWUFBWSxLQUFLLEdBQUc7UUFBRUEsVUFBVSxDQUFDO0lBQUc7SUFDeEMsSUFBSUMsS0FBS0QsUUFBUUUsV0FBVyxFQUFFQSxjQUFjRCxPQUFPLEtBQUssSUFBSUwsdUJBQXVCSyxJQUFJRSxLQUFLSCxRQUFRSSxXQUFXLEVBQUVBLGNBQWNELE9BQU8sS0FBSyxJQUFJTix1QkFBdUJNLElBQUlFLEtBQUtMLFFBQVFNLFNBQVMsRUFBRUEsWUFBWUQsT0FBTyxLQUFLLElBQUlWLGlEQUFTQSxHQUFHVSxJQUFJRSxLQUFLUCxRQUFRUSxTQUFTLEVBQUVBLFlBQVlELE9BQU8sS0FBSyxJQUFJLE1BQU1BO0lBQ3hTLElBQUlFLFNBQVNDLFFBQVFBLFFBQVFYLE9BQU9HLGFBQWEsYUFBV0UsYUFBYTtJQUN6RSxJQUFJTyxRQUFRO0lBQ1osSUFBSUMsTUFBTUgsT0FBT0ksTUFBTTtJQUN2QixvREFBb0Q7SUFDcEQsTUFBT0osT0FBT0ssTUFBTSxDQUFDSCxXQUFXLE9BQzVCQTtJQUNKLE1BQU9GLE9BQU9LLE1BQU0sQ0FBQ0YsTUFBTSxPQUFPLE9BQzlCQTtJQUNKLHNDQUFzQztJQUN0QyxPQUFPSCxPQUFPTSxLQUFLLENBQUNKLE9BQU9DLEtBQUtJLEtBQUssQ0FBQyxRQUFNQyxHQUFHLENBQUNYLFdBQVdZLElBQUksQ0FBQ1Y7QUFDcEU7QUFDQTs7Q0FFQyxHQUNELFNBQVNFLFFBQVFYLEtBQUssRUFBRW9CLEVBQUUsRUFBRUMsS0FBSztJQUM3QixJQUFJRCxjQUFjRSxRQUNkLE9BQU90QixNQUFNVyxPQUFPLENBQUNTLElBQUlDO0lBQzdCLE9BQU9ELEdBQUdHLE1BQU0sQ0FBQyxTQUFVdkIsS0FBSyxFQUFFb0IsRUFBRTtRQUFJLE9BQU9wQixNQUFNVyxPQUFPLENBQUNTLElBQUlDO0lBQVEsR0FBR3JCO0FBQ2hGLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uby1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzPzk2OWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG93ZXJDYXNlIH0gZnJvbSBcImxvd2VyLWNhc2VcIjtcbi8vIFN1cHBvcnQgY2FtZWwgY2FzZSAoXCJjYW1lbENhc2VcIiAtPiBcImNhbWVsIENhc2VcIiBhbmQgXCJDQU1FTENhc2VcIiAtPiBcIkNBTUVMIENhc2VcIikuXG52YXIgREVGQVVMVF9TUExJVF9SRUdFWFAgPSBbLyhbYS16MC05XSkoW0EtWl0pL2csIC8oW0EtWl0pKFtBLVpdW2Etel0pL2ddO1xuLy8gUmVtb3ZlIGFsbCBub24td29yZCBjaGFyYWN0ZXJzLlxudmFyIERFRkFVTFRfU1RSSVBfUkVHRVhQID0gL1teQS1aMC05XSsvZ2k7XG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgc3RyaW5nIGludG8gc29tZXRoaW5nIG90aGVyIGxpYnJhcmllcyBjYW4gbWFuaXB1bGF0ZSBlYXNpZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub0Nhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciBfYSA9IG9wdGlvbnMuc3BsaXRSZWdleHAsIHNwbGl0UmVnZXhwID0gX2EgPT09IHZvaWQgMCA/IERFRkFVTFRfU1BMSVRfUkVHRVhQIDogX2EsIF9iID0gb3B0aW9ucy5zdHJpcFJlZ2V4cCwgc3RyaXBSZWdleHAgPSBfYiA9PT0gdm9pZCAwID8gREVGQVVMVF9TVFJJUF9SRUdFWFAgOiBfYiwgX2MgPSBvcHRpb25zLnRyYW5zZm9ybSwgdHJhbnNmb3JtID0gX2MgPT09IHZvaWQgMCA/IGxvd2VyQ2FzZSA6IF9jLCBfZCA9IG9wdGlvbnMuZGVsaW1pdGVyLCBkZWxpbWl0ZXIgPSBfZCA9PT0gdm9pZCAwID8gXCIgXCIgOiBfZDtcbiAgICB2YXIgcmVzdWx0ID0gcmVwbGFjZShyZXBsYWNlKGlucHV0LCBzcGxpdFJlZ2V4cCwgXCIkMVxcMCQyXCIpLCBzdHJpcFJlZ2V4cCwgXCJcXDBcIik7XG4gICAgdmFyIHN0YXJ0ID0gMDtcbiAgICB2YXIgZW5kID0gcmVzdWx0Lmxlbmd0aDtcbiAgICAvLyBUcmltIHRoZSBkZWxpbWl0ZXIgZnJvbSBhcm91bmQgdGhlIG91dHB1dCBzdHJpbmcuXG4gICAgd2hpbGUgKHJlc3VsdC5jaGFyQXQoc3RhcnQpID09PSBcIlxcMFwiKVxuICAgICAgICBzdGFydCsrO1xuICAgIHdoaWxlIChyZXN1bHQuY2hhckF0KGVuZCAtIDEpID09PSBcIlxcMFwiKVxuICAgICAgICBlbmQtLTtcbiAgICAvLyBUcmFuc2Zvcm0gZWFjaCB0b2tlbiBpbmRlcGVuZGVudGx5LlxuICAgIHJldHVybiByZXN1bHQuc2xpY2Uoc3RhcnQsIGVuZCkuc3BsaXQoXCJcXDBcIikubWFwKHRyYW5zZm9ybSkuam9pbihkZWxpbWl0ZXIpO1xufVxuLyoqXG4gKiBSZXBsYWNlIGByZWAgaW4gdGhlIGlucHV0IHN0cmluZyB3aXRoIHRoZSByZXBsYWNlbWVudCB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gcmVwbGFjZShpbnB1dCwgcmUsIHZhbHVlKSB7XG4gICAgaWYgKHJlIGluc3RhbmNlb2YgUmVnRXhwKVxuICAgICAgICByZXR1cm4gaW5wdXQucmVwbGFjZShyZSwgdmFsdWUpO1xuICAgIHJldHVybiByZS5yZWR1Y2UoZnVuY3Rpb24gKGlucHV0LCByZSkgeyByZXR1cm4gaW5wdXQucmVwbGFjZShyZSwgdmFsdWUpOyB9LCBpbnB1dCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsibG93ZXJDYXNlIiwiREVGQVVMVF9TUExJVF9SRUdFWFAiLCJERUZBVUxUX1NUUklQX1JFR0VYUCIsIm5vQ2FzZSIsImlucHV0Iiwib3B0aW9ucyIsIl9hIiwic3BsaXRSZWdleHAiLCJfYiIsInN0cmlwUmVnZXhwIiwiX2MiLCJ0cmFuc2Zvcm0iLCJfZCIsImRlbGltaXRlciIsInJlc3VsdCIsInJlcGxhY2UiLCJzdGFydCIsImVuZCIsImxlbmd0aCIsImNoYXJBdCIsInNsaWNlIiwic3BsaXQiLCJtYXAiLCJqb2luIiwicmUiLCJ2YWx1ZSIsIlJlZ0V4cCIsInJlZHVjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/no-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n        }\n        var ReactVersion = \"18.2.0\";\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        /**\n * Keeps track of the current dispatcher.\n */ var ReactCurrentDispatcher = {\n            /**\n   * @internal\n   * @type {ReactComponent}\n   */ current: null\n        };\n        /**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */ var ReactCurrentBatchConfig = {\n            transition: null\n        };\n        var ReactCurrentActQueue = {\n            current: null,\n            // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n            isBatchingLegacy: false,\n            didScheduleLegacyUpdate: false\n        };\n        /**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */ var ReactCurrentOwner = {\n            /**\n   * @internal\n   * @type {ReactComponent}\n   */ current: null\n        };\n        var ReactDebugCurrentFrame = {};\n        var currentExtraStackFrame = null;\n        function setExtraStackFrame(stack) {\n            {\n                currentExtraStackFrame = stack;\n            }\n        }\n        {\n            ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {\n                {\n                    currentExtraStackFrame = stack;\n                }\n            }; // Stack implementation injected by the current renderer.\n            ReactDebugCurrentFrame.getCurrentStack = null;\n            ReactDebugCurrentFrame.getStackAddendum = function() {\n                var stack = \"\"; // Add an extra top frame while an element is being validated\n                if (currentExtraStackFrame) {\n                    stack += currentExtraStackFrame;\n                } // Delegate to the injected renderer-specific implementation\n                var impl = ReactDebugCurrentFrame.getCurrentStack;\n                if (impl) {\n                    stack += impl() || \"\";\n                }\n                return stack;\n            };\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n        var ReactSharedInternals = {\n            ReactCurrentDispatcher: ReactCurrentDispatcher,\n            ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n            ReactCurrentOwner: ReactCurrentOwner\n        };\n        {\n            ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n            ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n        }\n        // by calls to these methods by a Babel plugin.\n        //\n        // In PROD (or in packages without access to React internals),\n        // they are left as they are instead.\n        function warn(format) {\n            {\n                {\n                    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                        args[_key - 1] = arguments[_key];\n                    }\n                    printWarning(\"warn\", format, args);\n                }\n            }\n        }\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        var didWarnStateUpdateForUnmountedComponent = {};\n        function warnNoop(publicInstance, callerName) {\n            {\n                var _constructor = publicInstance.constructor;\n                var componentName = _constructor && (_constructor.displayName || _constructor.name) || \"ReactClass\";\n                var warningKey = componentName + \".\" + callerName;\n                if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n                    return;\n                }\n                error(\"Can't call %s on a component that is not yet mounted. \" + \"This is a no-op, but it might indicate a bug in your application. \" + \"Instead, assign to `this.state` directly or define a `state = {};` \" + \"class property with the desired state in the %s component.\", callerName, componentName);\n                didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n            }\n        }\n        /**\n * This is the abstract API for an update queue.\n */ var ReactNoopUpdateQueue = {\n            /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */ isMounted: function(publicInstance) {\n                return false;\n            },\n            /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {\n                warnNoop(publicInstance, \"forceUpdate\");\n            },\n            /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {\n                warnNoop(publicInstance, \"replaceState\");\n            },\n            /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {\n                warnNoop(publicInstance, \"setState\");\n            }\n        };\n        var assign = Object.assign;\n        var emptyObject = {};\n        {\n            Object.freeze(emptyObject);\n        }\n        /**\n * Base class helpers for the updating state of a component.\n */ function Component(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n            // renderer.\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        Component.prototype.isReactComponent = {};\n        /**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */ Component.prototype.setState = function(partialState, callback) {\n            if (typeof partialState !== \"object\" && typeof partialState !== \"function\" && partialState != null) {\n                throw new Error(\"setState(...): takes an object of state variables to update or a \" + \"function which returns an object of state variables.\");\n            }\n            this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n        };\n        /**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */ Component.prototype.forceUpdate = function(callback) {\n            this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n        };\n        /**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */ {\n            var deprecatedAPIs = {\n                isMounted: [\n                    \"isMounted\",\n                    \"Instead, make sure to clean up subscriptions and pending requests in \" + \"componentWillUnmount to prevent memory leaks.\"\n                ],\n                replaceState: [\n                    \"replaceState\",\n                    \"Refactor your code to use setState instead (see \" + \"https://github.com/facebook/react/issues/3236).\"\n                ]\n            };\n            var defineDeprecationWarning = function(methodName, info) {\n                Object.defineProperty(Component.prototype, methodName, {\n                    get: function() {\n                        warn(\"%s(...) is deprecated in plain JavaScript React classes. %s\", info[0], info[1]);\n                        return undefined;\n                    }\n                });\n            };\n            for(var fnName in deprecatedAPIs){\n                if (deprecatedAPIs.hasOwnProperty(fnName)) {\n                    defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n                }\n            }\n        }\n        function ComponentDummy() {}\n        ComponentDummy.prototype = Component.prototype;\n        /**\n * Convenience component with default shallow equality check for sCU.\n */ function PureComponent(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject;\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n        pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n        assign(pureComponentPrototype, Component.prototype);\n        pureComponentPrototype.isPureReactComponent = true;\n        // an immutable object with a single mutable value\n        function createRef() {\n            var refObject = {\n                current: null\n            };\n            {\n                Object.seal(refObject);\n            }\n            return refObject;\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n                return type;\n            }\n        } // $FlowFixMe only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            {\n                if (typeof type.tag === \"number\") {\n                    error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                }\n            }\n            if (typeof type === \"function\") {\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            var warnAboutAccessingKey = function() {\n                {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingKey.isReactWarning = true;\n            Object.defineProperty(props, \"key\", {\n                get: warnAboutAccessingKey,\n                configurable: true\n            });\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            var warnAboutAccessingRef = function() {\n                {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingRef.isReactWarning = true;\n            Object.defineProperty(props, \"ref\", {\n                get: warnAboutAccessingRef,\n                configurable: true\n            });\n        }\n        function warnIfStringRefCannotBeAutoConverted(config) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", componentName, config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ var ReactElement = function(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        };\n        /**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */ function createElement(type, config, children) {\n            var propName; // Reserved names are extracted\n            var props = {};\n            var key = null;\n            var ref = null;\n            var self = null;\n            var source = null;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    {\n                        warnIfStringRefCannotBeAutoConverted(config);\n                    }\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                self = config.__self === undefined ? null : config.__self;\n                source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                {\n                    if (Object.freeze) {\n                        Object.freeze(childArray);\n                    }\n                }\n                props.children = childArray;\n            } // Resolve default props\n            if (type && type.defaultProps) {\n                var defaultProps = type.defaultProps;\n                for(propName in defaultProps){\n                    if (props[propName] === undefined) {\n                        props[propName] = defaultProps[propName];\n                    }\n                }\n            }\n            {\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n            }\n            return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n        }\n        function cloneAndReplaceKey(oldElement, newKey) {\n            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n            return newElement;\n        }\n        /**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */ function cloneElement(element, config, children) {\n            if (element === null || element === undefined) {\n                throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n            }\n            var propName; // Original props are copied\n            var props = assign({}, element.props); // Reserved names are extracted\n            var key = element.key;\n            var ref = element.ref; // Self is preserved since the owner is preserved.\n            var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n            // transpiler, and the original source is probably a better indicator of the\n            // true owner.\n            var source = element._source; // Owner will be preserved, unless ref is overridden\n            var owner = element._owner;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    // Silently steal the ref from the parent.\n                    ref = config.ref;\n                    owner = ReactCurrentOwner.current;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                } // Remaining properties override existing props\n                var defaultProps;\n                if (element.type && element.type.defaultProps) {\n                    defaultProps = element.type.defaultProps;\n                }\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        if (config[propName] === undefined && defaultProps !== undefined) {\n                            // Resolve default props\n                            props[propName] = defaultProps[propName];\n                        } else {\n                            props[propName] = config[propName];\n                        }\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                props.children = childArray;\n            }\n            return ReactElement(element.type, key, ref, self, source, owner, props);\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        var SEPARATOR = \".\";\n        var SUBSEPARATOR = \":\";\n        /**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */ function escape(key) {\n            var escapeRegex = /[=:]/g;\n            var escaperLookup = {\n                \"=\": \"=0\",\n                \":\": \"=2\"\n            };\n            var escapedString = key.replace(escapeRegex, function(match) {\n                return escaperLookup[match];\n            });\n            return \"$\" + escapedString;\n        }\n        /**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */ var didWarnAboutMaps = false;\n        var userProvidedKeyEscapeRegex = /\\/+/g;\n        function escapeUserProvidedKey(text) {\n            return text.replace(userProvidedKeyEscapeRegex, \"$&/\");\n        }\n        /**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */ function getElementKey(element, index) {\n            // Do some typechecking here since we call this blindly. We want to ensure\n            // that we don't block potential future ES APIs.\n            if (typeof element === \"object\" && element !== null && element.key != null) {\n                // Explicit key\n                {\n                    checkKeyStringCoercion(element.key);\n                }\n                return escape(\"\" + element.key);\n            } // Implicit key determined by the index in the set\n            return index.toString(36);\n        }\n        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n            var type = typeof children;\n            if (type === \"undefined\" || type === \"boolean\") {\n                // All of the above are perceived as null.\n                children = null;\n            }\n            var invokeCallback = false;\n            if (children === null) {\n                invokeCallback = true;\n            } else {\n                switch(type){\n                    case \"string\":\n                    case \"number\":\n                        invokeCallback = true;\n                        break;\n                    case \"object\":\n                        switch(children.$$typeof){\n                            case REACT_ELEMENT_TYPE:\n                            case REACT_PORTAL_TYPE:\n                                invokeCallback = true;\n                        }\n                }\n            }\n            if (invokeCallback) {\n                var _child = children;\n                var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n                // so that it's consistent if the number of children grows:\n                var childKey = nameSoFar === \"\" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n                if (isArray(mappedChild)) {\n                    var escapedChildKey = \"\";\n                    if (childKey != null) {\n                        escapedChildKey = escapeUserProvidedKey(childKey) + \"/\";\n                    }\n                    mapIntoArray(mappedChild, array, escapedChildKey, \"\", function(c) {\n                        return c;\n                    });\n                } else if (mappedChild != null) {\n                    if (isValidElement(mappedChild)) {\n                        {\n                            // The `if` statement here prevents auto-disabling of the safe\n                            // coercion ESLint rule, so we must manually disable it below.\n                            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n                            if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                                checkKeyStringCoercion(mappedChild.key);\n                            }\n                        }\n                        mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children\n                        escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion\n                        escapeUserProvidedKey(\"\" + mappedChild.key) + \"/\" : \"\") + childKey);\n                    }\n                    array.push(mappedChild);\n                }\n                return 1;\n            }\n            var child;\n            var nextName;\n            var subtreeCount = 0; // Count of children found in the current subtree.\n            var nextNamePrefix = nameSoFar === \"\" ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n            if (isArray(children)) {\n                for(var i = 0; i < children.length; i++){\n                    child = children[i];\n                    nextName = nextNamePrefix + getElementKey(child, i);\n                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                }\n            } else {\n                var iteratorFn = getIteratorFn(children);\n                if (typeof iteratorFn === \"function\") {\n                    var iterableChildren = children;\n                    {\n                        // Warn about using Maps as children\n                        if (iteratorFn === iterableChildren.entries) {\n                            if (!didWarnAboutMaps) {\n                                warn(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n                            }\n                            didWarnAboutMaps = true;\n                        }\n                    }\n                    var iterator = iteratorFn.call(iterableChildren);\n                    var step;\n                    var ii = 0;\n                    while(!(step = iterator.next()).done){\n                        child = step.value;\n                        nextName = nextNamePrefix + getElementKey(child, ii++);\n                        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                    }\n                } else if (type === \"object\") {\n                    // eslint-disable-next-line react-internal/safe-string-coercion\n                    var childrenString = String(children);\n                    throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === \"[object Object]\" ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\" : childrenString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n                }\n            }\n            return subtreeCount;\n        }\n        /**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */ function mapChildren(children, func, context) {\n            if (children == null) {\n                return children;\n            }\n            var result = [];\n            var count = 0;\n            mapIntoArray(children, result, \"\", \"\", function(child) {\n                return func.call(context, child, count++);\n            });\n            return result;\n        }\n        /**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */ function countChildren(children) {\n            var n = 0;\n            mapChildren(children, function() {\n                n++; // Don't return anything\n            });\n            return n;\n        }\n        /**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */ function forEachChildren(children, forEachFunc, forEachContext) {\n            mapChildren(children, function() {\n                forEachFunc.apply(this, arguments); // Don't return anything.\n            }, forEachContext);\n        }\n        /**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */ function toArray(children) {\n            return mapChildren(children, function(child) {\n                return child;\n            }) || [];\n        }\n        /**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */ function onlyChild(children) {\n            if (!isValidElement(children)) {\n                throw new Error(\"React.Children.only expected to receive a single React element child.\");\n            }\n            return children;\n        }\n        function createContext(defaultValue) {\n            // TODO: Second argument used to be an optional `calculateChangedBits`\n            // function. Warn to reserve for future use?\n            var context = {\n                $$typeof: REACT_CONTEXT_TYPE,\n                // As a workaround to support multiple concurrent renderers, we categorize\n                // some renderers as primary and others as secondary. We only expect\n                // there to be two concurrent renderers at most: React Native (primary) and\n                // Fabric (secondary); React DOM (primary) and React ART (secondary).\n                // Secondary renderers store their context values on separate fields.\n                _currentValue: defaultValue,\n                _currentValue2: defaultValue,\n                // Used to track how many concurrent renderers this context currently\n                // supports within in a single renderer. Such as parallel server rendering.\n                _threadCount: 0,\n                // These are circular\n                Provider: null,\n                Consumer: null,\n                // Add these to use same hidden class in VM as ServerContext\n                _defaultValue: null,\n                _globalName: null\n            };\n            context.Provider = {\n                $$typeof: REACT_PROVIDER_TYPE,\n                _context: context\n            };\n            var hasWarnedAboutUsingNestedContextConsumers = false;\n            var hasWarnedAboutUsingConsumerProvider = false;\n            var hasWarnedAboutDisplayNameOnConsumer = false;\n            {\n                // A separate object, but proxies back to the original context object for\n                // backwards compatibility. It has a different $$typeof, so we can properly\n                // warn for the incorrect usage of Context as a Consumer.\n                var Consumer = {\n                    $$typeof: REACT_CONTEXT_TYPE,\n                    _context: context\n                }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n                Object.defineProperties(Consumer, {\n                    Provider: {\n                        get: function() {\n                            if (!hasWarnedAboutUsingConsumerProvider) {\n                                hasWarnedAboutUsingConsumerProvider = true;\n                                error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Provider> instead?\");\n                            }\n                            return context.Provider;\n                        },\n                        set: function(_Provider) {\n                            context.Provider = _Provider;\n                        }\n                    },\n                    _currentValue: {\n                        get: function() {\n                            return context._currentValue;\n                        },\n                        set: function(_currentValue) {\n                            context._currentValue = _currentValue;\n                        }\n                    },\n                    _currentValue2: {\n                        get: function() {\n                            return context._currentValue2;\n                        },\n                        set: function(_currentValue2) {\n                            context._currentValue2 = _currentValue2;\n                        }\n                    },\n                    _threadCount: {\n                        get: function() {\n                            return context._threadCount;\n                        },\n                        set: function(_threadCount) {\n                            context._threadCount = _threadCount;\n                        }\n                    },\n                    Consumer: {\n                        get: function() {\n                            if (!hasWarnedAboutUsingNestedContextConsumers) {\n                                hasWarnedAboutUsingNestedContextConsumers = true;\n                                error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Consumer> instead?\");\n                            }\n                            return context.Consumer;\n                        }\n                    },\n                    displayName: {\n                        get: function() {\n                            return context.displayName;\n                        },\n                        set: function(displayName) {\n                            if (!hasWarnedAboutDisplayNameOnConsumer) {\n                                warn(\"Setting `displayName` on Context.Consumer has no effect. \" + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n                                hasWarnedAboutDisplayNameOnConsumer = true;\n                            }\n                        }\n                    }\n                }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n                context.Consumer = Consumer;\n            }\n            {\n                context._currentRenderer = null;\n                context._currentRenderer2 = null;\n            }\n            return context;\n        }\n        var Uninitialized = -1;\n        var Pending = 0;\n        var Resolved = 1;\n        var Rejected = 2;\n        function lazyInitializer(payload) {\n            if (payload._status === Uninitialized) {\n                var ctor = payload._result;\n                var thenable = ctor(); // Transition to the next state.\n                // This might throw either because it's missing or throws. If so, we treat it\n                // as still uninitialized and try again next time. Which is the same as what\n                // happens if the ctor or any wrappers processing the ctor throws. This might\n                // end up fixing it if the resolution was a concurrency bug.\n                thenable.then(function(moduleObject) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var resolved = payload;\n                        resolved._status = Resolved;\n                        resolved._result = moduleObject;\n                    }\n                }, function(error) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var rejected = payload;\n                        rejected._status = Rejected;\n                        rejected._result = error;\n                    }\n                });\n                if (payload._status === Uninitialized) {\n                    // In case, we're still uninitialized, then we're waiting for the thenable\n                    // to resolve. Set it as pending in the meantime.\n                    var pending = payload;\n                    pending._status = Pending;\n                    pending._result = thenable;\n                }\n            }\n            if (payload._status === Resolved) {\n                var moduleObject = payload._result;\n                {\n                    if (moduleObject === undefined) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\\n\\n\" + \"Did you accidentally put curly braces around the import?\", moduleObject);\n                    }\n                }\n                {\n                    if (!(\"default\" in moduleObject)) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\", moduleObject);\n                    }\n                }\n                return moduleObject.default;\n            } else {\n                throw payload._result;\n            }\n        }\n        function lazy(ctor) {\n            var payload = {\n                // We use these fields to store the result.\n                _status: Uninitialized,\n                _result: ctor\n            };\n            var lazyType = {\n                $$typeof: REACT_LAZY_TYPE,\n                _payload: payload,\n                _init: lazyInitializer\n            };\n            {\n                // In production, this would just set it on the object.\n                var defaultProps;\n                var propTypes; // $FlowFixMe\n                Object.defineProperties(lazyType, {\n                    defaultProps: {\n                        configurable: true,\n                        get: function() {\n                            return defaultProps;\n                        },\n                        set: function(newDefaultProps) {\n                            error(\"React.lazy(...): It is not supported to assign `defaultProps` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            defaultProps = newDefaultProps; // Match production behavior more closely:\n                            // $FlowFixMe\n                            Object.defineProperty(lazyType, \"defaultProps\", {\n                                enumerable: true\n                            });\n                        }\n                    },\n                    propTypes: {\n                        configurable: true,\n                        get: function() {\n                            return propTypes;\n                        },\n                        set: function(newPropTypes) {\n                            error(\"React.lazy(...): It is not supported to assign `propTypes` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            propTypes = newPropTypes; // Match production behavior more closely:\n                            // $FlowFixMe\n                            Object.defineProperty(lazyType, \"propTypes\", {\n                                enumerable: true\n                            });\n                        }\n                    }\n                });\n            }\n            return lazyType;\n        }\n        function forwardRef(render) {\n            {\n                if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n                    error(\"forwardRef requires a render function but received a `memo` \" + \"component. Instead of forwardRef(memo(...)), use \" + \"memo(forwardRef(...)).\");\n                } else if (typeof render !== \"function\") {\n                    error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render);\n                } else {\n                    if (render.length !== 0 && render.length !== 2) {\n                        error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\");\n                    }\n                }\n                if (render != null) {\n                    if (render.defaultProps != null || render.propTypes != null) {\n                        error(\"forwardRef render functions do not support propTypes or defaultProps. \" + \"Did you accidentally pass a React component?\");\n                    }\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: render\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.forwardRef((props, ref) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!render.name && !render.displayName) {\n                            render.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        var REACT_MODULE_REFERENCE;\n        {\n            REACT_MODULE_REFERENCE = Symbol.for(\"react.module.reference\");\n        }\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function memo(type, compare) {\n            {\n                if (!isValidElementType(type)) {\n                    error(\"memo: The first argument must be a component. Instead \" + \"received: %s\", type === null ? \"null\" : typeof type);\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_MEMO_TYPE,\n                type: type,\n                compare: compare === undefined ? null : compare\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.memo((props) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!type.name && !type.displayName) {\n                            type.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        function resolveDispatcher() {\n            var dispatcher = ReactCurrentDispatcher.current;\n            {\n                if (dispatcher === null) {\n                    error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n                }\n            }\n            // intentionally don't throw our own error because this is in a hot path.\n            // Also helps ensure this is inlined.\n            return dispatcher;\n        }\n        function useContext(Context) {\n            var dispatcher = resolveDispatcher();\n            {\n                // TODO: add a more generic warning for invalid values.\n                if (Context._context !== undefined) {\n                    var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n                    // and nobody should be using this in existing code.\n                    if (realContext.Consumer === Context) {\n                        error(\"Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be \" + \"removed in a future major release. Did you mean to call useContext(Context) instead?\");\n                    } else if (realContext.Provider === Context) {\n                        error(\"Calling useContext(Context.Provider) is not supported. \" + \"Did you mean to call useContext(Context) instead?\");\n                    }\n                }\n            }\n            return dispatcher.useContext(Context);\n        }\n        function useState(initialState) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useState(initialState);\n        }\n        function useReducer(reducer, initialArg, init) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useReducer(reducer, initialArg, init);\n        }\n        function useRef(initialValue) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useRef(initialValue);\n        }\n        function useEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useEffect(create, deps);\n        }\n        function useInsertionEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useInsertionEffect(create, deps);\n        }\n        function useLayoutEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useLayoutEffect(create, deps);\n        }\n        function useCallback(callback, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useCallback(callback, deps);\n        }\n        function useMemo(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useMemo(create, deps);\n        }\n        function useImperativeHandle(ref, create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useImperativeHandle(ref, create, deps);\n        }\n        function useDebugValue(value, formatterFn) {\n            {\n                var dispatcher = resolveDispatcher();\n                return dispatcher.useDebugValue(value, formatterFn);\n            }\n        }\n        function useTransition() {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useTransition();\n        }\n        function useDeferredValue(value) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useDeferredValue(value);\n        }\n        function useId() {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useId();\n        }\n        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n        }\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            var control;\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher$1.current = null;\n                disableLogs();\n            }\n            try {\n                // This should throw.\n                if (construct) {\n                    // Something should be setting the props in the constructor.\n                    var Fake = function() {\n                        throw Error();\n                    }; // $FlowFixMe\n                    Object.defineProperty(Fake.prototype, \"props\", {\n                        set: function() {\n                            // We use a throwing setter instead of frozen or non-writable props\n                            // because that won't throw in a non-strict mode function.\n                            throw Error();\n                        }\n                    });\n                    if (typeof Reflect === \"object\" && Reflect.construct) {\n                        // We construct a different control for this case to include any extra\n                        // frames added by the construct call.\n                        try {\n                            Reflect.construct(Fake, []);\n                        } catch (x) {\n                            control = x;\n                        }\n                        Reflect.construct(fn, [], Fake);\n                    } else {\n                        try {\n                            Fake.call();\n                        } catch (x) {\n                            control = x;\n                        }\n                        fn.call(Fake.prototype);\n                    }\n                } else {\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        control = x;\n                    }\n                    fn();\n                }\n            } catch (sample) {\n                // This is inlined manually because closure doesn't do it for us.\n                if (sample && control && typeof sample.stack === \"string\") {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sample.stack.split(\"\\n\");\n                    var controlLines = control.stack.split(\"\\n\");\n                    var s = sampleLines.length - 1;\n                    var c = controlLines.length - 1;\n                    while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                        // We expect at least one stack frame to be shared.\n                        // Typically this will be the root most one. However, stack frames may be\n                        // cut off due to maximum stack limits. In this case, one maybe cut off\n                        // earlier than the other. We assume that the sample is longer or the same\n                        // and there for cut off earlier. So we should find the root most frame in\n                        // the sample somewhere in the control.\n                        c--;\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        }\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher$1.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement(null);\n                        }\n                    }\n                }\n            }\n        }\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    setExtraStackFrame(stack);\n                } else {\n                    setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        function getDeclarationErrorAddendum() {\n            if (ReactCurrentOwner.current) {\n                var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                if (name) {\n                    return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                }\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendum(source) {\n            if (source !== undefined) {\n                var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                var lineNumber = source.lineNumber;\n                return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendumForProps(elementProps) {\n            if (elementProps !== null && elementProps !== undefined) {\n                return getSourceInfoErrorAddendum(elementProps.__source);\n            }\n            return \"\";\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            var info = getDeclarationErrorAddendum();\n            if (!info) {\n                var parentName = typeof parentType === \"string\" ? parentType : parentType.displayName || parentType.name;\n                if (parentName) {\n                    info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                }\n            }\n            return info;\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            if (!element._store || element._store.validated || element.key != null) {\n                return;\n            }\n            element._store.validated = true;\n            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                return;\n            }\n            ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n            // property, it may be the creator of the child that's responsible for\n            // assigning it a key.\n            var childOwner = \"\";\n            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                // Give the component that originally created this child.\n                childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n            }\n            {\n                setCurrentlyValidatingElement$1(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement$1(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            if (typeof node !== \"object\") {\n                return;\n            }\n            if (isArray(node)) {\n                for(var i = 0; i < node.length; i++){\n                    var child = node[i];\n                    if (isValidElement(child)) {\n                        validateExplicitKey(child, parentType);\n                    }\n                }\n            } else if (isValidElement(node)) {\n                // This element was passed in a valid location.\n                if (node._store) {\n                    node._store.validated = true;\n                }\n            } else if (node) {\n                var iteratorFn = getIteratorFn(node);\n                if (typeof iteratorFn === \"function\") {\n                    // Entry iterators used to provide implicit keys,\n                    // but now we print a separate warning for them later.\n                    if (iteratorFn !== node.entries) {\n                        var iterator = iteratorFn.call(node);\n                        var step;\n                        while(!(step = iterator.next()).done){\n                            if (isValidElement(step.value)) {\n                                validateExplicitKey(step.value, parentType);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement$1(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement$1(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement$1(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement$1(null);\n                }\n            }\n        }\n        function createElementWithValidation(type, props, children) {\n            var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n            // succeed and there will likely be errors in render.\n            if (!validType) {\n                var info = \"\";\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                    info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                }\n                var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n                if (sourceInfo) {\n                    info += sourceInfo;\n                } else {\n                    info += getDeclarationErrorAddendum();\n                }\n                var typeString;\n                if (type === null) {\n                    typeString = \"null\";\n                } else if (isArray(type)) {\n                    typeString = \"array\";\n                } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                    typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                    info = \" Did you accidentally export a JSX literal instead of a component?\";\n                } else {\n                    typeString = typeof type;\n                }\n                {\n                    error(\"React.createElement: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n            }\n            var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n            // TODO: Drop this when these are no longer allowed as the type argument.\n            if (element == null) {\n                return element;\n            } // Skip key warning if the type isn't valid since our key validation logic\n            // doesn't expect a non-string/function type and can throw confusing errors.\n            // We don't want exception behavior to differ between dev and prod.\n            // (Rendering will throw with a helpful message and as soon as the type is\n            // fixed, the key warnings will appear.)\n            if (validType) {\n                for(var i = 2; i < arguments.length; i++){\n                    validateChildKeys(arguments[i], type);\n                }\n            }\n            if (type === REACT_FRAGMENT_TYPE) {\n                validateFragmentProps(element);\n            } else {\n                validatePropTypes(element);\n            }\n            return element;\n        }\n        var didWarnAboutDeprecatedCreateFactory = false;\n        function createFactoryWithValidation(type) {\n            var validatedFactory = createElementWithValidation.bind(null, type);\n            validatedFactory.type = type;\n            {\n                if (!didWarnAboutDeprecatedCreateFactory) {\n                    didWarnAboutDeprecatedCreateFactory = true;\n                    warn(\"React.createFactory() is deprecated and will be removed in \" + \"a future major release. Consider using JSX \" + \"or use React.createElement() directly instead.\");\n                } // Legacy hook: remove it\n                Object.defineProperty(validatedFactory, \"type\", {\n                    enumerable: false,\n                    get: function() {\n                        warn(\"Factory.type is deprecated. Access the class directly \" + \"before passing it to createFactory.\");\n                        Object.defineProperty(this, \"type\", {\n                            value: type\n                        });\n                        return type;\n                    }\n                });\n            }\n            return validatedFactory;\n        }\n        function cloneElementWithValidation(element, props, children) {\n            var newElement = cloneElement.apply(this, arguments);\n            for(var i = 2; i < arguments.length; i++){\n                validateChildKeys(arguments[i], newElement.type);\n            }\n            validatePropTypes(newElement);\n            return newElement;\n        }\n        function startTransition(scope, options) {\n            var prevTransition = ReactCurrentBatchConfig.transition;\n            ReactCurrentBatchConfig.transition = {};\n            var currentTransition = ReactCurrentBatchConfig.transition;\n            {\n                ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n            }\n            try {\n                scope();\n            } finally{\n                ReactCurrentBatchConfig.transition = prevTransition;\n                {\n                    if (prevTransition === null && currentTransition._updatedFibers) {\n                        var updatedFibersCount = currentTransition._updatedFibers.size;\n                        if (updatedFibersCount > 10) {\n                            warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n                        }\n                        currentTransition._updatedFibers.clear();\n                    }\n                }\n            }\n        }\n        var didWarnAboutMessageChannel = false;\n        var enqueueTaskImpl = null;\n        function enqueueTask(task) {\n            if (enqueueTaskImpl === null) {\n                try {\n                    // read require off the module object to get around the bundlers.\n                    // we don't want them to detect a require and bundle a Node polyfill.\n                    var requireString = (\"require\" + Math.random()).slice(0, 7);\n                    var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n                    // version of setImmediate, bypassing fake timers if any.\n                    enqueueTaskImpl = nodeRequire.call(module, \"timers\").setImmediate;\n                } catch (_err) {\n                    // we're in a browser\n                    // we can't use regular timers because they may still be faked\n                    // so we try MessageChannel+postMessage instead\n                    enqueueTaskImpl = function(callback) {\n                        {\n                            if (didWarnAboutMessageChannel === false) {\n                                didWarnAboutMessageChannel = true;\n                                if (typeof MessageChannel === \"undefined\") {\n                                    error(\"This browser does not have a MessageChannel implementation, \" + \"so enqueuing tasks via await act(async () => ...) will fail. \" + \"Please file an issue at https://github.com/facebook/react/issues \" + \"if you encounter this warning.\");\n                                }\n                            }\n                        }\n                        var channel = new MessageChannel();\n                        channel.port1.onmessage = callback;\n                        channel.port2.postMessage(undefined);\n                    };\n                }\n            }\n            return enqueueTaskImpl(task);\n        }\n        var actScopeDepth = 0;\n        var didWarnNoAwaitAct = false;\n        function act(callback) {\n            {\n                // `act` calls can be nested, so we track the depth. This represents the\n                // number of `act` scopes on the stack.\n                var prevActScopeDepth = actScopeDepth;\n                actScopeDepth++;\n                if (ReactCurrentActQueue.current === null) {\n                    // This is the outermost `act` scope. Initialize the queue. The reconciler\n                    // will detect the queue and use it instead of Scheduler.\n                    ReactCurrentActQueue.current = [];\n                }\n                var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n                var result;\n                try {\n                    // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n                    // set to `true` while the given callback is executed, not for updates\n                    // triggered during an async event, because this is how the legacy\n                    // implementation of `act` behaved.\n                    ReactCurrentActQueue.isBatchingLegacy = true;\n                    result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n                    // which flushed updates immediately after the scope function exits, even\n                    // if it's an async function.\n                    if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n                        var queue = ReactCurrentActQueue.current;\n                        if (queue !== null) {\n                            ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n                            flushActQueue(queue);\n                        }\n                    }\n                } catch (error) {\n                    popActScope(prevActScopeDepth);\n                    throw error;\n                } finally{\n                    ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n                }\n                if (result !== null && typeof result === \"object\" && typeof result.then === \"function\") {\n                    var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n                    // for it to resolve before exiting the current scope.\n                    var wasAwaited = false;\n                    var thenable = {\n                        then: function(resolve, reject) {\n                            wasAwaited = true;\n                            thenableResult.then(function(returnValue) {\n                                popActScope(prevActScopeDepth);\n                                if (actScopeDepth === 0) {\n                                    // We've exited the outermost act scope. Recursively flush the\n                                    // queue until there's no remaining work.\n                                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                                } else {\n                                    resolve(returnValue);\n                                }\n                            }, function(error) {\n                                // The callback threw an error.\n                                popActScope(prevActScopeDepth);\n                                reject(error);\n                            });\n                        }\n                    };\n                    {\n                        if (!didWarnNoAwaitAct && typeof Promise !== \"undefined\") {\n                            // eslint-disable-next-line no-undef\n                            Promise.resolve().then(function() {}).then(function() {\n                                if (!wasAwaited) {\n                                    didWarnNoAwaitAct = true;\n                                    error(\"You called act(async () => ...) without await. \" + \"This could lead to unexpected testing behaviour, \" + \"interleaving multiple act calls and mixing their \" + \"scopes. \" + \"You should - await act(async () => ...);\");\n                                }\n                            });\n                        }\n                    }\n                    return thenable;\n                } else {\n                    var returnValue = result; // The callback is not an async function. Exit the current scope\n                    // immediately, without awaiting.\n                    popActScope(prevActScopeDepth);\n                    if (actScopeDepth === 0) {\n                        // Exiting the outermost act scope. Flush the queue.\n                        var _queue = ReactCurrentActQueue.current;\n                        if (_queue !== null) {\n                            flushActQueue(_queue);\n                            ReactCurrentActQueue.current = null;\n                        } // Return a thenable. If the user awaits it, we'll flush again in\n                        // case additional work was scheduled by a microtask.\n                        var _thenable = {\n                            then: function(resolve, reject) {\n                                // Confirm we haven't re-entered another `act` scope, in case\n                                // the user does something weird like await the thenable\n                                // multiple times.\n                                if (ReactCurrentActQueue.current === null) {\n                                    // Recursively flush the queue until there's no remaining work.\n                                    ReactCurrentActQueue.current = [];\n                                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                                } else {\n                                    resolve(returnValue);\n                                }\n                            }\n                        };\n                        return _thenable;\n                    } else {\n                        // Since we're inside a nested `act` scope, the returned thenable\n                        // immediately resolves. The outer scope will flush the queue.\n                        var _thenable2 = {\n                            then: function(resolve, reject) {\n                                resolve(returnValue);\n                            }\n                        };\n                        return _thenable2;\n                    }\n                }\n            }\n        }\n        function popActScope(prevActScopeDepth) {\n            {\n                if (prevActScopeDepth !== actScopeDepth - 1) {\n                    error(\"You seem to have overlapping act() calls, this is not supported. \" + \"Be sure to await previous act() calls before making a new one. \");\n                }\n                actScopeDepth = prevActScopeDepth;\n            }\n        }\n        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n            {\n                var queue = ReactCurrentActQueue.current;\n                if (queue !== null) {\n                    try {\n                        flushActQueue(queue);\n                        enqueueTask(function() {\n                            if (queue.length === 0) {\n                                // No additional work was scheduled. Finish.\n                                ReactCurrentActQueue.current = null;\n                                resolve(returnValue);\n                            } else {\n                                // Keep flushing work until there's none left.\n                                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                            }\n                        });\n                    } catch (error) {\n                        reject(error);\n                    }\n                } else {\n                    resolve(returnValue);\n                }\n            }\n        }\n        var isFlushing = false;\n        function flushActQueue(queue) {\n            {\n                if (!isFlushing) {\n                    // Prevent re-entrance.\n                    isFlushing = true;\n                    var i = 0;\n                    try {\n                        for(; i < queue.length; i++){\n                            var callback = queue[i];\n                            do {\n                                callback = callback(true);\n                            }while (callback !== null);\n                        }\n                        queue.length = 0;\n                    } catch (error) {\n                        // If something throws, leave the remaining callbacks on the queue.\n                        queue = queue.slice(i + 1);\n                        throw error;\n                    } finally{\n                        isFlushing = false;\n                    }\n                }\n            }\n        }\n        var createElement$1 = createElementWithValidation;\n        var cloneElement$1 = cloneElementWithValidation;\n        var createFactory = createFactoryWithValidation;\n        var Children = {\n            map: mapChildren,\n            forEach: forEachChildren,\n            count: countChildren,\n            toArray: toArray,\n            only: onlyChild\n        };\n        exports.Children = Children;\n        exports.Component = Component;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.Profiler = REACT_PROFILER_TYPE;\n        exports.PureComponent = PureComponent;\n        exports.StrictMode = REACT_STRICT_MODE_TYPE;\n        exports.Suspense = REACT_SUSPENSE_TYPE;\n        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n        exports.cloneElement = cloneElement$1;\n        exports.createContext = createContext;\n        exports.createElement = createElement$1;\n        exports.createFactory = createFactory;\n        exports.createRef = createRef;\n        exports.forwardRef = forwardRef;\n        exports.isValidElement = isValidElement;\n        exports.lazy = lazy;\n        exports.memo = memo;\n        exports.startTransition = startTransition;\n        exports.unstable_act = act;\n        exports.useCallback = useCallback;\n        exports.useContext = useContext;\n        exports.useDebugValue = useDebugValue;\n        exports.useDeferredValue = useDeferredValue;\n        exports.useEffect = useEffect;\n        exports.useId = useId;\n        exports.useImperativeHandle = useImperativeHandle;\n        exports.useInsertionEffect = useInsertionEffect;\n        exports.useLayoutEffect = useLayoutEffect;\n        exports.useMemo = useMemo;\n        exports.useReducer = useReducer;\n        exports.useRef = useRef;\n        exports.useState = useState;\n        exports.useSyncExternalStore = useSyncExternalStore;\n        exports.useTransition = useTransition;\n        exports.version = ReactVersion;\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n        }\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"(middleware)/./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLG9JQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanM/MWZiMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9jZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/react/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/snake-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/snake-case/dist.es2015/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   snakeCase: () => (/* binding */ snakeCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var dot_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dot-case */ \"(middleware)/./node_modules/dot-case/dist.es2015/index.js\");\n\n\nfunction snakeCase(input, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return (0,dot_case__WEBPACK_IMPORTED_MODULE_0__.dotCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({\n        delimiter: \"_\"\n    }, options));\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NuYWtlLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ0U7QUFDNUIsU0FBU0UsVUFBVUMsS0FBSyxFQUFFQyxPQUFPO0lBQ3BDLElBQUlBLFlBQVksS0FBSyxHQUFHO1FBQUVBLFVBQVUsQ0FBQztJQUFHO0lBQ3hDLE9BQU9ILGlEQUFPQSxDQUFDRSxPQUFPSCwrQ0FBUUEsQ0FBQztRQUFFSyxXQUFXO0lBQUksR0FBR0Q7QUFDdkQsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NuYWtlLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanM/MjY3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2Fzc2lnbiB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgZG90Q2FzZSB9IGZyb20gXCJkb3QtY2FzZVwiO1xuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlQ2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgcmV0dXJuIGRvdENhc2UoaW5wdXQsIF9fYXNzaWduKHsgZGVsaW1pdGVyOiBcIl9cIiB9LCBvcHRpb25zKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiX19hc3NpZ24iLCJkb3RDYXNlIiwic25ha2VDYXNlIiwiaW5wdXQiLCJvcHRpb25zIiwiZGVsaW1pdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/snake-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/snakecase-keys/index.js":
/*!**********************************************!*\
  !*** ./node_modules/snakecase-keys/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst map = __webpack_require__(/*! map-obj */ \"(middleware)/./node_modules/map-obj/index.js\");\nconst { snakeCase } = __webpack_require__(/*! snake-case */ \"(middleware)/./node_modules/snake-case/dist.es2015/index.js\");\nconst PlainObjectConstructor = {}.constructor;\nmodule.exports = function(obj, options) {\n    if (Array.isArray(obj)) {\n        if (obj.some((item)=>item.constructor !== PlainObjectConstructor)) {\n            throw new Error(\"obj must be array of plain objects\");\n        }\n    } else {\n        if (obj.constructor !== PlainObjectConstructor) {\n            throw new Error(\"obj must be an plain object\");\n        }\n    }\n    options = Object.assign({\n        deep: true,\n        exclude: [],\n        parsingOptions: {}\n    }, options);\n    return map(obj, function(key, val) {\n        return [\n            matches(options.exclude, key) ? key : snakeCase(key, options.parsingOptions),\n            val,\n            mapperOptions(key, val, options)\n        ];\n    }, options);\n};\nfunction matches(patterns, value) {\n    return patterns.some(function(pattern) {\n        return typeof pattern === \"string\" ? pattern === value : pattern.test(value);\n    });\n}\nfunction mapperOptions(key, val, options) {\n    return options.shouldRecurse ? {\n        shouldRecurse: options.shouldRecurse(key, val)\n    } : undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NuYWtlY2FzZS1rZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsTUFBTUMsbUJBQU9BLENBQUM7QUFDcEIsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBR0QsbUJBQU9BLENBQUM7QUFFOUIsTUFBTUUseUJBQXlCLENBQUMsRUFBRUMsV0FBVztBQUU3Q0MsT0FBT0MsT0FBTyxHQUFHLFNBQVVDLEdBQUcsRUFBRUMsT0FBTztJQUNyQyxJQUFJQyxNQUFNQyxPQUFPLENBQUNILE1BQU07UUFDdEIsSUFBSUEsSUFBSUksSUFBSSxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLUixXQUFXLEtBQUtELHlCQUF5QjtZQUNqRSxNQUFNLElBQUlVLE1BQU07UUFDbEI7SUFDRixPQUFPO1FBQ0wsSUFBSU4sSUFBSUgsV0FBVyxLQUFLRCx3QkFBd0I7WUFDOUMsTUFBTSxJQUFJVSxNQUFNO1FBQ2xCO0lBQ0Y7SUFFQUwsVUFBVU0sT0FBT0MsTUFBTSxDQUFDO1FBQUVDLE1BQU07UUFBTUMsU0FBUyxFQUFFO1FBQUVDLGdCQUFnQixDQUFDO0lBQUUsR0FBR1Y7SUFFekUsT0FBT1IsSUFBSU8sS0FBSyxTQUFVWSxHQUFHLEVBQUVDLEdBQUc7UUFDaEMsT0FBTztZQUNMQyxRQUFRYixRQUFRUyxPQUFPLEVBQUVFLE9BQU9BLE1BQU1qQixVQUFVaUIsS0FBS1gsUUFBUVUsY0FBYztZQUMzRUU7WUFDQUUsY0FBY0gsS0FBS0MsS0FBS1o7U0FDekI7SUFDSCxHQUFHQTtBQUNMO0FBRUEsU0FBU2EsUUFBU0UsUUFBUSxFQUFFQyxLQUFLO0lBQy9CLE9BQU9ELFNBQVNaLElBQUksQ0FBQyxTQUFVYyxPQUFPO1FBQ3BDLE9BQU8sT0FBT0EsWUFBWSxXQUN0QkEsWUFBWUQsUUFDWkMsUUFBUUMsSUFBSSxDQUFDRjtJQUNuQjtBQUNGO0FBRUEsU0FBU0YsY0FBZUgsR0FBRyxFQUFFQyxHQUFHLEVBQUVaLE9BQU87SUFDdkMsT0FBT0EsUUFBUW1CLGFBQWEsR0FDeEI7UUFBRUEsZUFBZW5CLFFBQVFtQixhQUFhLENBQUNSLEtBQUtDO0lBQUssSUFDakRRO0FBQ04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NuYWtlY2FzZS1rZXlzL2luZGV4LmpzPzBlZjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IG1hcCA9IHJlcXVpcmUoJ21hcC1vYmonKVxuY29uc3QgeyBzbmFrZUNhc2UgfSA9IHJlcXVpcmUoJ3NuYWtlLWNhc2UnKVxuXG5jb25zdCBQbGFpbk9iamVjdENvbnN0cnVjdG9yID0ge30uY29uc3RydWN0b3JcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqLCBvcHRpb25zKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICBpZiAob2JqLnNvbWUoaXRlbSA9PiBpdGVtLmNvbnN0cnVjdG9yICE9PSBQbGFpbk9iamVjdENvbnN0cnVjdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdvYmogbXVzdCBiZSBhcnJheSBvZiBwbGFpbiBvYmplY3RzJylcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKG9iai5jb25zdHJ1Y3RvciAhPT0gUGxhaW5PYmplY3RDb25zdHJ1Y3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdvYmogbXVzdCBiZSBhbiBwbGFpbiBvYmplY3QnKVxuICAgIH1cbiAgfVxuXG4gIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgZGVlcDogdHJ1ZSwgZXhjbHVkZTogW10sIHBhcnNpbmdPcHRpb25zOiB7fSB9LCBvcHRpb25zKVxuXG4gIHJldHVybiBtYXAob2JqLCBmdW5jdGlvbiAoa2V5LCB2YWwpIHtcbiAgICByZXR1cm4gW1xuICAgICAgbWF0Y2hlcyhvcHRpb25zLmV4Y2x1ZGUsIGtleSkgPyBrZXkgOiBzbmFrZUNhc2Uoa2V5LCBvcHRpb25zLnBhcnNpbmdPcHRpb25zKSxcbiAgICAgIHZhbCxcbiAgICAgIG1hcHBlck9wdGlvbnMoa2V5LCB2YWwsIG9wdGlvbnMpXG4gICAgXVxuICB9LCBvcHRpb25zKVxufVxuXG5mdW5jdGlvbiBtYXRjaGVzIChwYXR0ZXJucywgdmFsdWUpIHtcbiAgcmV0dXJuIHBhdHRlcm5zLnNvbWUoZnVuY3Rpb24gKHBhdHRlcm4pIHtcbiAgICByZXR1cm4gdHlwZW9mIHBhdHRlcm4gPT09ICdzdHJpbmcnXG4gICAgICA/IHBhdHRlcm4gPT09IHZhbHVlXG4gICAgICA6IHBhdHRlcm4udGVzdCh2YWx1ZSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gbWFwcGVyT3B0aW9ucyAoa2V5LCB2YWwsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuc2hvdWxkUmVjdXJzZVxuICAgID8geyBzaG91bGRSZWN1cnNlOiBvcHRpb25zLnNob3VsZFJlY3Vyc2Uoa2V5LCB2YWwpIH1cbiAgICA6IHVuZGVmaW5lZFxufVxuIl0sIm5hbWVzIjpbIm1hcCIsInJlcXVpcmUiLCJzbmFrZUNhc2UiLCJQbGFpbk9iamVjdENvbnN0cnVjdG9yIiwiY29uc3RydWN0b3IiLCJtb2R1bGUiLCJleHBvcnRzIiwib2JqIiwib3B0aW9ucyIsIkFycmF5IiwiaXNBcnJheSIsInNvbWUiLCJpdGVtIiwiRXJyb3IiLCJPYmplY3QiLCJhc3NpZ24iLCJkZWVwIiwiZXhjbHVkZSIsInBhcnNpbmdPcHRpb25zIiwia2V5IiwidmFsIiwibWF0Y2hlcyIsIm1hcHBlck9wdGlvbnMiLCJwYXR0ZXJucyIsInZhbHVlIiwicGF0dGVybiIsInRlc3QiLCJzaG91bGRSZWN1cnNlIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/snakecase-keys/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar __createBinding = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction __exportStar(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\n/** @deprecated */ function __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\n/** @deprecated */ function __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nvar __setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/index.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__.clerkMiddleware)());\nconst config = {\n    matcher: [\n        // Skip Next.js internals and all static files, unless found in search params\n        \"/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)\",\n        // Always run for API routes\n        \"/(api|trpc)(.*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBRXZELGlFQUFlQSxxRUFBZUEsRUFBRUEsRUFBQztBQUUxQixNQUFNQyxTQUFTO0lBQ3BCQyxTQUFTO1FBQ1AsNkVBQTZFO1FBQzdFO1FBQ0EsNEJBQTRCO1FBQzVCO0tBQ0Q7QUFDSCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9taWRkbGV3YXJlLnRzP2QxOTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xlcmtNaWRkbGV3YXJlIH0gZnJvbSBcIkBjbGVyay9uZXh0anMvc2VydmVyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGVya01pZGRsZXdhcmUoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgbWF0Y2hlcjogW1xyXG4gICAgLy8gU2tpcCBOZXh0LmpzIGludGVybmFscyBhbmQgYWxsIHN0YXRpYyBmaWxlcywgdW5sZXNzIGZvdW5kIGluIHNlYXJjaCBwYXJhbXNcclxuICAgIFwiLygoPyFfbmV4dHxbXj9dKlxcXFwuKD86aHRtbD98Y3NzfGpzKD8hb24pfGpwZT9nfHdlYnB8cG5nfGdpZnxzdmd8dHRmfHdvZmYyP3xpY298Y3N2fGRvY3g/fHhsc3g/fHppcHx3ZWJtYW5pZmVzdCkpLiopXCIsXHJcbiAgICAvLyBBbHdheXMgcnVuIGZvciBBUEkgcm91dGVzXHJcbiAgICBcIi8oYXBpfHRycGMpKC4qKVwiLFxyXG4gIF0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJjbGVya01pZGRsZXdhcmUiLCJjb25maWciLCJtYXRjaGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignJWTError: () => (/* binding */ SignJWTError),\n/* harmony export */   TokenVerificationError: () => (/* binding */ TokenVerificationError),\n/* harmony export */   TokenVerificationErrorAction: () => (/* binding */ TokenVerificationErrorAction),\n/* harmony export */   TokenVerificationErrorCode: () => (/* binding */ TokenVerificationErrorCode),\n/* harmony export */   TokenVerificationErrorReason: () => (/* binding */ TokenVerificationErrorReason)\n/* harmony export */ });\n// src/errors.ts\nvar TokenVerificationErrorCode = {\n    InvalidSecretKey: \"clerk_key_invalid\"\n};\nvar TokenVerificationErrorReason = {\n    TokenExpired: \"token-expired\",\n    TokenInvalid: \"token-invalid\",\n    TokenInvalidAlgorithm: \"token-invalid-algorithm\",\n    TokenInvalidAuthorizedParties: \"token-invalid-authorized-parties\",\n    TokenInvalidSignature: \"token-invalid-signature\",\n    TokenNotActiveYet: \"token-not-active-yet\",\n    TokenIatInTheFuture: \"token-iat-in-the-future\",\n    TokenVerificationFailed: \"token-verification-failed\",\n    InvalidSecretKey: \"secret-key-invalid\",\n    LocalJWKMissing: \"jwk-local-missing\",\n    RemoteJWKFailedToLoad: \"jwk-remote-failed-to-load\",\n    RemoteJWKInvalid: \"jwk-remote-invalid\",\n    RemoteJWKMissing: \"jwk-remote-missing\",\n    JWKFailedToResolve: \"jwk-failed-to-resolve\",\n    JWKKidMismatch: \"jwk-kid-mismatch\"\n};\nvar TokenVerificationErrorAction = {\n    ContactSupport: \"Contact support@clerk.com\",\n    EnsureClerkJWT: \"Make sure that this is a valid Clerk generate JWT.\",\n    SetClerkJWTKey: \"Set the CLERK_JWT_KEY environment variable.\",\n    SetClerkSecretKey: \"Set the CLERK_SECRET_KEY environment variable.\",\n    EnsureClockSync: \"Make sure your system clock is in sync (e.g. turn off and on automatic time synchronization).\"\n};\nvar TokenVerificationError = class _TokenVerificationError extends Error {\n    constructor({ action, message, reason }){\n        super(message);\n        Object.setPrototypeOf(this, _TokenVerificationError.prototype);\n        this.reason = reason;\n        this.message = message;\n        this.action = action;\n    }\n    getFullMessage() {\n        return `${[\n            this.message,\n            this.action\n        ].filter((m)=>m).join(\" \")} (reason=${this.reason}, token-carrier=${this.tokenCarrier})`;\n    }\n};\nvar SignJWTError = class extends Error {\n};\n //# sourceMappingURL=chunk-5JS2VYLU.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstNUpTMlZZTFUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsZ0JBQWdCO0FBQ2hCLElBQUlBLDZCQUE2QjtJQUMvQkMsa0JBQWtCO0FBQ3BCO0FBQ0EsSUFBSUMsK0JBQStCO0lBQ2pDQyxjQUFjO0lBQ2RDLGNBQWM7SUFDZEMsdUJBQXVCO0lBQ3ZCQywrQkFBK0I7SUFDL0JDLHVCQUF1QjtJQUN2QkMsbUJBQW1CO0lBQ25CQyxxQkFBcUI7SUFDckJDLHlCQUF5QjtJQUN6QlQsa0JBQWtCO0lBQ2xCVSxpQkFBaUI7SUFDakJDLHVCQUF1QjtJQUN2QkMsa0JBQWtCO0lBQ2xCQyxrQkFBa0I7SUFDbEJDLG9CQUFvQjtJQUNwQkMsZ0JBQWdCO0FBQ2xCO0FBQ0EsSUFBSUMsK0JBQStCO0lBQ2pDQyxnQkFBZ0I7SUFDaEJDLGdCQUFnQjtJQUNoQkMsZ0JBQWdCO0lBQ2hCQyxtQkFBbUI7SUFDbkJDLGlCQUFpQjtBQUNuQjtBQUNBLElBQUlDLHlCQUF5QixNQUFNQyxnQ0FBZ0NDO0lBQ2pFQyxZQUFZLEVBQ1ZDLE1BQU0sRUFDTkMsT0FBTyxFQUNQQyxNQUFNLEVBQ1AsQ0FBRTtRQUNELEtBQUssQ0FBQ0Q7UUFDTkUsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRVAsd0JBQXdCUSxTQUFTO1FBQzdELElBQUksQ0FBQ0gsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ0QsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0QsTUFBTSxHQUFHQTtJQUNoQjtJQUNBTSxpQkFBaUI7UUFDZixPQUFPLENBQUMsRUFBRTtZQUFDLElBQUksQ0FBQ0wsT0FBTztZQUFFLElBQUksQ0FBQ0QsTUFBTTtTQUFDLENBQUNPLE1BQU0sQ0FBQyxDQUFDQyxJQUFNQSxHQUFHQyxJQUFJLENBQUMsS0FBSyxTQUFTLEVBQUUsSUFBSSxDQUFDUCxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDUSxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQ2hJO0FBQ0Y7QUFDQSxJQUFJQyxlQUFlLGNBQWNiO0FBQ2pDO0FBUUUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstNUpTMlZZTFUubWpzP2ZmODEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2Vycm9ycy50c1xudmFyIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JDb2RlID0ge1xuICBJbnZhbGlkU2VjcmV0S2V5OiBcImNsZXJrX2tleV9pbnZhbGlkXCJcbn07XG52YXIgVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbiA9IHtcbiAgVG9rZW5FeHBpcmVkOiBcInRva2VuLWV4cGlyZWRcIixcbiAgVG9rZW5JbnZhbGlkOiBcInRva2VuLWludmFsaWRcIixcbiAgVG9rZW5JbnZhbGlkQWxnb3JpdGhtOiBcInRva2VuLWludmFsaWQtYWxnb3JpdGhtXCIsXG4gIFRva2VuSW52YWxpZEF1dGhvcml6ZWRQYXJ0aWVzOiBcInRva2VuLWludmFsaWQtYXV0aG9yaXplZC1wYXJ0aWVzXCIsXG4gIFRva2VuSW52YWxpZFNpZ25hdHVyZTogXCJ0b2tlbi1pbnZhbGlkLXNpZ25hdHVyZVwiLFxuICBUb2tlbk5vdEFjdGl2ZVlldDogXCJ0b2tlbi1ub3QtYWN0aXZlLXlldFwiLFxuICBUb2tlbklhdEluVGhlRnV0dXJlOiBcInRva2VuLWlhdC1pbi10aGUtZnV0dXJlXCIsXG4gIFRva2VuVmVyaWZpY2F0aW9uRmFpbGVkOiBcInRva2VuLXZlcmlmaWNhdGlvbi1mYWlsZWRcIixcbiAgSW52YWxpZFNlY3JldEtleTogXCJzZWNyZXQta2V5LWludmFsaWRcIixcbiAgTG9jYWxKV0tNaXNzaW5nOiBcImp3ay1sb2NhbC1taXNzaW5nXCIsXG4gIFJlbW90ZUpXS0ZhaWxlZFRvTG9hZDogXCJqd2stcmVtb3RlLWZhaWxlZC10by1sb2FkXCIsXG4gIFJlbW90ZUpXS0ludmFsaWQ6IFwiandrLXJlbW90ZS1pbnZhbGlkXCIsXG4gIFJlbW90ZUpXS01pc3Npbmc6IFwiandrLXJlbW90ZS1taXNzaW5nXCIsXG4gIEpXS0ZhaWxlZFRvUmVzb2x2ZTogXCJqd2stZmFpbGVkLXRvLXJlc29sdmVcIixcbiAgSldLS2lkTWlzbWF0Y2g6IFwiandrLWtpZC1taXNtYXRjaFwiXG59O1xudmFyIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JBY3Rpb24gPSB7XG4gIENvbnRhY3RTdXBwb3J0OiBcIkNvbnRhY3Qgc3VwcG9ydEBjbGVyay5jb21cIixcbiAgRW5zdXJlQ2xlcmtKV1Q6IFwiTWFrZSBzdXJlIHRoYXQgdGhpcyBpcyBhIHZhbGlkIENsZXJrIGdlbmVyYXRlIEpXVC5cIixcbiAgU2V0Q2xlcmtKV1RLZXk6IFwiU2V0IHRoZSBDTEVSS19KV1RfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlLlwiLFxuICBTZXRDbGVya1NlY3JldEtleTogXCJTZXQgdGhlIENMRVJLX1NFQ1JFVF9LRVkgZW52aXJvbm1lbnQgdmFyaWFibGUuXCIsXG4gIEVuc3VyZUNsb2NrU3luYzogXCJNYWtlIHN1cmUgeW91ciBzeXN0ZW0gY2xvY2sgaXMgaW4gc3luYyAoZS5nLiB0dXJuIG9mZiBhbmQgb24gYXV0b21hdGljIHRpbWUgc3luY2hyb25pemF0aW9uKS5cIlxufTtcbnZhciBUb2tlblZlcmlmaWNhdGlvbkVycm9yID0gY2xhc3MgX1Rva2VuVmVyaWZpY2F0aW9uRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICBhY3Rpb24sXG4gICAgbWVzc2FnZSxcbiAgICByZWFzb25cbiAgfSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBfVG9rZW5WZXJpZmljYXRpb25FcnJvci5wcm90b3R5cGUpO1xuICAgIHRoaXMucmVhc29uID0gcmVhc29uO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5hY3Rpb24gPSBhY3Rpb247XG4gIH1cbiAgZ2V0RnVsbE1lc3NhZ2UoKSB7XG4gICAgcmV0dXJuIGAke1t0aGlzLm1lc3NhZ2UsIHRoaXMuYWN0aW9uXS5maWx0ZXIoKG0pID0+IG0pLmpvaW4oXCIgXCIpfSAocmVhc29uPSR7dGhpcy5yZWFzb259LCB0b2tlbi1jYXJyaWVyPSR7dGhpcy50b2tlbkNhcnJpZXJ9KWA7XG4gIH1cbn07XG52YXIgU2lnbkpXVEVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG59O1xuXG5leHBvcnQge1xuICBUb2tlblZlcmlmaWNhdGlvbkVycm9yQ29kZSxcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbixcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvckFjdGlvbixcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvcixcbiAgU2lnbkpXVEVycm9yXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNUpTMlZZTFUubWpzLm1hcCJdLCJuYW1lcyI6WyJUb2tlblZlcmlmaWNhdGlvbkVycm9yQ29kZSIsIkludmFsaWRTZWNyZXRLZXkiLCJUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uIiwiVG9rZW5FeHBpcmVkIiwiVG9rZW5JbnZhbGlkIiwiVG9rZW5JbnZhbGlkQWxnb3JpdGhtIiwiVG9rZW5JbnZhbGlkQXV0aG9yaXplZFBhcnRpZXMiLCJUb2tlbkludmFsaWRTaWduYXR1cmUiLCJUb2tlbk5vdEFjdGl2ZVlldCIsIlRva2VuSWF0SW5UaGVGdXR1cmUiLCJUb2tlblZlcmlmaWNhdGlvbkZhaWxlZCIsIkxvY2FsSldLTWlzc2luZyIsIlJlbW90ZUpXS0ZhaWxlZFRvTG9hZCIsIlJlbW90ZUpXS0ludmFsaWQiLCJSZW1vdGVKV0tNaXNzaW5nIiwiSldLRmFpbGVkVG9SZXNvbHZlIiwiSldLS2lkTWlzbWF0Y2giLCJUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uIiwiQ29udGFjdFN1cHBvcnQiLCJFbnN1cmVDbGVya0pXVCIsIlNldENsZXJrSldUS2V5IiwiU2V0Q2xlcmtTZWNyZXRLZXkiLCJFbnN1cmVDbG9ja1N5bmMiLCJUb2tlblZlcmlmaWNhdGlvbkVycm9yIiwiX1Rva2VuVmVyaWZpY2F0aW9uRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiYWN0aW9uIiwibWVzc2FnZSIsInJlYXNvbiIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiZ2V0RnVsbE1lc3NhZ2UiLCJmaWx0ZXIiLCJtIiwiam9pbiIsInRva2VuQ2FycmllciIsIlNpZ25KV1RFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertHeaderAlgorithm: () => (/* binding */ assertHeaderAlgorithm),\n/* harmony export */   assertHeaderType: () => (/* binding */ assertHeaderType),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt),\n/* harmony export */   getCryptoAlgorithm: () => (/* binding */ getCryptoAlgorithm),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature),\n/* harmony export */   importKey: () => (/* binding */ importKey),\n/* harmony export */   runtime: () => (/* binding */ runtime),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt)\n/* harmony export */ });\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #crypto */ \"(middleware)/./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\");\n/* harmony import */ var _clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/isomorphicAtob */ \"(middleware)/./node_modules/@clerk/shared/dist/isomorphicAtob.mjs\");\n\n// src/runtime.ts\n\nvar globalFetch = fetch.bind(globalThis);\nvar runtime = {\n    crypto: _crypto__WEBPACK_IMPORTED_MODULE_1__.webcrypto,\n    get fetch () {\n        return  false ? 0 : globalFetch;\n    },\n    AbortController: globalThis.AbortController,\n    Blob: globalThis.Blob,\n    FormData: globalThis.FormData,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n};\n// src/util/rfc4648.ts\nvar base64url = {\n    parse (string, opts) {\n        return parse(string, base64UrlEncoding, opts);\n    },\n    stringify (data, opts) {\n        return stringify(data, base64UrlEncoding, opts);\n    }\n};\nvar base64UrlEncoding = {\n    chars: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bits: 6\n};\nfunction parse(string, encoding, opts = {}) {\n    if (!encoding.codes) {\n        encoding.codes = {};\n        for(let i = 0; i < encoding.chars.length; ++i){\n            encoding.codes[encoding.chars[i]] = i;\n        }\n    }\n    if (!opts.loose && string.length * encoding.bits & 7) {\n        throw new SyntaxError(\"Invalid padding\");\n    }\n    let end = string.length;\n    while(string[end - 1] === \"=\"){\n        --end;\n        if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n            throw new SyntaxError(\"Invalid padding\");\n        }\n    }\n    const out = new (opts.out ?? Uint8Array)(end * encoding.bits / 8 | 0);\n    let bits = 0;\n    let buffer = 0;\n    let written = 0;\n    for(let i = 0; i < end; ++i){\n        const value = encoding.codes[string[i]];\n        if (value === void 0) {\n            throw new SyntaxError(\"Invalid character \" + string[i]);\n        }\n        buffer = buffer << encoding.bits | value;\n        bits += encoding.bits;\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 255 & buffer >> bits;\n        }\n    }\n    if (bits >= encoding.bits || 255 & buffer << 8 - bits) {\n        throw new SyntaxError(\"Unexpected end of data\");\n    }\n    return out;\n}\nfunction stringify(data, encoding, opts = {}) {\n    const { pad = true } = opts;\n    const mask = (1 << encoding.bits) - 1;\n    let out = \"\";\n    let bits = 0;\n    let buffer = 0;\n    for(let i = 0; i < data.length; ++i){\n        buffer = buffer << 8 | 255 & data[i];\n        bits += 8;\n        while(bits > encoding.bits){\n            bits -= encoding.bits;\n            out += encoding.chars[mask & buffer >> bits];\n        }\n    }\n    if (bits) {\n        out += encoding.chars[mask & buffer << encoding.bits - bits];\n    }\n    if (pad) {\n        while(out.length * encoding.bits & 7){\n            out += \"=\";\n        }\n    }\n    return out;\n}\n// src/jwt/algorithms.ts\nvar algToHash = {\n    RS256: \"SHA-256\",\n    RS384: \"SHA-384\",\n    RS512: \"SHA-512\"\n};\nvar RSA_ALGORITHM_NAME = \"RSASSA-PKCS1-v1_5\";\nvar jwksAlgToCryptoAlg = {\n    RS256: RSA_ALGORITHM_NAME,\n    RS384: RSA_ALGORITHM_NAME,\n    RS512: RSA_ALGORITHM_NAME\n};\nvar algs = Object.keys(algToHash);\nfunction getCryptoAlgorithm(algorithmName) {\n    const hash = algToHash[algorithmName];\n    const name = jwksAlgToCryptoAlg[algorithmName];\n    if (!hash || !name) {\n        throw new Error(`Unsupported algorithm ${algorithmName}, expected one of ${algs.join(\",\")}.`);\n    }\n    return {\n        hash: {\n            name: algToHash[algorithmName]\n        },\n        name: jwksAlgToCryptoAlg[algorithmName]\n    };\n}\n// src/jwt/assertions.ts\nvar isArrayString = (s)=>{\n    return Array.isArray(s) && s.length > 0 && s.every((a)=>typeof a === \"string\");\n};\nvar assertAudienceClaim = (aud, audience)=>{\n    const audienceList = [\n        audience\n    ].flat().filter((a)=>!!a);\n    const audList = [\n        aud\n    ].flat().filter((a)=>!!a);\n    const shouldVerifyAudience = audienceList.length > 0 && audList.length > 0;\n    if (!shouldVerifyAudience) {\n        return;\n    }\n    if (typeof aud === \"string\") {\n        if (!audienceList.includes(aud)) {\n            throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n                action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n                reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n                message: `Invalid JWT audience claim (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(audienceList)}\".`\n            });\n        }\n    } else if (isArrayString(aud)) {\n        if (!aud.some((a)=>audienceList.includes(a))) {\n            throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n                action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n                reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n                message: `Invalid JWT audience claim array (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(audienceList)}\".`\n            });\n        }\n    }\n};\nvar assertHeaderType = (typ)=>{\n    if (typeof typ === \"undefined\") {\n        return;\n    }\n    if (typ !== \"JWT\") {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n            message: `Invalid JWT type ${JSON.stringify(typ)}. Expected \"JWT\".`\n        });\n    }\n};\nvar assertHeaderAlgorithm = (alg)=>{\n    if (!algs.includes(alg)) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAlgorithm,\n            message: `Invalid JWT algorithm ${JSON.stringify(alg)}. Supported: ${algs}.`\n        });\n    }\n};\nvar assertSubClaim = (sub)=>{\n    if (typeof sub !== \"string\") {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n            message: `Subject claim (sub) is required and must be a string. Received ${JSON.stringify(sub)}.`\n        });\n    }\n};\nvar assertAuthorizedPartiesClaim = (azp, authorizedParties)=>{\n    if (!azp || !authorizedParties || authorizedParties.length === 0) {\n        return;\n    }\n    if (!authorizedParties.includes(azp)) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAuthorizedParties,\n            message: `Invalid JWT Authorized party claim (azp) ${JSON.stringify(azp)}. Expected \"${authorizedParties}\".`\n        });\n    }\n};\nvar assertExpirationClaim = (exp, clockSkewInMs)=>{\n    if (typeof exp !== \"number\") {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n            message: `Invalid JWT expiry date claim (exp) ${JSON.stringify(exp)}. Expected number.`\n        });\n    }\n    const currentDate = new Date(Date.now());\n    const expiryDate = /* @__PURE__ */ new Date(0);\n    expiryDate.setUTCSeconds(exp);\n    const expired = expiryDate.getTime() <= currentDate.getTime() - clockSkewInMs;\n    if (expired) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenExpired,\n            message: `JWT is expired. Expiry date: ${expiryDate.toUTCString()}, Current date: ${currentDate.toUTCString()}.`\n        });\n    }\n};\nvar assertActivationClaim = (nbf, clockSkewInMs)=>{\n    if (typeof nbf === \"undefined\") {\n        return;\n    }\n    if (typeof nbf !== \"number\") {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n            message: `Invalid JWT not before date claim (nbf) ${JSON.stringify(nbf)}. Expected number.`\n        });\n    }\n    const currentDate = new Date(Date.now());\n    const notBeforeDate = /* @__PURE__ */ new Date(0);\n    notBeforeDate.setUTCSeconds(nbf);\n    const early = notBeforeDate.getTime() > currentDate.getTime() + clockSkewInMs;\n    if (early) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenNotActiveYet,\n            message: `JWT cannot be used prior to not before date claim (nbf). Not before date: ${notBeforeDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n        });\n    }\n};\nvar assertIssuedAtClaim = (iat, clockSkewInMs)=>{\n    if (typeof iat === \"undefined\") {\n        return;\n    }\n    if (typeof iat !== \"number\") {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n            message: `Invalid JWT issued at date claim (iat) ${JSON.stringify(iat)}. Expected number.`\n        });\n    }\n    const currentDate = new Date(Date.now());\n    const issuedAtDate = /* @__PURE__ */ new Date(0);\n    issuedAtDate.setUTCSeconds(iat);\n    const postIssued = issuedAtDate.getTime() > currentDate.getTime() + clockSkewInMs;\n    if (postIssued) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenIatInTheFuture,\n            message: `JWT issued at date claim (iat) is in the future. Issued at date: ${issuedAtDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n        });\n    }\n};\n// src/jwt/cryptoKeys.ts\n\nfunction pemToBuffer(secret) {\n    const trimmed = secret.replace(/-----BEGIN.*?-----/g, \"\").replace(/-----END.*?-----/g, \"\").replace(/\\s/g, \"\");\n    const decoded = (0,_clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__.isomorphicAtob)(trimmed);\n    const buffer = new ArrayBuffer(decoded.length);\n    const bufView = new Uint8Array(buffer);\n    for(let i = 0, strLen = decoded.length; i < strLen; i++){\n        bufView[i] = decoded.charCodeAt(i);\n    }\n    return bufView;\n}\nfunction importKey(key, algorithm, keyUsage) {\n    if (typeof key === \"object\") {\n        return runtime.crypto.subtle.importKey(\"jwk\", key, algorithm, false, [\n            keyUsage\n        ]);\n    }\n    const keyData = pemToBuffer(key);\n    const format = keyUsage === \"sign\" ? \"pkcs8\" : \"spki\";\n    return runtime.crypto.subtle.importKey(format, keyData, algorithm, false, [\n        keyUsage\n    ]);\n}\n// src/jwt/verifyJwt.ts\nvar DEFAULT_CLOCK_SKEW_IN_SECONDS = 5 * 1e3;\nasync function hasValidSignature(jwt, key) {\n    const { header, signature, raw } = jwt;\n    const encoder = new TextEncoder();\n    const data = encoder.encode([\n        raw.header,\n        raw.payload\n    ].join(\".\"));\n    const algorithm = getCryptoAlgorithm(header.alg);\n    try {\n        const cryptoKey = await importKey(key, algorithm, \"verify\");\n        const verified = await runtime.crypto.subtle.verify(algorithm.name, cryptoKey, signature, data);\n        return {\n            data: verified\n        };\n    } catch (error) {\n        return {\n            errors: [\n                new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n                    reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n                    message: error?.message\n                })\n            ]\n        };\n    }\n}\nfunction decodeJwt(token) {\n    const tokenParts = (token || \"\").toString().split(\".\");\n    if (tokenParts.length !== 3) {\n        return {\n            errors: [\n                new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n                    reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n                    message: `Invalid JWT form. A JWT consists of three parts separated by dots.`\n                })\n            ]\n        };\n    }\n    const [rawHeader, rawPayload, rawSignature] = tokenParts;\n    const decoder = new TextDecoder();\n    const header = JSON.parse(decoder.decode(base64url.parse(rawHeader, {\n        loose: true\n    })));\n    const payload = JSON.parse(decoder.decode(base64url.parse(rawPayload, {\n        loose: true\n    })));\n    const signature = base64url.parse(rawSignature, {\n        loose: true\n    });\n    const data = {\n        header,\n        payload,\n        signature,\n        raw: {\n            header: rawHeader,\n            payload: rawPayload,\n            signature: rawSignature,\n            text: token\n        }\n    };\n    return {\n        data\n    };\n}\nasync function verifyJwt(token, options) {\n    const { audience, authorizedParties, clockSkewInMs, key } = options;\n    const clockSkew = clockSkewInMs || DEFAULT_CLOCK_SKEW_IN_SECONDS;\n    const { data: decoded, errors } = decodeJwt(token);\n    if (errors) {\n        return {\n            errors\n        };\n    }\n    const { header, payload } = decoded;\n    try {\n        const { typ, alg } = header;\n        assertHeaderType(typ);\n        assertHeaderAlgorithm(alg);\n        const { azp, sub, aud, iat, exp, nbf } = payload;\n        assertSubClaim(sub);\n        assertAudienceClaim([\n            aud\n        ], [\n            audience\n        ]);\n        assertAuthorizedPartiesClaim(azp, authorizedParties);\n        assertExpirationClaim(exp, clockSkew);\n        assertActivationClaim(nbf, clockSkew);\n        assertIssuedAtClaim(iat, clockSkew);\n    } catch (err) {\n        return {\n            errors: [\n                err\n            ]\n        };\n    }\n    const { data: signatureValid, errors: signatureErrors } = await hasValidSignature(decoded, key);\n    if (signatureErrors) {\n        return {\n            errors: [\n                new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n                    action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n                    reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n                    message: `Error verifying JWT signature. ${signatureErrors[0]}`\n                })\n            ]\n        };\n    }\n    if (!signatureValid) {\n        return {\n            errors: [\n                new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n                    reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n                    message: \"JWT signature is invalid.\"\n                })\n            ]\n        };\n    }\n    return {\n        data: payload\n    };\n}\n //# sourceMappingURL=chunk-AT3FJU3M.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-OFWLF3V3.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-OFWLF3V3.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* binding */ AuthStatus),\n/* harmony export */   constants: () => (/* binding */ constants),\n/* harmony export */   createAuthenticateRequest: () => (/* binding */ createAuthenticateRequest),\n/* harmony export */   createBackendApiClient: () => (/* binding */ createBackendApiClient),\n/* harmony export */   createClerkRequest: () => (/* binding */ createClerkRequest),\n/* harmony export */   debugRequestState: () => (/* binding */ debugRequestState),\n/* harmony export */   errorThrower: () => (/* binding */ errorThrower),\n/* harmony export */   makeAuthObjectSerializable: () => (/* binding */ makeAuthObjectSerializable),\n/* harmony export */   parsePublishableKey: () => (/* reexport safe */ _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.parsePublishableKey),\n/* harmony export */   signedInAuthObject: () => (/* binding */ signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* binding */ signedOutAuthObject),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/url */ \"(middleware)/./node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var _clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/callWithRetry */ \"(middleware)/./node_modules/@clerk/shared/dist/callWithRetry.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(middleware)/./node_modules/@clerk/shared/dist/deprecated.mjs\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @clerk/shared/error */ \"(middleware)/./node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var snakecase_keys__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! snakecase-keys */ \"(middleware)/./node_modules/snakecase-keys/index.js\");\n/* harmony import */ var _clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/authorization */ \"(middleware)/./node_modules/@clerk/shared/dist/authorization.mjs\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! cookie */ \"(middleware)/./node_modules/cookie/dist/index.js\");\n/* harmony import */ var _clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @clerk/shared/pathToRegexp */ \"(middleware)/./node_modules/@clerk/shared/dist/pathToRegexp.mjs\");\n\n\n// src/constants.ts\nvar API_URL = \"https://api.clerk.com\";\nvar API_VERSION = \"v1\";\nvar USER_AGENT = `${\"@clerk/backend\"}@${\"1.24.1\"}`;\nvar MAX_CACHE_LAST_UPDATED_AT_SECONDS = 5 * 60;\nvar JWKS_CACHE_TTL_MS = 1e3 * 60 * 60;\nvar SUPPORTED_BAPI_VERSION = \"2024-10-01\";\nvar Attributes = {\n    AuthToken: \"__clerkAuthToken\",\n    AuthSignature: \"__clerkAuthSignature\",\n    AuthStatus: \"__clerkAuthStatus\",\n    AuthReason: \"__clerkAuthReason\",\n    AuthMessage: \"__clerkAuthMessage\",\n    ClerkUrl: \"__clerkUrl\"\n};\nvar Cookies = {\n    Session: \"__session\",\n    Refresh: \"__refresh\",\n    ClientUat: \"__client_uat\",\n    Handshake: \"__clerk_handshake\",\n    DevBrowser: \"__clerk_db_jwt\",\n    RedirectCount: \"__clerk_redirect_count\"\n};\nvar QueryParameters = {\n    ClerkSynced: \"__clerk_synced\",\n    SuffixedCookies: \"suffixed_cookies\",\n    ClerkRedirectUrl: \"__clerk_redirect_url\",\n    // use the reference to Cookies to indicate that it's the same value\n    DevBrowser: Cookies.DevBrowser,\n    Handshake: Cookies.Handshake,\n    HandshakeHelp: \"__clerk_help\",\n    LegacyDevBrowser: \"__dev_session\",\n    HandshakeReason: \"__clerk_hs_reason\"\n};\nvar Headers2 = {\n    AuthToken: \"x-clerk-auth-token\",\n    AuthSignature: \"x-clerk-auth-signature\",\n    AuthStatus: \"x-clerk-auth-status\",\n    AuthReason: \"x-clerk-auth-reason\",\n    AuthMessage: \"x-clerk-auth-message\",\n    ClerkUrl: \"x-clerk-clerk-url\",\n    EnableDebug: \"x-clerk-debug\",\n    ClerkRequestData: \"x-clerk-request-data\",\n    ClerkRedirectTo: \"x-clerk-redirect-to\",\n    CloudFrontForwardedProto: \"cloudfront-forwarded-proto\",\n    Authorization: \"authorization\",\n    ForwardedPort: \"x-forwarded-port\",\n    ForwardedProto: \"x-forwarded-proto\",\n    ForwardedHost: \"x-forwarded-host\",\n    Accept: \"accept\",\n    Referrer: \"referer\",\n    UserAgent: \"user-agent\",\n    Origin: \"origin\",\n    Host: \"host\",\n    ContentType: \"content-type\",\n    SecFetchDest: \"sec-fetch-dest\",\n    Location: \"location\",\n    CacheControl: \"cache-control\"\n};\nvar ContentTypes = {\n    Json: \"application/json\"\n};\nvar constants = {\n    Attributes,\n    Cookies,\n    Headers: Headers2,\n    ContentTypes,\n    QueryParameters\n};\n// src/util/path.ts\nvar SEPARATOR = \"/\";\nvar MULTIPLE_SEPARATOR_REGEX = new RegExp(\"(?<!:)\" + SEPARATOR + \"{1,}\", \"g\");\nfunction joinPaths(...args) {\n    return args.filter((p)=>p).join(SEPARATOR).replace(MULTIPLE_SEPARATOR_REGEX, SEPARATOR);\n}\n// src/api/endpoints/AbstractApi.ts\nvar AbstractAPI = class {\n    constructor(request){\n        this.request = request;\n    }\n    requireId(id) {\n        if (!id) {\n            throw new Error(\"A valid resource ID is required.\");\n        }\n    }\n};\n// src/api/endpoints/AccountlessApplicationsAPI.ts\nvar basePath = \"/accountless_applications\";\nvar AccountlessApplicationAPI = class extends AbstractAPI {\n    async createAccountlessApplication() {\n        return this.request({\n            method: \"POST\",\n            path: basePath\n        });\n    }\n    async completeAccountlessApplicationOnboarding() {\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath, \"complete\")\n        });\n    }\n};\n// src/api/endpoints/AllowlistIdentifierApi.ts\nvar basePath2 = \"/allowlist_identifiers\";\nvar AllowlistIdentifierAPI = class extends AbstractAPI {\n    async getAllowlistIdentifierList() {\n        return this.request({\n            method: \"GET\",\n            path: basePath2,\n            queryParams: {\n                paginated: true\n            }\n        });\n    }\n    async createAllowlistIdentifier(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath2,\n            bodyParams: params\n        });\n    }\n    async deleteAllowlistIdentifier(allowlistIdentifierId) {\n        this.requireId(allowlistIdentifierId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath2, allowlistIdentifierId)\n        });\n    }\n};\n// src/api/endpoints/ClientApi.ts\nvar basePath3 = \"/clients\";\nvar ClientAPI = class extends AbstractAPI {\n    async getClientList(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: basePath3,\n            queryParams: {\n                ...params,\n                paginated: true\n            }\n        });\n    }\n    async getClient(clientId) {\n        this.requireId(clientId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath3, clientId)\n        });\n    }\n    verifyClient(token) {\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath3, \"verify\"),\n            bodyParams: {\n                token\n            }\n        });\n    }\n};\n// src/api/endpoints/DomainApi.ts\nvar basePath4 = \"/domains\";\nvar DomainAPI = class extends AbstractAPI {\n    async deleteDomain(id) {\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath4, id)\n        });\n    }\n};\n// src/api/endpoints/EmailAddressApi.ts\nvar basePath5 = \"/email_addresses\";\nvar EmailAddressAPI = class extends AbstractAPI {\n    async getEmailAddress(emailAddressId) {\n        this.requireId(emailAddressId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath5, emailAddressId)\n        });\n    }\n    async createEmailAddress(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath5,\n            bodyParams: params\n        });\n    }\n    async updateEmailAddress(emailAddressId, params = {}) {\n        this.requireId(emailAddressId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath5, emailAddressId),\n            bodyParams: params\n        });\n    }\n    async deleteEmailAddress(emailAddressId) {\n        this.requireId(emailAddressId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath5, emailAddressId)\n        });\n    }\n};\n// src/api/endpoints/InvitationApi.ts\nvar basePath6 = \"/invitations\";\nvar InvitationAPI = class extends AbstractAPI {\n    async getInvitationList(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: basePath6,\n            queryParams: {\n                ...params,\n                paginated: true\n            }\n        });\n    }\n    async createInvitation(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath6,\n            bodyParams: params\n        });\n    }\n    async revokeInvitation(invitationId) {\n        this.requireId(invitationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath6, invitationId, \"revoke\")\n        });\n    }\n};\n// src/api/endpoints/OrganizationApi.ts\nvar basePath7 = \"/organizations\";\nvar OrganizationAPI = class extends AbstractAPI {\n    async getOrganizationList(params) {\n        return this.request({\n            method: \"GET\",\n            path: basePath7,\n            queryParams: params\n        });\n    }\n    async createOrganization(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath7,\n            bodyParams: params\n        });\n    }\n    async getOrganization(params) {\n        const { includeMembersCount } = params;\n        const organizationIdOrSlug = \"organizationId\" in params ? params.organizationId : params.slug;\n        this.requireId(organizationIdOrSlug);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationIdOrSlug),\n            queryParams: {\n                includeMembersCount\n            }\n        });\n    }\n    async updateOrganization(organizationId, params) {\n        this.requireId(organizationId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId),\n            bodyParams: params\n        });\n    }\n    async updateOrganizationLogo(organizationId, params) {\n        this.requireId(organizationId);\n        const formData = new _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.FormData();\n        formData.append(\"file\", params?.file);\n        if (params?.uploaderUserId) {\n            formData.append(\"uploader_user_id\", params?.uploaderUserId);\n        }\n        return this.request({\n            method: \"PUT\",\n            path: joinPaths(basePath7, organizationId, \"logo\"),\n            formData\n        });\n    }\n    async deleteOrganizationLogo(organizationId) {\n        this.requireId(organizationId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath7, organizationId, \"logo\")\n        });\n    }\n    async updateOrganizationMetadata(organizationId, params) {\n        this.requireId(organizationId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId, \"metadata\"),\n            bodyParams: params\n        });\n    }\n    async deleteOrganization(organizationId) {\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath7, organizationId)\n        });\n    }\n    async getOrganizationMembershipList(params) {\n        const { organizationId, ...queryParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"memberships\"),\n            queryParams\n        });\n    }\n    async createOrganizationMembership(params) {\n        const { organizationId, ...bodyParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath7, organizationId, \"memberships\"),\n            bodyParams\n        });\n    }\n    async updateOrganizationMembership(params) {\n        const { organizationId, userId, ...bodyParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId, \"memberships\", userId),\n            bodyParams\n        });\n    }\n    async updateOrganizationMembershipMetadata(params) {\n        const { organizationId, userId, ...bodyParams } = params;\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId, \"memberships\", userId, \"metadata\"),\n            bodyParams\n        });\n    }\n    async deleteOrganizationMembership(params) {\n        const { organizationId, userId } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath7, organizationId, \"memberships\", userId)\n        });\n    }\n    async getOrganizationInvitationList(params) {\n        const { organizationId, ...queryParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"invitations\"),\n            queryParams\n        });\n    }\n    async createOrganizationInvitation(params) {\n        const { organizationId, ...bodyParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath7, organizationId, \"invitations\"),\n            bodyParams\n        });\n    }\n    async getOrganizationInvitation(params) {\n        const { organizationId, invitationId } = params;\n        this.requireId(organizationId);\n        this.requireId(invitationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"invitations\", invitationId)\n        });\n    }\n    async revokeOrganizationInvitation(params) {\n        const { organizationId, invitationId, ...bodyParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath7, organizationId, \"invitations\", invitationId, \"revoke\"),\n            bodyParams\n        });\n    }\n    async getOrganizationDomainList(params) {\n        const { organizationId, ...queryParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"domains\"),\n            queryParams\n        });\n    }\n    async createOrganizationDomain(params) {\n        const { organizationId, ...bodyParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath7, organizationId, \"domains\"),\n            bodyParams: {\n                ...bodyParams,\n                verified: bodyParams.verified ?? true\n            }\n        });\n    }\n    async updateOrganizationDomain(params) {\n        const { organizationId, domainId, ...bodyParams } = params;\n        this.requireId(organizationId);\n        this.requireId(domainId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId, \"domains\", domainId),\n            bodyParams\n        });\n    }\n    async deleteOrganizationDomain(params) {\n        const { organizationId, domainId } = params;\n        this.requireId(organizationId);\n        this.requireId(domainId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath7, organizationId, \"domains\", domainId)\n        });\n    }\n};\n// src/api/endpoints/PhoneNumberApi.ts\nvar basePath8 = \"/phone_numbers\";\nvar PhoneNumberAPI = class extends AbstractAPI {\n    async getPhoneNumber(phoneNumberId) {\n        this.requireId(phoneNumberId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath8, phoneNumberId)\n        });\n    }\n    async createPhoneNumber(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath8,\n            bodyParams: params\n        });\n    }\n    async updatePhoneNumber(phoneNumberId, params = {}) {\n        this.requireId(phoneNumberId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath8, phoneNumberId),\n            bodyParams: params\n        });\n    }\n    async deletePhoneNumber(phoneNumberId) {\n        this.requireId(phoneNumberId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath8, phoneNumberId)\n        });\n    }\n};\n// src/api/endpoints/RedirectUrlApi.ts\nvar basePath9 = \"/redirect_urls\";\nvar RedirectUrlAPI = class extends AbstractAPI {\n    async getRedirectUrlList() {\n        return this.request({\n            method: \"GET\",\n            path: basePath9,\n            queryParams: {\n                paginated: true\n            }\n        });\n    }\n    async getRedirectUrl(redirectUrlId) {\n        this.requireId(redirectUrlId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath9, redirectUrlId)\n        });\n    }\n    async createRedirectUrl(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath9,\n            bodyParams: params\n        });\n    }\n    async deleteRedirectUrl(redirectUrlId) {\n        this.requireId(redirectUrlId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath9, redirectUrlId)\n        });\n    }\n};\n// src/api/endpoints/SessionApi.ts\nvar basePath10 = \"/sessions\";\nvar SessionAPI = class extends AbstractAPI {\n    async getSessionList(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: basePath10,\n            queryParams: {\n                ...params,\n                paginated: true\n            }\n        });\n    }\n    async getSession(sessionId) {\n        this.requireId(sessionId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath10, sessionId)\n        });\n    }\n    async revokeSession(sessionId) {\n        this.requireId(sessionId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath10, sessionId, \"revoke\")\n        });\n    }\n    async verifySession(sessionId, token) {\n        this.requireId(sessionId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath10, sessionId, \"verify\"),\n            bodyParams: {\n                token\n            }\n        });\n    }\n    async getToken(sessionId, template) {\n        this.requireId(sessionId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath10, sessionId, \"tokens\", template || \"\")\n        });\n    }\n    async refreshSession(sessionId, params) {\n        this.requireId(sessionId);\n        const { suffixed_cookies, ...restParams } = params;\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath10, sessionId, \"refresh\"),\n            bodyParams: restParams,\n            queryParams: {\n                suffixed_cookies\n            }\n        });\n    }\n};\n// src/api/endpoints/SignInTokenApi.ts\nvar basePath11 = \"/sign_in_tokens\";\nvar SignInTokenAPI = class extends AbstractAPI {\n    async createSignInToken(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath11,\n            bodyParams: params\n        });\n    }\n    async revokeSignInToken(signInTokenId) {\n        this.requireId(signInTokenId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath11, signInTokenId, \"revoke\")\n        });\n    }\n};\n// src/util/shared.ts\n\n\n\n\n\n\nvar errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__.buildErrorThrower)({\n    packageName: \"@clerk/backend\"\n});\nvar { isDevOrStagingUrl } = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.createDevOrStagingUrlCache)();\n// src/api/endpoints/UserApi.ts\nvar basePath12 = \"/users\";\nvar UserAPI = class extends AbstractAPI {\n    async getUserList(params = {}) {\n        const { limit, offset, orderBy, ...userCountParams } = params;\n        const [data, totalCount] = await Promise.all([\n            this.request({\n                method: \"GET\",\n                path: basePath12,\n                queryParams: params\n            }),\n            this.getCount(userCountParams)\n        ]);\n        return {\n            data,\n            totalCount\n        };\n    }\n    async getUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath12, userId)\n        });\n    }\n    async createUser(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath12,\n            bodyParams: params\n        });\n    }\n    async updateUser(userId, params = {}) {\n        this.requireId(userId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath12, userId),\n            bodyParams: params\n        });\n    }\n    async updateUserProfileImage(userId, params) {\n        this.requireId(userId);\n        const formData = new _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.FormData();\n        formData.append(\"file\", params?.file);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath12, userId, \"profile_image\"),\n            formData\n        });\n    }\n    async updateUserMetadata(userId, params) {\n        this.requireId(userId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath12, userId, \"metadata\"),\n            bodyParams: params\n        });\n    }\n    async deleteUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath12, userId)\n        });\n    }\n    async getCount(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath12, \"count\"),\n            queryParams: params\n        });\n    }\n    async getUserOauthAccessToken(userId, provider) {\n        this.requireId(userId);\n        const hasPrefix = provider.startsWith(\"oauth_\");\n        const _provider = hasPrefix ? provider : `oauth_${provider}`;\n        if (hasPrefix) {\n            (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_5__.deprecated)(\"getUserOauthAccessToken(userId, provider)\", \"Remove the `oauth_` prefix from the `provider` argument.\");\n        }\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath12, userId, \"oauth_access_tokens\", _provider),\n            queryParams: {\n                paginated: true\n            }\n        });\n    }\n    async disableUserMFA(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath12, userId, \"mfa\")\n        });\n    }\n    async getOrganizationMembershipList(params) {\n        const { userId, limit, offset } = params;\n        this.requireId(userId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath12, userId, \"organization_memberships\"),\n            queryParams: {\n                limit,\n                offset\n            }\n        });\n    }\n    async verifyPassword(params) {\n        const { userId, password } = params;\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath12, userId, \"verify_password\"),\n            bodyParams: {\n                password\n            }\n        });\n    }\n    async verifyTOTP(params) {\n        const { userId, code } = params;\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath12, userId, \"verify_totp\"),\n            bodyParams: {\n                code\n            }\n        });\n    }\n    async banUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath12, userId, \"ban\")\n        });\n    }\n    async unbanUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath12, userId, \"unban\")\n        });\n    }\n    async lockUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath12, userId, \"lock\")\n        });\n    }\n    async unlockUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath12, userId, \"unlock\")\n        });\n    }\n    async deleteUserProfileImage(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath12, userId, \"profile_image\")\n        });\n    }\n};\n// src/api/endpoints/SamlConnectionApi.ts\nvar basePath13 = \"/saml_connections\";\nvar SamlConnectionAPI = class extends AbstractAPI {\n    async getSamlConnectionList(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: basePath13,\n            queryParams: params\n        });\n    }\n    async createSamlConnection(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath13,\n            bodyParams: params\n        });\n    }\n    async getSamlConnection(samlConnectionId) {\n        this.requireId(samlConnectionId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath13, samlConnectionId)\n        });\n    }\n    async updateSamlConnection(samlConnectionId, params = {}) {\n        this.requireId(samlConnectionId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath13, samlConnectionId),\n            bodyParams: params\n        });\n    }\n    async deleteSamlConnection(samlConnectionId) {\n        this.requireId(samlConnectionId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath13, samlConnectionId)\n        });\n    }\n};\n// src/api/endpoints/TestingTokenApi.ts\nvar basePath14 = \"/testing_tokens\";\nvar TestingTokenAPI = class extends AbstractAPI {\n    async createTestingToken() {\n        return this.request({\n            method: \"POST\",\n            path: basePath14\n        });\n    }\n};\n// src/api/request.ts\n\n\n// src/util/optionsAssertions.ts\nfunction assertValidSecretKey(val) {\n    if (!val || typeof val !== \"string\") {\n        throw Error(\"Missing Clerk Secret Key. Go to https://dashboard.clerk.com and get your key for your instance.\");\n    }\n}\nfunction assertValidPublishableKey(val) {\n    (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.parsePublishableKey)(val, {\n        fatal: true\n    });\n}\n// src/api/resources/AccountlessApplication.ts\nvar AccountlessApplication = class _AccountlessApplication {\n    constructor(publishableKey, secretKey, claimUrl, apiKeysUrl){\n        this.publishableKey = publishableKey;\n        this.secretKey = secretKey;\n        this.claimUrl = claimUrl;\n        this.apiKeysUrl = apiKeysUrl;\n    }\n    static fromJSON(data) {\n        return new _AccountlessApplication(data.publishable_key, data.secret_key, data.claim_url, data.api_keys_url);\n    }\n};\n// src/api/resources/AllowlistIdentifier.ts\nvar AllowlistIdentifier = class _AllowlistIdentifier {\n    constructor(id, identifier, createdAt, updatedAt, invitationId){\n        this.id = id;\n        this.identifier = identifier;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.invitationId = invitationId;\n    }\n    static fromJSON(data) {\n        return new _AllowlistIdentifier(data.id, data.identifier, data.created_at, data.updated_at, data.invitation_id);\n    }\n};\n// src/api/resources/Session.ts\nvar SessionActivity = class _SessionActivity {\n    constructor(id, isMobile, ipAddress, city, country, browserVersion, browserName, deviceType){\n        this.id = id;\n        this.isMobile = isMobile;\n        this.ipAddress = ipAddress;\n        this.city = city;\n        this.country = country;\n        this.browserVersion = browserVersion;\n        this.browserName = browserName;\n        this.deviceType = deviceType;\n    }\n    static fromJSON(data) {\n        return new _SessionActivity(data.id, data.is_mobile, data.ip_address, data.city, data.country, data.browser_version, data.browser_name, data.device_type);\n    }\n};\nvar Session = class _Session {\n    constructor(id, clientId, userId, status, lastActiveAt, expireAt, abandonAt, createdAt, updatedAt, lastActiveOrganizationId, latestActivity, actor = null){\n        this.id = id;\n        this.clientId = clientId;\n        this.userId = userId;\n        this.status = status;\n        this.lastActiveAt = lastActiveAt;\n        this.expireAt = expireAt;\n        this.abandonAt = abandonAt;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.lastActiveOrganizationId = lastActiveOrganizationId;\n        this.latestActivity = latestActivity;\n        this.actor = actor;\n    }\n    static fromJSON(data) {\n        return new _Session(data.id, data.client_id, data.user_id, data.status, data.last_active_at, data.expire_at, data.abandon_at, data.created_at, data.updated_at, data.last_active_organization_id, data.latest_activity && SessionActivity.fromJSON(data.latest_activity), data.actor);\n    }\n};\n// src/api/resources/Client.ts\nvar Client = class _Client {\n    constructor(id, sessionIds, sessions, signInId, signUpId, lastActiveSessionId, createdAt, updatedAt){\n        this.id = id;\n        this.sessionIds = sessionIds;\n        this.sessions = sessions;\n        this.signInId = signInId;\n        this.signUpId = signUpId;\n        this.lastActiveSessionId = lastActiveSessionId;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _Client(data.id, data.session_ids, data.sessions.map((x)=>Session.fromJSON(x)), data.sign_in_id, data.sign_up_id, data.last_active_session_id, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/Cookies.ts\nvar Cookies2 = class _Cookies {\n    constructor(cookies){\n        this.cookies = cookies;\n    }\n    static fromJSON(data) {\n        return new _Cookies(data.cookies);\n    }\n};\n// src/api/resources/DeletedObject.ts\nvar DeletedObject = class _DeletedObject {\n    constructor(object, id, slug, deleted){\n        this.object = object;\n        this.id = id;\n        this.slug = slug;\n        this.deleted = deleted;\n    }\n    static fromJSON(data) {\n        return new _DeletedObject(data.object, data.id || null, data.slug || null, data.deleted);\n    }\n};\n// src/api/resources/Email.ts\nvar Email = class _Email {\n    constructor(id, fromEmailName, emailAddressId, toEmailAddress, subject, body, bodyPlain, status, slug, data, deliveredByClerk){\n        this.id = id;\n        this.fromEmailName = fromEmailName;\n        this.emailAddressId = emailAddressId;\n        this.toEmailAddress = toEmailAddress;\n        this.subject = subject;\n        this.body = body;\n        this.bodyPlain = bodyPlain;\n        this.status = status;\n        this.slug = slug;\n        this.data = data;\n        this.deliveredByClerk = deliveredByClerk;\n    }\n    static fromJSON(data) {\n        return new _Email(data.id, data.from_email_name, data.email_address_id, data.to_email_address, data.subject, data.body, data.body_plain, data.status, data.slug, data.data, data.delivered_by_clerk);\n    }\n};\n// src/api/resources/IdentificationLink.ts\nvar IdentificationLink = class _IdentificationLink {\n    constructor(id, type){\n        this.id = id;\n        this.type = type;\n    }\n    static fromJSON(data) {\n        return new _IdentificationLink(data.id, data.type);\n    }\n};\n// src/api/resources/Verification.ts\nvar Verification = class _Verification {\n    constructor(status, strategy, externalVerificationRedirectURL = null, attempts = null, expireAt = null, nonce = null, message = null){\n        this.status = status;\n        this.strategy = strategy;\n        this.externalVerificationRedirectURL = externalVerificationRedirectURL;\n        this.attempts = attempts;\n        this.expireAt = expireAt;\n        this.nonce = nonce;\n        this.message = message;\n    }\n    static fromJSON(data) {\n        return new _Verification(data.status, data.strategy, data.external_verification_redirect_url ? new URL(data.external_verification_redirect_url) : null, data.attempts, data.expire_at, data.nonce);\n    }\n};\n// src/api/resources/EmailAddress.ts\nvar EmailAddress = class _EmailAddress {\n    constructor(id, emailAddress, verification, linkedTo){\n        this.id = id;\n        this.emailAddress = emailAddress;\n        this.verification = verification;\n        this.linkedTo = linkedTo;\n    }\n    static fromJSON(data) {\n        return new _EmailAddress(data.id, data.email_address, data.verification && Verification.fromJSON(data.verification), data.linked_to.map((link)=>IdentificationLink.fromJSON(link)));\n    }\n};\n// src/api/resources/ExternalAccount.ts\nvar ExternalAccount = class _ExternalAccount {\n    constructor(id, provider, identificationId, externalId, approvedScopes, emailAddress, firstName, lastName, imageUrl, username, publicMetadata = {}, label, verification){\n        this.id = id;\n        this.provider = provider;\n        this.identificationId = identificationId;\n        this.externalId = externalId;\n        this.approvedScopes = approvedScopes;\n        this.emailAddress = emailAddress;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.imageUrl = imageUrl;\n        this.username = username;\n        this.publicMetadata = publicMetadata;\n        this.label = label;\n        this.verification = verification;\n    }\n    static fromJSON(data) {\n        return new _ExternalAccount(data.id, data.provider, data.identification_id, data.provider_user_id, data.approved_scopes, data.email_address, data.first_name, data.last_name, data.image_url || \"\", data.username, data.public_metadata, data.label, data.verification && Verification.fromJSON(data.verification));\n    }\n};\n// src/api/resources/Invitation.ts\nvar Invitation = class _Invitation {\n    constructor(id, emailAddress, publicMetadata, createdAt, updatedAt, status, url, revoked){\n        this.id = id;\n        this.emailAddress = emailAddress;\n        this.publicMetadata = publicMetadata;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.status = status;\n        this.url = url;\n        this.revoked = revoked;\n    }\n    static fromJSON(data) {\n        return new _Invitation(data.id, data.email_address, data.public_metadata, data.created_at, data.updated_at, data.status, data.url, data.revoked);\n    }\n};\n// src/api/resources/JSON.ts\nvar ObjectType = {\n    AccountlessApplication: \"accountless_application\",\n    AllowlistIdentifier: \"allowlist_identifier\",\n    Client: \"client\",\n    Cookies: \"cookies\",\n    Email: \"email\",\n    EmailAddress: \"email_address\",\n    ExternalAccount: \"external_account\",\n    FacebookAccount: \"facebook_account\",\n    GoogleAccount: \"google_account\",\n    Invitation: \"invitation\",\n    OauthAccessToken: \"oauth_access_token\",\n    Organization: \"organization\",\n    OrganizationDomain: \"organization_domain\",\n    OrganizationInvitation: \"organization_invitation\",\n    OrganizationMembership: \"organization_membership\",\n    PhoneNumber: \"phone_number\",\n    RedirectUrl: \"redirect_url\",\n    SamlAccount: \"saml_account\",\n    Session: \"session\",\n    SignInAttempt: \"sign_in_attempt\",\n    SignInToken: \"sign_in_token\",\n    SignUpAttempt: \"sign_up_attempt\",\n    SmsMessage: \"sms_message\",\n    User: \"user\",\n    Web3Wallet: \"web3_wallet\",\n    Token: \"token\",\n    TotalCount: \"total_count\",\n    TestingToken: \"testing_token\",\n    Role: \"role\",\n    Permission: \"permission\"\n};\n// src/api/resources/OauthAccessToken.ts\nvar OauthAccessToken = class _OauthAccessToken {\n    constructor(externalAccountId, provider, token, publicMetadata = {}, label, scopes, tokenSecret){\n        this.externalAccountId = externalAccountId;\n        this.provider = provider;\n        this.token = token;\n        this.publicMetadata = publicMetadata;\n        this.label = label;\n        this.scopes = scopes;\n        this.tokenSecret = tokenSecret;\n    }\n    static fromJSON(data) {\n        return new _OauthAccessToken(data.external_account_id, data.provider, data.token, data.public_metadata, data.label || \"\", data.scopes, data.token_secret);\n    }\n};\n// src/api/resources/Organization.ts\nvar Organization = class _Organization {\n    constructor(id, name, slug, imageUrl, hasImage, createdAt, updatedAt, publicMetadata = {}, privateMetadata = {}, maxAllowedMemberships, adminDeleteEnabled, membersCount, createdBy){\n        this.id = id;\n        this.name = name;\n        this.slug = slug;\n        this.imageUrl = imageUrl;\n        this.hasImage = hasImage;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n        this.maxAllowedMemberships = maxAllowedMemberships;\n        this.adminDeleteEnabled = adminDeleteEnabled;\n        this.membersCount = membersCount;\n        this.createdBy = createdBy;\n    }\n    static fromJSON(data) {\n        return new _Organization(data.id, data.name, data.slug, data.image_url || \"\", data.has_image, data.created_at, data.updated_at, data.public_metadata, data.private_metadata, data.max_allowed_memberships, data.admin_delete_enabled, data.members_count, data.created_by);\n    }\n};\n// src/api/resources/OrganizationInvitation.ts\nvar OrganizationInvitation = class _OrganizationInvitation {\n    constructor(id, emailAddress, role, organizationId, createdAt, updatedAt, status, publicMetadata = {}, privateMetadata = {}){\n        this.id = id;\n        this.emailAddress = emailAddress;\n        this.role = role;\n        this.organizationId = organizationId;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.status = status;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n    }\n    static fromJSON(data) {\n        return new _OrganizationInvitation(data.id, data.email_address, data.role, data.organization_id, data.created_at, data.updated_at, data.status, data.public_metadata, data.private_metadata);\n    }\n};\n// src/api/resources/OrganizationMembership.ts\nvar OrganizationMembership = class _OrganizationMembership {\n    constructor(id, role, permissions, publicMetadata = {}, privateMetadata = {}, createdAt, updatedAt, organization, publicUserData){\n        this.id = id;\n        this.role = role;\n        this.permissions = permissions;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.organization = organization;\n        this.publicUserData = publicUserData;\n    }\n    static fromJSON(data) {\n        return new _OrganizationMembership(data.id, data.role, data.permissions, data.public_metadata, data.private_metadata, data.created_at, data.updated_at, Organization.fromJSON(data.organization), OrganizationMembershipPublicUserData.fromJSON(data.public_user_data));\n    }\n};\nvar OrganizationMembershipPublicUserData = class _OrganizationMembershipPublicUserData {\n    constructor(identifier, firstName, lastName, imageUrl, hasImage, userId){\n        this.identifier = identifier;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.imageUrl = imageUrl;\n        this.hasImage = hasImage;\n        this.userId = userId;\n    }\n    static fromJSON(data) {\n        return new _OrganizationMembershipPublicUserData(data.identifier, data.first_name, data.last_name, data.image_url, data.has_image, data.user_id);\n    }\n};\n// src/api/resources/PhoneNumber.ts\nvar PhoneNumber = class _PhoneNumber {\n    constructor(id, phoneNumber, reservedForSecondFactor, defaultSecondFactor, verification, linkedTo){\n        this.id = id;\n        this.phoneNumber = phoneNumber;\n        this.reservedForSecondFactor = reservedForSecondFactor;\n        this.defaultSecondFactor = defaultSecondFactor;\n        this.verification = verification;\n        this.linkedTo = linkedTo;\n    }\n    static fromJSON(data) {\n        return new _PhoneNumber(data.id, data.phone_number, data.reserved_for_second_factor, data.default_second_factor, data.verification && Verification.fromJSON(data.verification), data.linked_to.map((link)=>IdentificationLink.fromJSON(link)));\n    }\n};\n// src/api/resources/RedirectUrl.ts\nvar RedirectUrl = class _RedirectUrl {\n    constructor(id, url, createdAt, updatedAt){\n        this.id = id;\n        this.url = url;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _RedirectUrl(data.id, data.url, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/SignInTokens.ts\nvar SignInToken = class _SignInToken {\n    constructor(id, userId, token, status, url, createdAt, updatedAt){\n        this.id = id;\n        this.userId = userId;\n        this.token = token;\n        this.status = status;\n        this.url = url;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _SignInToken(data.id, data.user_id, data.token, data.status, data.url, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/SMSMessage.ts\nvar SMSMessage = class _SMSMessage {\n    constructor(id, fromPhoneNumber, toPhoneNumber, message, status, phoneNumberId, data){\n        this.id = id;\n        this.fromPhoneNumber = fromPhoneNumber;\n        this.toPhoneNumber = toPhoneNumber;\n        this.message = message;\n        this.status = status;\n        this.phoneNumberId = phoneNumberId;\n        this.data = data;\n    }\n    static fromJSON(data) {\n        return new _SMSMessage(data.id, data.from_phone_number, data.to_phone_number, data.message, data.status, data.phone_number_id, data.data);\n    }\n};\n// src/api/resources/Token.ts\nvar Token = class _Token {\n    constructor(jwt){\n        this.jwt = jwt;\n    }\n    static fromJSON(data) {\n        return new _Token(data.jwt);\n    }\n};\n// src/api/resources/SamlConnection.ts\nvar SamlAccountConnection = class _SamlAccountConnection {\n    constructor(id, name, domain, active, provider, syncUserAttributes, allowSubdomains, allowIdpInitiated, createdAt, updatedAt){\n        this.id = id;\n        this.name = name;\n        this.domain = domain;\n        this.active = active;\n        this.provider = provider;\n        this.syncUserAttributes = syncUserAttributes;\n        this.allowSubdomains = allowSubdomains;\n        this.allowIdpInitiated = allowIdpInitiated;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _SamlAccountConnection(data.id, data.name, data.domain, data.active, data.provider, data.sync_user_attributes, data.allow_subdomains, data.allow_idp_initiated, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/SamlAccount.ts\nvar SamlAccount = class _SamlAccount {\n    constructor(id, provider, providerUserId, active, emailAddress, firstName, lastName, verification, samlConnection){\n        this.id = id;\n        this.provider = provider;\n        this.providerUserId = providerUserId;\n        this.active = active;\n        this.emailAddress = emailAddress;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.verification = verification;\n        this.samlConnection = samlConnection;\n    }\n    static fromJSON(data) {\n        return new _SamlAccount(data.id, data.provider, data.provider_user_id, data.active, data.email_address, data.first_name, data.last_name, data.verification && Verification.fromJSON(data.verification), data.saml_connection && SamlAccountConnection.fromJSON(data.saml_connection));\n    }\n};\n// src/api/resources/Web3Wallet.ts\nvar Web3Wallet = class _Web3Wallet {\n    constructor(id, web3Wallet, verification){\n        this.id = id;\n        this.web3Wallet = web3Wallet;\n        this.verification = verification;\n    }\n    static fromJSON(data) {\n        return new _Web3Wallet(data.id, data.web3_wallet, data.verification && Verification.fromJSON(data.verification));\n    }\n};\n// src/api/resources/User.ts\nvar User = class _User {\n    constructor(id, passwordEnabled, totpEnabled, backupCodeEnabled, twoFactorEnabled, banned, locked, createdAt, updatedAt, imageUrl, hasImage, primaryEmailAddressId, primaryPhoneNumberId, primaryWeb3WalletId, lastSignInAt, externalId, username, firstName, lastName, publicMetadata = {}, privateMetadata = {}, unsafeMetadata = {}, emailAddresses = [], phoneNumbers = [], web3Wallets = [], externalAccounts = [], samlAccounts = [], lastActiveAt, createOrganizationEnabled, createOrganizationsLimit = null, deleteSelfEnabled, legalAcceptedAt){\n        this.id = id;\n        this.passwordEnabled = passwordEnabled;\n        this.totpEnabled = totpEnabled;\n        this.backupCodeEnabled = backupCodeEnabled;\n        this.twoFactorEnabled = twoFactorEnabled;\n        this.banned = banned;\n        this.locked = locked;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.imageUrl = imageUrl;\n        this.hasImage = hasImage;\n        this.primaryEmailAddressId = primaryEmailAddressId;\n        this.primaryPhoneNumberId = primaryPhoneNumberId;\n        this.primaryWeb3WalletId = primaryWeb3WalletId;\n        this.lastSignInAt = lastSignInAt;\n        this.externalId = externalId;\n        this.username = username;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n        this.unsafeMetadata = unsafeMetadata;\n        this.emailAddresses = emailAddresses;\n        this.phoneNumbers = phoneNumbers;\n        this.web3Wallets = web3Wallets;\n        this.externalAccounts = externalAccounts;\n        this.samlAccounts = samlAccounts;\n        this.lastActiveAt = lastActiveAt;\n        this.createOrganizationEnabled = createOrganizationEnabled;\n        this.createOrganizationsLimit = createOrganizationsLimit;\n        this.deleteSelfEnabled = deleteSelfEnabled;\n        this.legalAcceptedAt = legalAcceptedAt;\n        this._raw = null;\n    }\n    get raw() {\n        return this._raw;\n    }\n    static fromJSON(data) {\n        const res = new _User(data.id, data.password_enabled, data.totp_enabled, data.backup_code_enabled, data.two_factor_enabled, data.banned, data.locked, data.created_at, data.updated_at, data.image_url, data.has_image, data.primary_email_address_id, data.primary_phone_number_id, data.primary_web3_wallet_id, data.last_sign_in_at, data.external_id, data.username, data.first_name, data.last_name, data.public_metadata, data.private_metadata, data.unsafe_metadata, (data.email_addresses || []).map((x)=>EmailAddress.fromJSON(x)), (data.phone_numbers || []).map((x)=>PhoneNumber.fromJSON(x)), (data.web3_wallets || []).map((x)=>Web3Wallet.fromJSON(x)), (data.external_accounts || []).map((x)=>ExternalAccount.fromJSON(x)), (data.saml_accounts || []).map((x)=>SamlAccount.fromJSON(x)), data.last_active_at, data.create_organization_enabled, data.create_organizations_limit, data.delete_self_enabled, data.legal_accepted_at);\n        res._raw = data;\n        return res;\n    }\n    get primaryEmailAddress() {\n        return this.emailAddresses.find(({ id })=>id === this.primaryEmailAddressId) ?? null;\n    }\n    get primaryPhoneNumber() {\n        return this.phoneNumbers.find(({ id })=>id === this.primaryPhoneNumberId) ?? null;\n    }\n    get primaryWeb3Wallet() {\n        return this.web3Wallets.find(({ id })=>id === this.primaryWeb3WalletId) ?? null;\n    }\n    get fullName() {\n        return [\n            this.firstName,\n            this.lastName\n        ].join(\" \").trim() || null;\n    }\n};\n// src/api/resources/Deserializer.ts\nfunction deserialize(payload) {\n    let data, totalCount;\n    if (Array.isArray(payload)) {\n        const data2 = payload.map((item)=>jsonToObject(item));\n        return {\n            data: data2\n        };\n    } else if (isPaginated(payload)) {\n        data = payload.data.map((item)=>jsonToObject(item));\n        totalCount = payload.total_count;\n        return {\n            data,\n            totalCount\n        };\n    } else {\n        return {\n            data: jsonToObject(payload)\n        };\n    }\n}\nfunction isPaginated(payload) {\n    if (!payload || typeof payload !== \"object\" || !(\"data\" in payload)) {\n        return false;\n    }\n    return Array.isArray(payload.data) && payload.data !== void 0;\n}\nfunction getCount(item) {\n    return item.total_count;\n}\nfunction jsonToObject(item) {\n    if (typeof item !== \"string\" && \"object\" in item && \"deleted\" in item) {\n        return DeletedObject.fromJSON(item);\n    }\n    switch(item.object){\n        case ObjectType.AccountlessApplication:\n            return AccountlessApplication.fromJSON(item);\n        case ObjectType.AllowlistIdentifier:\n            return AllowlistIdentifier.fromJSON(item);\n        case ObjectType.Client:\n            return Client.fromJSON(item);\n        case ObjectType.Cookies:\n            return Cookies2.fromJSON(item);\n        case ObjectType.EmailAddress:\n            return EmailAddress.fromJSON(item);\n        case ObjectType.Email:\n            return Email.fromJSON(item);\n        case ObjectType.Invitation:\n            return Invitation.fromJSON(item);\n        case ObjectType.OauthAccessToken:\n            return OauthAccessToken.fromJSON(item);\n        case ObjectType.Organization:\n            return Organization.fromJSON(item);\n        case ObjectType.OrganizationInvitation:\n            return OrganizationInvitation.fromJSON(item);\n        case ObjectType.OrganizationMembership:\n            return OrganizationMembership.fromJSON(item);\n        case ObjectType.PhoneNumber:\n            return PhoneNumber.fromJSON(item);\n        case ObjectType.RedirectUrl:\n            return RedirectUrl.fromJSON(item);\n        case ObjectType.SignInToken:\n            return SignInToken.fromJSON(item);\n        case ObjectType.Session:\n            return Session.fromJSON(item);\n        case ObjectType.SmsMessage:\n            return SMSMessage.fromJSON(item);\n        case ObjectType.Token:\n            return Token.fromJSON(item);\n        case ObjectType.TotalCount:\n            return getCount(item);\n        case ObjectType.User:\n            return User.fromJSON(item);\n        default:\n            return item;\n    }\n}\n// src/api/request.ts\nfunction buildRequest(options) {\n    const requestFn = async (requestOptions)=>{\n        const { secretKey, requireSecretKey = true, apiUrl = API_URL, apiVersion = API_VERSION, userAgent = USER_AGENT } = options;\n        const { path, method, queryParams, headerParams, bodyParams, formData } = requestOptions;\n        if (requireSecretKey) {\n            assertValidSecretKey(secretKey);\n        }\n        const url = joinPaths(apiUrl, apiVersion, path);\n        const finalUrl = new URL(url);\n        if (queryParams) {\n            const snakecasedQueryParams = snakecase_keys__WEBPACK_IMPORTED_MODULE_7__({\n                ...queryParams\n            });\n            for (const [key, val] of Object.entries(snakecasedQueryParams)){\n                if (val) {\n                    [\n                        val\n                    ].flat().forEach((v)=>finalUrl.searchParams.append(key, v));\n                }\n            }\n        }\n        const headers = {\n            Authorization: `Bearer ${secretKey}`,\n            \"Clerk-API-Version\": SUPPORTED_BAPI_VERSION,\n            \"User-Agent\": userAgent,\n            ...headerParams\n        };\n        let res;\n        try {\n            if (formData) {\n                res = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(finalUrl.href, {\n                    method,\n                    headers,\n                    body: formData\n                });\n            } else {\n                headers[\"Content-Type\"] = \"application/json\";\n                const hasBody = method !== \"GET\" && bodyParams && Object.keys(bodyParams).length > 0;\n                const body = hasBody ? {\n                    body: JSON.stringify(snakecase_keys__WEBPACK_IMPORTED_MODULE_7__(bodyParams, {\n                        deep: false\n                    }))\n                } : null;\n                res = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(finalUrl.href, {\n                    method,\n                    headers,\n                    ...body\n                });\n            }\n            const isJSONResponse = res?.headers && res.headers?.get(constants.Headers.ContentType) === constants.ContentTypes.Json;\n            const responseBody = await (isJSONResponse ? res.json() : res.text());\n            if (!res.ok) {\n                return {\n                    data: null,\n                    errors: parseErrors(responseBody),\n                    status: res?.status,\n                    statusText: res?.statusText,\n                    clerkTraceId: getTraceId(responseBody, res?.headers)\n                };\n            }\n            return {\n                ...deserialize(responseBody),\n                errors: null\n            };\n        } catch (err) {\n            if (err instanceof Error) {\n                return {\n                    data: null,\n                    errors: [\n                        {\n                            code: \"unexpected_error\",\n                            message: err.message || \"Unexpected error\"\n                        }\n                    ],\n                    clerkTraceId: getTraceId(err, res?.headers)\n                };\n            }\n            return {\n                data: null,\n                errors: parseErrors(err),\n                status: res?.status,\n                statusText: res?.statusText,\n                clerkTraceId: getTraceId(err, res?.headers)\n            };\n        }\n    };\n    return withLegacyRequestReturn(requestFn);\n}\nfunction getTraceId(data, headers) {\n    if (data && typeof data === \"object\" && \"clerk_trace_id\" in data && typeof data.clerk_trace_id === \"string\") {\n        return data.clerk_trace_id;\n    }\n    const cfRay = headers?.get(\"cf-ray\");\n    return cfRay || \"\";\n}\nfunction parseErrors(data) {\n    if (!!data && typeof data === \"object\" && \"errors\" in data) {\n        const errors = data.errors;\n        return errors.length > 0 ? errors.map(_clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__.parseError) : [];\n    }\n    return [];\n}\nfunction withLegacyRequestReturn(cb) {\n    return async (...args)=>{\n        const { data, errors, totalCount, status, statusText, clerkTraceId } = await cb(...args);\n        if (errors) {\n            const error = new _clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__.ClerkAPIResponseError(statusText || \"\", {\n                data: [],\n                status,\n                clerkTraceId\n            });\n            error.errors = errors;\n            throw error;\n        }\n        if (typeof totalCount !== \"undefined\") {\n            return {\n                data,\n                totalCount\n            };\n        }\n        return data;\n    };\n}\n// src/api/factory.ts\nfunction createBackendApiClient(options) {\n    const request = buildRequest(options);\n    return {\n        __experimental_accountlessApplications: new AccountlessApplicationAPI(buildRequest({\n            ...options,\n            requireSecretKey: false\n        })),\n        allowlistIdentifiers: new AllowlistIdentifierAPI(request),\n        clients: new ClientAPI(request),\n        emailAddresses: new EmailAddressAPI(request),\n        invitations: new InvitationAPI(request),\n        organizations: new OrganizationAPI(request),\n        phoneNumbers: new PhoneNumberAPI(request),\n        redirectUrls: new RedirectUrlAPI(request),\n        sessions: new SessionAPI(request),\n        signInTokens: new SignInTokenAPI(request),\n        users: new UserAPI(request),\n        domains: new DomainAPI(request),\n        samlConnections: new SamlConnectionAPI(request),\n        testingTokens: new TestingTokenAPI(request)\n    };\n}\n// src/tokens/authObjects.ts\n\nvar createDebug = (data)=>{\n    return ()=>{\n        const res = {\n            ...data\n        };\n        res.secretKey = (res.secretKey || \"\").substring(0, 7);\n        res.jwtKey = (res.jwtKey || \"\").substring(0, 7);\n        return {\n            ...res\n        };\n    };\n};\nfunction signedInAuthObject(authenticateContext, sessionToken, sessionClaims) {\n    const { act: actor, sid: sessionId, org_id: orgId, org_role: orgRole, org_slug: orgSlug, org_permissions: orgPermissions, sub: userId, fva } = sessionClaims;\n    const apiClient = createBackendApiClient(authenticateContext);\n    const getToken = createGetToken({\n        sessionId,\n        sessionToken,\n        fetcher: async (...args)=>(await apiClient.sessions.getToken(...args)).jwt\n    });\n    const factorVerificationAge = fva ?? null;\n    return {\n        actor,\n        sessionClaims,\n        sessionId,\n        userId,\n        orgId,\n        orgRole,\n        orgSlug,\n        orgPermissions,\n        factorVerificationAge,\n        getToken,\n        has: (0,_clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_8__.createCheckAuthorization)({\n            orgId,\n            orgRole,\n            orgPermissions,\n            userId,\n            factorVerificationAge\n        }),\n        debug: createDebug({\n            ...authenticateContext,\n            sessionToken\n        })\n    };\n}\nfunction signedOutAuthObject(debugData) {\n    return {\n        sessionClaims: null,\n        sessionId: null,\n        userId: null,\n        actor: null,\n        orgId: null,\n        orgRole: null,\n        orgSlug: null,\n        orgPermissions: null,\n        factorVerificationAge: null,\n        getToken: ()=>Promise.resolve(null),\n        has: ()=>false,\n        debug: createDebug(debugData)\n    };\n}\nvar makeAuthObjectSerializable = (obj)=>{\n    const { debug, getToken, has, ...rest } = obj;\n    return rest;\n};\nvar createGetToken = (params)=>{\n    const { fetcher, sessionToken, sessionId } = params || {};\n    return async (options = {})=>{\n        if (!sessionId) {\n            return null;\n        }\n        if (options.template) {\n            return fetcher(sessionId, options.template);\n        }\n        return sessionToken;\n    };\n};\n// src/tokens/authStatus.ts\nvar AuthStatus = {\n    SignedIn: \"signed-in\",\n    SignedOut: \"signed-out\",\n    Handshake: \"handshake\"\n};\nvar AuthErrorReason = {\n    ClientUATWithoutSessionToken: \"client-uat-but-no-session-token\",\n    DevBrowserMissing: \"dev-browser-missing\",\n    DevBrowserSync: \"dev-browser-sync\",\n    PrimaryRespondsToSyncing: \"primary-responds-to-syncing\",\n    SatelliteCookieNeedsSyncing: \"satellite-needs-syncing\",\n    SessionTokenAndUATMissing: \"session-token-and-uat-missing\",\n    SessionTokenMissing: \"session-token-missing\",\n    SessionTokenExpired: \"session-token-expired\",\n    SessionTokenIATBeforeClientUAT: \"session-token-iat-before-client-uat\",\n    SessionTokenNBF: \"session-token-nbf\",\n    SessionTokenIatInTheFuture: \"session-token-iat-in-the-future\",\n    SessionTokenWithoutClientUAT: \"session-token-but-no-client-uat\",\n    ActiveOrganizationMismatch: \"active-organization-mismatch\",\n    UnexpectedError: \"unexpected-error\"\n};\nfunction signedIn(authenticateContext, sessionClaims, headers = new Headers(), token) {\n    const authObject = signedInAuthObject(authenticateContext, token, sessionClaims);\n    return {\n        status: AuthStatus.SignedIn,\n        reason: null,\n        message: null,\n        proxyUrl: authenticateContext.proxyUrl || \"\",\n        publishableKey: authenticateContext.publishableKey || \"\",\n        isSatellite: authenticateContext.isSatellite || false,\n        domain: authenticateContext.domain || \"\",\n        signInUrl: authenticateContext.signInUrl || \"\",\n        signUpUrl: authenticateContext.signUpUrl || \"\",\n        afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n        afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n        isSignedIn: true,\n        toAuth: ()=>authObject,\n        headers,\n        token\n    };\n}\nfunction signedOut(authenticateContext, reason, message = \"\", headers = new Headers()) {\n    return withDebugHeaders({\n        status: AuthStatus.SignedOut,\n        reason,\n        message,\n        proxyUrl: authenticateContext.proxyUrl || \"\",\n        publishableKey: authenticateContext.publishableKey || \"\",\n        isSatellite: authenticateContext.isSatellite || false,\n        domain: authenticateContext.domain || \"\",\n        signInUrl: authenticateContext.signInUrl || \"\",\n        signUpUrl: authenticateContext.signUpUrl || \"\",\n        afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n        afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n        isSignedIn: false,\n        headers,\n        toAuth: ()=>signedOutAuthObject({\n                ...authenticateContext,\n                status: AuthStatus.SignedOut,\n                reason,\n                message\n            }),\n        token: null\n    });\n}\nfunction handshake(authenticateContext, reason, message = \"\", headers) {\n    return withDebugHeaders({\n        status: AuthStatus.Handshake,\n        reason,\n        message,\n        publishableKey: authenticateContext.publishableKey || \"\",\n        isSatellite: authenticateContext.isSatellite || false,\n        domain: authenticateContext.domain || \"\",\n        proxyUrl: authenticateContext.proxyUrl || \"\",\n        signInUrl: authenticateContext.signInUrl || \"\",\n        signUpUrl: authenticateContext.signUpUrl || \"\",\n        afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n        afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n        isSignedIn: false,\n        headers,\n        toAuth: ()=>null,\n        token: null\n    });\n}\nvar withDebugHeaders = (requestState)=>{\n    const headers = new Headers(requestState.headers || {});\n    if (requestState.message) {\n        try {\n            headers.set(constants.Headers.AuthMessage, requestState.message);\n        } catch  {}\n    }\n    if (requestState.reason) {\n        try {\n            headers.set(constants.Headers.AuthReason, requestState.reason);\n        } catch  {}\n    }\n    if (requestState.status) {\n        try {\n            headers.set(constants.Headers.AuthStatus, requestState.status);\n        } catch  {}\n    }\n    requestState.headers = headers;\n    return requestState;\n};\n// src/tokens/clerkRequest.ts\n\n// src/tokens/clerkUrl.ts\nvar ClerkUrl = class extends URL {\n    isCrossOrigin(other) {\n        return this.origin !== new URL(other.toString()).origin;\n    }\n};\nvar createClerkUrl = (...args)=>{\n    return new ClerkUrl(...args);\n};\n// src/tokens/clerkRequest.ts\nvar ClerkRequest = class extends Request {\n    constructor(input, init){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        super(url, init || typeof input === \"string\" ? void 0 : input);\n        this.clerkUrl = this.deriveUrlFromHeaders(this);\n        this.cookies = this.parseCookies(this);\n    }\n    toJSON() {\n        return {\n            url: this.clerkUrl.href,\n            method: this.method,\n            headers: JSON.stringify(Object.fromEntries(this.headers)),\n            clerkUrl: this.clerkUrl.toString(),\n            cookies: JSON.stringify(Object.fromEntries(this.cookies))\n        };\n    }\n    /**\n   * Used to fix request.url using the x-forwarded-* headers\n   * TODO add detailed description of the issues this solves\n   */ deriveUrlFromHeaders(req) {\n        const initialUrl = new URL(req.url);\n        const forwardedProto = req.headers.get(constants.Headers.ForwardedProto);\n        const forwardedHost = req.headers.get(constants.Headers.ForwardedHost);\n        const host = req.headers.get(constants.Headers.Host);\n        const protocol = initialUrl.protocol;\n        const resolvedHost = this.getFirstValueFromHeader(forwardedHost) ?? host;\n        const resolvedProtocol = this.getFirstValueFromHeader(forwardedProto) ?? protocol?.replace(/[:/]/, \"\");\n        const origin = resolvedHost && resolvedProtocol ? `${resolvedProtocol}://${resolvedHost}` : initialUrl.origin;\n        if (origin === initialUrl.origin) {\n            return createClerkUrl(initialUrl);\n        }\n        return createClerkUrl(initialUrl.pathname + initialUrl.search, origin);\n    }\n    getFirstValueFromHeader(value) {\n        return value?.split(\",\")[0];\n    }\n    parseCookies(req) {\n        const cookiesRecord = (0,cookie__WEBPACK_IMPORTED_MODULE_9__.parse)(this.decodeCookieValue(req.headers.get(\"cookie\") || \"\"));\n        return new Map(Object.entries(cookiesRecord));\n    }\n    decodeCookieValue(str) {\n        return str ? str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent) : str;\n    }\n};\nvar createClerkRequest = (...args)=>{\n    return args[0] instanceof ClerkRequest ? args[0] : new ClerkRequest(...args);\n};\n// src/tokens/keys.ts\nvar cache = {};\nvar lastUpdatedAt = 0;\nfunction getFromCache(kid) {\n    return cache[kid];\n}\nfunction getCacheValues() {\n    return Object.values(cache);\n}\nfunction setInCache(jwk, shouldExpire = true) {\n    cache[jwk.kid] = jwk;\n    lastUpdatedAt = shouldExpire ? Date.now() : -1;\n}\nvar LocalJwkKid = \"local\";\nvar PEM_HEADER = \"-----BEGIN PUBLIC KEY-----\";\nvar PEM_TRAILER = \"-----END PUBLIC KEY-----\";\nvar RSA_PREFIX = \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\";\nvar RSA_SUFFIX = \"IDAQAB\";\nfunction loadClerkJWKFromLocal(localKey) {\n    if (!getFromCache(LocalJwkKid)) {\n        if (!localKey) {\n            throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n                action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n                message: \"Missing local JWK.\",\n                reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.LocalJWKMissing\n            });\n        }\n        const modulus = localKey.replace(/\\r\\n|\\n|\\r/g, \"\").replace(PEM_HEADER, \"\").replace(PEM_TRAILER, \"\").replace(RSA_PREFIX, \"\").replace(RSA_SUFFIX, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n        setInCache({\n            kid: \"local\",\n            kty: \"RSA\",\n            alg: \"RS256\",\n            n: modulus,\n            e: \"AQAB\"\n        }, false);\n    }\n    return getFromCache(LocalJwkKid);\n}\nasync function loadClerkJWKFromRemote({ secretKey, apiUrl = API_URL, apiVersion = API_VERSION, kid, skipJwksCache }) {\n    if (skipJwksCache || cacheHasExpired() || !getFromCache(kid)) {\n        if (!secretKey) {\n            throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n                action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n                message: \"Failed to load JWKS from Clerk Backend or Frontend API.\",\n                reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n            });\n        }\n        const fetcher = ()=>fetchJWKSFromBAPI(apiUrl, secretKey, apiVersion);\n        const { keys } = await (0,_clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_3__.callWithRetry)(fetcher);\n        if (!keys || !keys.length) {\n            throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n                action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n                message: \"The JWKS endpoint did not contain any signing keys. Contact support@clerk.com.\",\n                reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n            });\n        }\n        keys.forEach((key)=>setInCache(key));\n    }\n    const jwk = getFromCache(kid);\n    if (!jwk) {\n        const cacheValues = getCacheValues();\n        const jwkKeys = cacheValues.map((jwk2)=>jwk2.kid).sort().join(\", \");\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            action: `Go to your Dashboard and validate your secret and public keys are correct. ${_chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport} if the issue persists.`,\n            message: `Unable to find a signing key in JWKS that matches the kid='${kid}' of the provided session token. Please make sure that the __session cookie or the HTTP authorization header contain a Clerk-generated session JWT. The following kid is available: ${jwkKeys}`,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKKidMismatch\n        });\n    }\n    return jwk;\n}\nasync function fetchJWKSFromBAPI(apiUrl, key, apiVersion) {\n    if (!key) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkSecretKey,\n            message: \"Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.\",\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n        });\n    }\n    const url = new URL(apiUrl);\n    url.pathname = joinPaths(url.pathname, apiVersion, \"/jwks\");\n    const response = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(url.href, {\n        headers: {\n            Authorization: `Bearer ${key}`,\n            \"Clerk-API-Version\": SUPPORTED_BAPI_VERSION,\n            \"Content-Type\": \"application/json\",\n            \"User-Agent\": USER_AGENT\n        }\n    });\n    if (!response.ok) {\n        const json = await response.json();\n        const invalidSecretKeyError = getErrorObjectByCode(json?.errors, _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorCode.InvalidSecretKey);\n        if (invalidSecretKeyError) {\n            const reason = _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.InvalidSecretKey;\n            throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n                action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n                message: invalidSecretKeyError.message,\n                reason\n            });\n        }\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n            message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n        });\n    }\n    return response.json();\n}\nfunction cacheHasExpired() {\n    if (lastUpdatedAt === -1) {\n        return false;\n    }\n    const isExpired = Date.now() - lastUpdatedAt >= MAX_CACHE_LAST_UPDATED_AT_SECONDS * 1e3;\n    if (isExpired) {\n        cache = {};\n    }\n    return isExpired;\n}\nvar getErrorObjectByCode = (errors, code)=>{\n    if (!errors) {\n        return null;\n    }\n    return errors.find((err)=>err.code === code);\n};\n// src/tokens/verify.ts\nasync function verifyToken(token, options) {\n    const { data: decodedResult, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n    if (errors) {\n        return {\n            errors\n        };\n    }\n    const { header } = decodedResult;\n    const { kid } = header;\n    try {\n        let key;\n        if (options.jwtKey) {\n            key = loadClerkJWKFromLocal(options.jwtKey);\n        } else if (options.secretKey) {\n            key = await loadClerkJWKFromRemote({\n                ...options,\n                kid\n            });\n        } else {\n            return {\n                errors: [\n                    new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n                        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n                        message: \"Failed to resolve JWK during verification.\",\n                        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n                    })\n                ]\n            };\n        }\n        return await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.verifyJwt)(token, {\n            ...options,\n            key\n        });\n    } catch (error) {\n        return {\n            errors: [\n                error\n            ]\n        };\n    }\n}\n// src/tokens/request.ts\n\n// src/tokens/authenticateContext.ts\nvar AuthenticateContext = class {\n    constructor(cookieSuffix, clerkRequest, options){\n        this.cookieSuffix = cookieSuffix;\n        this.clerkRequest = clerkRequest;\n        this.initPublishableKeyValues(options);\n        this.initHeaderValues();\n        this.initCookieValues();\n        this.initHandshakeValues();\n        Object.assign(this, options);\n        this.clerkUrl = this.clerkRequest.clerkUrl;\n    }\n    /**\n   * Retrieves the session token from either the cookie or the header.\n   *\n   * @returns {string | undefined} The session token if available, otherwise undefined.\n   */ get sessionToken() {\n        return this.sessionTokenInCookie || this.sessionTokenInHeader;\n    }\n    usesSuffixedCookies() {\n        const suffixedClientUat = this.getSuffixedCookie(constants.Cookies.ClientUat);\n        const clientUat = this.getCookie(constants.Cookies.ClientUat);\n        const suffixedSession = this.getSuffixedCookie(constants.Cookies.Session) || \"\";\n        const session = this.getCookie(constants.Cookies.Session) || \"\";\n        if (session && !this.tokenHasIssuer(session)) {\n            return false;\n        }\n        if (session && !this.tokenBelongsToInstance(session)) {\n            return true;\n        }\n        if (!suffixedClientUat && !suffixedSession) {\n            return false;\n        }\n        const { data: sessionData } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(session);\n        const sessionIat = sessionData?.payload.iat || 0;\n        const { data: suffixedSessionData } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(suffixedSession);\n        const suffixedSessionIat = suffixedSessionData?.payload.iat || 0;\n        if (suffixedClientUat !== \"0\" && clientUat !== \"0\" && sessionIat > suffixedSessionIat) {\n            return false;\n        }\n        if (suffixedClientUat === \"0\" && clientUat !== \"0\") {\n            return false;\n        }\n        if (this.instanceType !== \"production\") {\n            const isSuffixedSessionExpired = this.sessionExpired(suffixedSessionData);\n            if (suffixedClientUat !== \"0\" && clientUat === \"0\" && isSuffixedSessionExpired) {\n                return false;\n            }\n        }\n        if (!suffixedClientUat && suffixedSession) {\n            return false;\n        }\n        return true;\n    }\n    initPublishableKeyValues(options) {\n        assertValidPublishableKey(options.publishableKey);\n        this.publishableKey = options.publishableKey;\n        const pk = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.parsePublishableKey)(this.publishableKey, {\n            fatal: true,\n            proxyUrl: options.proxyUrl,\n            domain: options.domain\n        });\n        this.instanceType = pk.instanceType;\n        this.frontendApi = pk.frontendApi;\n    }\n    initHeaderValues() {\n        this.sessionTokenInHeader = this.stripAuthorizationHeader(this.getHeader(constants.Headers.Authorization));\n        this.origin = this.getHeader(constants.Headers.Origin);\n        this.host = this.getHeader(constants.Headers.Host);\n        this.forwardedHost = this.getHeader(constants.Headers.ForwardedHost);\n        this.forwardedProto = this.getHeader(constants.Headers.CloudFrontForwardedProto) || this.getHeader(constants.Headers.ForwardedProto);\n        this.referrer = this.getHeader(constants.Headers.Referrer);\n        this.userAgent = this.getHeader(constants.Headers.UserAgent);\n        this.secFetchDest = this.getHeader(constants.Headers.SecFetchDest);\n        this.accept = this.getHeader(constants.Headers.Accept);\n    }\n    initCookieValues() {\n        this.sessionTokenInCookie = this.getSuffixedOrUnSuffixedCookie(constants.Cookies.Session);\n        this.refreshTokenInCookie = this.getSuffixedCookie(constants.Cookies.Refresh);\n        this.clientUat = Number.parseInt(this.getSuffixedOrUnSuffixedCookie(constants.Cookies.ClientUat) || \"\") || 0;\n    }\n    initHandshakeValues() {\n        this.devBrowserToken = this.getQueryParam(constants.QueryParameters.DevBrowser) || this.getSuffixedOrUnSuffixedCookie(constants.Cookies.DevBrowser);\n        this.handshakeToken = this.getQueryParam(constants.QueryParameters.Handshake) || this.getCookie(constants.Cookies.Handshake);\n        this.handshakeRedirectLoopCounter = Number(this.getCookie(constants.Cookies.RedirectCount)) || 0;\n    }\n    stripAuthorizationHeader(authValue) {\n        return authValue?.replace(\"Bearer \", \"\");\n    }\n    getQueryParam(name) {\n        return this.clerkRequest.clerkUrl.searchParams.get(name);\n    }\n    getHeader(name) {\n        return this.clerkRequest.headers.get(name) || void 0;\n    }\n    getCookie(name) {\n        return this.clerkRequest.cookies.get(name) || void 0;\n    }\n    getSuffixedCookie(name) {\n        return this.getCookie((0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.getSuffixedCookieName)(name, this.cookieSuffix)) || void 0;\n    }\n    getSuffixedOrUnSuffixedCookie(cookieName) {\n        if (this.usesSuffixedCookies()) {\n            return this.getSuffixedCookie(cookieName);\n        }\n        return this.getCookie(cookieName);\n    }\n    tokenHasIssuer(token) {\n        const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n        if (errors) {\n            return false;\n        }\n        return !!data.payload.iss;\n    }\n    tokenBelongsToInstance(token) {\n        if (!token) {\n            return false;\n        }\n        const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n        if (errors) {\n            return false;\n        }\n        const tokenIssuer = data.payload.iss.replace(/https?:\\/\\//gi, \"\");\n        return this.frontendApi === tokenIssuer;\n    }\n    sessionExpired(jwt) {\n        return !!jwt && jwt?.payload.exp <= Date.now() / 1e3 >> 0;\n    }\n};\nvar createAuthenticateContext = async (clerkRequest, options)=>{\n    const cookieSuffix = options.publishableKey ? await (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.getCookieSuffix)(options.publishableKey, _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.crypto.subtle) : \"\";\n    return new AuthenticateContext(cookieSuffix, clerkRequest, options);\n};\n// src/tokens/cookie.ts\nvar getCookieName = (cookieDirective)=>{\n    return cookieDirective.split(\";\")[0]?.split(\"=\")[0];\n};\nvar getCookieValue = (cookieDirective)=>{\n    return cookieDirective.split(\";\")[0]?.split(\"=\")[1];\n};\n// src/tokens/handshake.ts\nasync function verifyHandshakeJwt(token, { key }) {\n    const { data: decoded, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n    if (errors) {\n        throw errors[0];\n    }\n    const { header, payload } = decoded;\n    const { typ, alg } = header;\n    (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderType)(typ);\n    (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderAlgorithm)(alg);\n    const { data: signatureValid, errors: signatureErrors } = await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.hasValidSignature)(decoded, key);\n    if (signatureErrors) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenVerificationFailed,\n            message: `Error verifying handshake token. ${signatureErrors[0]}`\n        });\n    }\n    if (!signatureValid) {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature,\n            message: \"Handshake signature is invalid.\"\n        });\n    }\n    return payload;\n}\nasync function verifyHandshakeToken(token, options) {\n    const { secretKey, apiUrl, apiVersion, jwksCacheTtlInMs, jwtKey, skipJwksCache } = options;\n    const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n    if (errors) {\n        throw errors[0];\n    }\n    const { kid } = data.header;\n    let key;\n    if (jwtKey) {\n        key = loadClerkJWKFromLocal(jwtKey);\n    } else if (secretKey) {\n        key = await loadClerkJWKFromRemote({\n            secretKey,\n            apiUrl,\n            apiVersion,\n            kid,\n            jwksCacheTtlInMs,\n            skipJwksCache\n        });\n    } else {\n        throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n            message: \"Failed to resolve JWK during handshake verification.\",\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n        });\n    }\n    return await verifyHandshakeJwt(token, {\n        key\n    });\n}\n// src/tokens/request.ts\nvar RefreshTokenErrorReason = {\n    NonEligibleNoCookie: \"non-eligible-no-refresh-cookie\",\n    NonEligibleNonGet: \"non-eligible-non-get\",\n    InvalidSessionToken: \"invalid-session-token\",\n    MissingApiClient: \"missing-api-client\",\n    MissingSessionToken: \"missing-session-token\",\n    MissingRefreshToken: \"missing-refresh-token\",\n    ExpiredSessionTokenDecodeFailed: \"expired-session-token-decode-failed\",\n    ExpiredSessionTokenMissingSidClaim: \"expired-session-token-missing-sid-claim\",\n    FetchError: \"fetch-error\",\n    UnexpectedSDKError: \"unexpected-sdk-error\",\n    UnexpectedBAPIError: \"unexpected-bapi-error\"\n};\nfunction assertSignInUrlExists(signInUrl, key) {\n    if (!signInUrl && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.isDevelopmentFromSecretKey)(key)) {\n        throw new Error(`Missing signInUrl. Pass a signInUrl for dev instances if an app is satellite`);\n    }\n}\nfunction assertProxyUrlOrDomain(proxyUrlOrDomain) {\n    if (!proxyUrlOrDomain) {\n        throw new Error(`Missing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl`);\n    }\n}\nfunction assertSignInUrlFormatAndOrigin(_signInUrl, origin) {\n    let signInUrl;\n    try {\n        signInUrl = new URL(_signInUrl);\n    } catch  {\n        throw new Error(`The signInUrl needs to have a absolute url format.`);\n    }\n    if (signInUrl.origin === origin) {\n        throw new Error(`The signInUrl needs to be on a different origin than your satellite application.`);\n    }\n}\nfunction isRequestEligibleForHandshake(authenticateContext) {\n    const { accept, secFetchDest } = authenticateContext;\n    if (secFetchDest === \"document\" || secFetchDest === \"iframe\") {\n        return true;\n    }\n    if (!secFetchDest && accept?.startsWith(\"text/html\")) {\n        return true;\n    }\n    return false;\n}\nfunction isRequestEligibleForRefresh(err, authenticateContext, request) {\n    return err.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired && !!authenticateContext.refreshTokenInCookie && request.method === \"GET\";\n}\nasync function authenticateRequest(request, options) {\n    const authenticateContext = await createAuthenticateContext(createClerkRequest(request), options);\n    assertValidSecretKey(authenticateContext.secretKey);\n    if (authenticateContext.isSatellite) {\n        assertSignInUrlExists(authenticateContext.signInUrl, authenticateContext.secretKey);\n        if (authenticateContext.signInUrl && authenticateContext.origin) {\n            assertSignInUrlFormatAndOrigin(authenticateContext.signInUrl, authenticateContext.origin);\n        }\n        assertProxyUrlOrDomain(authenticateContext.proxyUrl || authenticateContext.domain);\n    }\n    const organizationSyncTargetMatchers = computeOrganizationSyncTargetMatchers(options.organizationSyncOptions);\n    function removeDevBrowserFromURL(url) {\n        const updatedURL = new URL(url);\n        updatedURL.searchParams.delete(constants.QueryParameters.DevBrowser);\n        updatedURL.searchParams.delete(constants.QueryParameters.LegacyDevBrowser);\n        return updatedURL;\n    }\n    function buildRedirectToHandshake({ handshakeReason }) {\n        const redirectUrl = removeDevBrowserFromURL(authenticateContext.clerkUrl);\n        const frontendApiNoProtocol = authenticateContext.frontendApi.replace(/http(s)?:\\/\\//, \"\");\n        const url = new URL(`https://${frontendApiNoProtocol}/v1/client/handshake`);\n        url.searchParams.append(\"redirect_url\", redirectUrl?.href || \"\");\n        url.searchParams.append(constants.QueryParameters.SuffixedCookies, authenticateContext.usesSuffixedCookies().toString());\n        url.searchParams.append(constants.QueryParameters.HandshakeReason, handshakeReason);\n        if (authenticateContext.instanceType === \"development\" && authenticateContext.devBrowserToken) {\n            url.searchParams.append(constants.QueryParameters.DevBrowser, authenticateContext.devBrowserToken);\n        }\n        const toActivate = getOrganizationSyncTarget(authenticateContext.clerkUrl, options.organizationSyncOptions, organizationSyncTargetMatchers);\n        if (toActivate) {\n            const params = getOrganizationSyncQueryParams(toActivate);\n            params.forEach((value, key)=>{\n                url.searchParams.append(key, value);\n            });\n        }\n        return new Headers({\n            [constants.Headers.Location]: url.href\n        });\n    }\n    async function resolveHandshake() {\n        const headers = new Headers({\n            \"Access-Control-Allow-Origin\": \"null\",\n            \"Access-Control-Allow-Credentials\": \"true\"\n        });\n        const handshakePayload = await verifyHandshakeToken(authenticateContext.handshakeToken, authenticateContext);\n        const cookiesToSet = handshakePayload.handshake;\n        let sessionToken = \"\";\n        cookiesToSet.forEach((x)=>{\n            headers.append(\"Set-Cookie\", x);\n            if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n                sessionToken = getCookieValue(x);\n            }\n        });\n        if (authenticateContext.instanceType === \"development\") {\n            const newUrl = new URL(authenticateContext.clerkUrl);\n            newUrl.searchParams.delete(constants.QueryParameters.Handshake);\n            newUrl.searchParams.delete(constants.QueryParameters.HandshakeHelp);\n            headers.append(constants.Headers.Location, newUrl.toString());\n            headers.set(constants.Headers.CacheControl, \"no-store\");\n        }\n        if (sessionToken === \"\") {\n            return signedOut(authenticateContext, AuthErrorReason.SessionTokenMissing, \"\", headers);\n        }\n        const { data, errors: [error] = [] } = await verifyToken(sessionToken, authenticateContext);\n        if (data) {\n            return signedIn(authenticateContext, data, headers, sessionToken);\n        }\n        if (authenticateContext.instanceType === \"development\" && (error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired || error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet || error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture)) {\n            error.tokenCarrier = \"cookie\";\n            console.error(`Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will attempt to account for the clock skew in development.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${error.getFullMessage()}`);\n            const { data: retryResult, errors: [retryError] = [] } = await verifyToken(sessionToken, {\n                ...authenticateContext,\n                clockSkewInMs: 864e5\n            });\n            if (retryResult) {\n                return signedIn(authenticateContext, retryResult, headers, sessionToken);\n            }\n            throw new Error(retryError?.message || \"Clerk: Handshake retry failed.\");\n        }\n        throw new Error(error?.message || \"Clerk: Handshake failed.\");\n    }\n    async function refreshToken(authenticateContext2) {\n        if (!options.apiClient) {\n            return {\n                data: null,\n                error: {\n                    message: \"An apiClient is needed to perform token refresh.\",\n                    cause: {\n                        reason: RefreshTokenErrorReason.MissingApiClient\n                    }\n                }\n            };\n        }\n        const { sessionToken: expiredSessionToken, refreshTokenInCookie: refreshToken2 } = authenticateContext2;\n        if (!expiredSessionToken) {\n            return {\n                data: null,\n                error: {\n                    message: \"Session token must be provided.\",\n                    cause: {\n                        reason: RefreshTokenErrorReason.MissingSessionToken\n                    }\n                }\n            };\n        }\n        if (!refreshToken2) {\n            return {\n                data: null,\n                error: {\n                    message: \"Refresh token must be provided.\",\n                    cause: {\n                        reason: RefreshTokenErrorReason.MissingRefreshToken\n                    }\n                }\n            };\n        }\n        const { data: decodeResult, errors: decodedErrors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(expiredSessionToken);\n        if (!decodeResult || decodedErrors) {\n            return {\n                data: null,\n                error: {\n                    message: \"Unable to decode the expired session token.\",\n                    cause: {\n                        reason: RefreshTokenErrorReason.ExpiredSessionTokenDecodeFailed,\n                        errors: decodedErrors\n                    }\n                }\n            };\n        }\n        if (!decodeResult?.payload?.sid) {\n            return {\n                data: null,\n                error: {\n                    message: \"Expired session token is missing the `sid` claim.\",\n                    cause: {\n                        reason: RefreshTokenErrorReason.ExpiredSessionTokenMissingSidClaim\n                    }\n                }\n            };\n        }\n        try {\n            const response = await options.apiClient.sessions.refreshSession(decodeResult.payload.sid, {\n                format: \"cookie\",\n                suffixed_cookies: authenticateContext2.usesSuffixedCookies(),\n                expired_token: expiredSessionToken || \"\",\n                refresh_token: refreshToken2 || \"\",\n                request_origin: authenticateContext2.clerkUrl.origin,\n                // The refresh endpoint expects headers as Record<string, string[]>, so we need to transform it.\n                request_headers: Object.fromEntries(Array.from(request.headers.entries()).map(([k, v])=>[\n                        k,\n                        [\n                            v\n                        ]\n                    ]))\n            });\n            return {\n                data: response.cookies,\n                error: null\n            };\n        } catch (err) {\n            if (err?.errors?.length) {\n                if (err.errors[0].code === \"unexpected_error\") {\n                    return {\n                        data: null,\n                        error: {\n                            message: `Fetch unexpected error`,\n                            cause: {\n                                reason: RefreshTokenErrorReason.FetchError,\n                                errors: err.errors\n                            }\n                        }\n                    };\n                }\n                return {\n                    data: null,\n                    error: {\n                        message: err.errors[0].code,\n                        cause: {\n                            reason: err.errors[0].code,\n                            errors: err.errors\n                        }\n                    }\n                };\n            } else {\n                return {\n                    data: null,\n                    error: {\n                        message: `Unexpected Server/BAPI error`,\n                        cause: {\n                            reason: RefreshTokenErrorReason.UnexpectedBAPIError,\n                            errors: [\n                                err\n                            ]\n                        }\n                    }\n                };\n            }\n        }\n    }\n    async function attemptRefresh(authenticateContext2) {\n        const { data: cookiesToSet, error } = await refreshToken(authenticateContext2);\n        if (!cookiesToSet || cookiesToSet.length === 0) {\n            return {\n                data: null,\n                error\n            };\n        }\n        const headers = new Headers();\n        let sessionToken = \"\";\n        cookiesToSet.forEach((x)=>{\n            headers.append(\"Set-Cookie\", x);\n            if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n                sessionToken = getCookieValue(x);\n            }\n        });\n        const { data: jwtPayload, errors } = await verifyToken(sessionToken, authenticateContext2);\n        if (errors) {\n            return {\n                data: null,\n                error: {\n                    message: `Clerk: unable to verify refreshed session token.`,\n                    cause: {\n                        reason: RefreshTokenErrorReason.InvalidSessionToken,\n                        errors\n                    }\n                }\n            };\n        }\n        return {\n            data: {\n                jwtPayload,\n                sessionToken,\n                headers\n            },\n            error: null\n        };\n    }\n    function handleMaybeHandshakeStatus(authenticateContext2, reason, message, headers) {\n        if (isRequestEligibleForHandshake(authenticateContext2)) {\n            const handshakeHeaders = headers ?? buildRedirectToHandshake({\n                handshakeReason: reason\n            });\n            if (handshakeHeaders.get(constants.Headers.Location)) {\n                handshakeHeaders.set(constants.Headers.CacheControl, \"no-store\");\n            }\n            const isRedirectLoop = setHandshakeInfiniteRedirectionLoopHeaders(handshakeHeaders);\n            if (isRedirectLoop) {\n                const msg = `Clerk: Refreshing the session token resulted in an infinite redirect loop. This usually means that your Clerk instance keys do not match - make sure to copy the correct publishable and secret keys from the Clerk dashboard.`;\n                console.log(msg);\n                return signedOut(authenticateContext2, reason, message);\n            }\n            return handshake(authenticateContext2, reason, message, handshakeHeaders);\n        }\n        return signedOut(authenticateContext2, reason, message);\n    }\n    function handleMaybeOrganizationSyncHandshake(authenticateContext2, auth) {\n        const organizationSyncTarget = getOrganizationSyncTarget(authenticateContext2.clerkUrl, options.organizationSyncOptions, organizationSyncTargetMatchers);\n        if (!organizationSyncTarget) {\n            return null;\n        }\n        let mustActivate = false;\n        if (organizationSyncTarget.type === \"organization\") {\n            if (organizationSyncTarget.organizationSlug && organizationSyncTarget.organizationSlug !== auth.orgSlug) {\n                mustActivate = true;\n            }\n            if (organizationSyncTarget.organizationId && organizationSyncTarget.organizationId !== auth.orgId) {\n                mustActivate = true;\n            }\n        }\n        if (organizationSyncTarget.type === \"personalAccount\" && auth.orgId) {\n            mustActivate = true;\n        }\n        if (!mustActivate) {\n            return null;\n        }\n        if (authenticateContext2.handshakeRedirectLoopCounter > 0) {\n            console.warn(\"Clerk: Organization activation handshake loop detected. This is likely due to an invalid organization ID or slug. Skipping organization activation.\");\n            return null;\n        }\n        const handshakeState = handleMaybeHandshakeStatus(authenticateContext2, AuthErrorReason.ActiveOrganizationMismatch, \"\");\n        if (handshakeState.status !== \"handshake\") {\n            return null;\n        }\n        return handshakeState;\n    }\n    async function authenticateRequestWithTokenInHeader() {\n        const { sessionTokenInHeader } = authenticateContext;\n        try {\n            const { data, errors } = await verifyToken(sessionTokenInHeader, authenticateContext);\n            if (errors) {\n                throw errors[0];\n            }\n            return signedIn(authenticateContext, data, void 0, sessionTokenInHeader);\n        } catch (err) {\n            return handleError(err, \"header\");\n        }\n    }\n    function setHandshakeInfiniteRedirectionLoopHeaders(headers) {\n        if (authenticateContext.handshakeRedirectLoopCounter === 3) {\n            return true;\n        }\n        const newCounterValue = authenticateContext.handshakeRedirectLoopCounter + 1;\n        const cookieName = constants.Cookies.RedirectCount;\n        headers.append(\"Set-Cookie\", `${cookieName}=${newCounterValue}; SameSite=Lax; HttpOnly; Max-Age=3`);\n        return false;\n    }\n    function handleHandshakeTokenVerificationErrorInDevelopment(error) {\n        if (error.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature) {\n            const msg = `Clerk: Handshake token verification failed due to an invalid signature. If you have switched Clerk keys locally, clear your cookies and try again.`;\n            throw new Error(msg);\n        }\n        throw new Error(`Clerk: Handshake token verification failed: ${error.getFullMessage()}.`);\n    }\n    async function authenticateRequestWithTokenInCookie() {\n        const hasActiveClient = authenticateContext.clientUat;\n        const hasSessionToken = !!authenticateContext.sessionTokenInCookie;\n        const hasDevBrowserToken = !!authenticateContext.devBrowserToken;\n        if (authenticateContext.handshakeToken) {\n            try {\n                return await resolveHandshake();\n            } catch (error) {\n                if (error instanceof _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError && authenticateContext.instanceType === \"development\") {\n                    handleHandshakeTokenVerificationErrorInDevelopment(error);\n                } else {\n                    console.error(\"Clerk: unable to resolve handshake:\", error);\n                }\n            }\n        }\n        if (authenticateContext.instanceType === \"development\" && authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.DevBrowser)) {\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserSync, \"\");\n        }\n        const isRequestEligibleForMultiDomainSync = authenticateContext.isSatellite && authenticateContext.secFetchDest === \"document\";\n        if (authenticateContext.instanceType === \"production\" && isRequestEligibleForMultiDomainSync) {\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\");\n        }\n        if (authenticateContext.instanceType === \"development\" && isRequestEligibleForMultiDomainSync && !authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.ClerkSynced)) {\n            const redirectURL = new URL(authenticateContext.signInUrl);\n            redirectURL.searchParams.append(constants.QueryParameters.ClerkRedirectUrl, authenticateContext.clerkUrl.toString());\n            const headers = new Headers({\n                [constants.Headers.Location]: redirectURL.toString()\n            });\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\", headers);\n        }\n        const redirectUrl = new URL(authenticateContext.clerkUrl).searchParams.get(constants.QueryParameters.ClerkRedirectUrl);\n        if (authenticateContext.instanceType === \"development\" && !authenticateContext.isSatellite && redirectUrl) {\n            const redirectBackToSatelliteUrl = new URL(redirectUrl);\n            if (authenticateContext.devBrowserToken) {\n                redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.DevBrowser, authenticateContext.devBrowserToken);\n            }\n            redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.ClerkSynced, \"true\");\n            const headers = new Headers({\n                [constants.Headers.Location]: redirectBackToSatelliteUrl.toString()\n            });\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.PrimaryRespondsToSyncing, \"\", headers);\n        }\n        if (authenticateContext.instanceType === \"development\" && !hasDevBrowserToken) {\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserMissing, \"\");\n        }\n        if (!hasActiveClient && !hasSessionToken) {\n            return signedOut(authenticateContext, AuthErrorReason.SessionTokenAndUATMissing, \"\");\n        }\n        if (!hasActiveClient && hasSessionToken) {\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenWithoutClientUAT, \"\");\n        }\n        if (hasActiveClient && !hasSessionToken) {\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.ClientUATWithoutSessionToken, \"\");\n        }\n        const { data: decodeResult, errors: decodedErrors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(authenticateContext.sessionTokenInCookie);\n        if (decodedErrors) {\n            return handleError(decodedErrors[0], \"cookie\");\n        }\n        if (decodeResult.payload.iat < authenticateContext.clientUat) {\n            return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenIATBeforeClientUAT, \"\");\n        }\n        try {\n            const { data, errors } = await verifyToken(authenticateContext.sessionTokenInCookie, authenticateContext);\n            if (errors) {\n                throw errors[0];\n            }\n            const signedInRequestState = signedIn(authenticateContext, data, void 0, authenticateContext.sessionTokenInCookie);\n            const handshakeRequestState = handleMaybeOrganizationSyncHandshake(authenticateContext, signedInRequestState.toAuth());\n            if (handshakeRequestState) {\n                return handshakeRequestState;\n            }\n            return signedInRequestState;\n        } catch (err) {\n            return handleError(err, \"cookie\");\n        }\n        return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n    }\n    async function handleError(err, tokenCarrier) {\n        if (!(err instanceof _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError)) {\n            return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n        }\n        let refreshError;\n        if (isRequestEligibleForRefresh(err, authenticateContext, request)) {\n            const { data, error } = await attemptRefresh(authenticateContext);\n            if (data) {\n                return signedIn(authenticateContext, data.jwtPayload, data.headers, data.sessionToken);\n            }\n            if (error?.cause?.reason) {\n                refreshError = error.cause.reason;\n            } else {\n                refreshError = RefreshTokenErrorReason.UnexpectedSDKError;\n            }\n        } else {\n            if (request.method !== \"GET\") {\n                refreshError = RefreshTokenErrorReason.NonEligibleNonGet;\n            } else if (!authenticateContext.refreshTokenInCookie) {\n                refreshError = RefreshTokenErrorReason.NonEligibleNoCookie;\n            } else {\n                refreshError = null;\n            }\n        }\n        err.tokenCarrier = tokenCarrier;\n        const reasonToHandshake = [\n            _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired,\n            _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet,\n            _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture\n        ].includes(err.reason);\n        if (reasonToHandshake) {\n            return handleMaybeHandshakeStatus(authenticateContext, convertTokenVerificationErrorReasonToAuthErrorReason({\n                tokenError: err.reason,\n                refreshError\n            }), err.getFullMessage());\n        }\n        return signedOut(authenticateContext, err.reason, err.getFullMessage());\n    }\n    if (authenticateContext.sessionTokenInHeader) {\n        return authenticateRequestWithTokenInHeader();\n    }\n    return authenticateRequestWithTokenInCookie();\n}\nvar debugRequestState = (params)=>{\n    const { isSignedIn, proxyUrl, reason, message, publishableKey, isSatellite, domain } = params;\n    return {\n        isSignedIn,\n        proxyUrl,\n        reason,\n        message,\n        publishableKey,\n        isSatellite,\n        domain\n    };\n};\nfunction computeOrganizationSyncTargetMatchers(options) {\n    let personalAccountMatcher = null;\n    if (options?.personalAccountPatterns) {\n        try {\n            personalAccountMatcher = (0,_clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__.match)(options.personalAccountPatterns);\n        } catch (e) {\n            throw new Error(`Invalid personal account pattern \"${options.personalAccountPatterns}\": \"${e}\"`);\n        }\n    }\n    let organizationMatcher = null;\n    if (options?.organizationPatterns) {\n        try {\n            organizationMatcher = (0,_clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__.match)(options.organizationPatterns);\n        } catch (e) {\n            throw new Error(`Clerk: Invalid organization pattern \"${options.organizationPatterns}\": \"${e}\"`);\n        }\n    }\n    return {\n        OrganizationMatcher: organizationMatcher,\n        PersonalAccountMatcher: personalAccountMatcher\n    };\n}\nfunction getOrganizationSyncTarget(url, options, matchers) {\n    if (!options) {\n        return null;\n    }\n    if (matchers.OrganizationMatcher) {\n        let orgResult;\n        try {\n            orgResult = matchers.OrganizationMatcher(url.pathname);\n        } catch (e) {\n            console.error(`Clerk: Failed to apply organization pattern \"${options.organizationPatterns}\" to a path`, e);\n            return null;\n        }\n        if (orgResult && \"params\" in orgResult) {\n            const params = orgResult.params;\n            if (\"id\" in params && typeof params.id === \"string\") {\n                return {\n                    type: \"organization\",\n                    organizationId: params.id\n                };\n            }\n            if (\"slug\" in params && typeof params.slug === \"string\") {\n                return {\n                    type: \"organization\",\n                    organizationSlug: params.slug\n                };\n            }\n            console.warn(\"Clerk: Detected an organization pattern match, but no organization ID or slug was found in the URL. Does the pattern include `:id` or `:slug`?\");\n        }\n    }\n    if (matchers.PersonalAccountMatcher) {\n        let personalResult;\n        try {\n            personalResult = matchers.PersonalAccountMatcher(url.pathname);\n        } catch (e) {\n            console.error(`Failed to apply personal account pattern \"${options.personalAccountPatterns}\" to a path`, e);\n            return null;\n        }\n        if (personalResult) {\n            return {\n                type: \"personalAccount\"\n            };\n        }\n    }\n    return null;\n}\nfunction getOrganizationSyncQueryParams(toActivate) {\n    const ret = /* @__PURE__ */ new Map();\n    if (toActivate.type === \"personalAccount\") {\n        ret.set(\"organization_id\", \"\");\n    }\n    if (toActivate.type === \"organization\") {\n        if (toActivate.organizationId) {\n            ret.set(\"organization_id\", toActivate.organizationId);\n        }\n        if (toActivate.organizationSlug) {\n            ret.set(\"organization_id\", toActivate.organizationSlug);\n        }\n    }\n    return ret;\n}\nvar convertTokenVerificationErrorReasonToAuthErrorReason = ({ tokenError, refreshError })=>{\n    switch(tokenError){\n        case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired:\n            return `${AuthErrorReason.SessionTokenExpired}-refresh-${refreshError}`;\n        case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet:\n            return AuthErrorReason.SessionTokenNBF;\n        case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture:\n            return AuthErrorReason.SessionTokenIatInTheFuture;\n        default:\n            return AuthErrorReason.UnexpectedError;\n    }\n};\n// src/util/mergePreDefinedOptions.ts\nfunction mergePreDefinedOptions(preDefinedOptions, options) {\n    return Object.keys(preDefinedOptions).reduce((obj, key)=>{\n        return {\n            ...obj,\n            [key]: options[key] || obj[key]\n        };\n    }, {\n        ...preDefinedOptions\n    });\n}\n// src/tokens/factory.ts\nvar defaultOptions = {\n    secretKey: \"\",\n    jwtKey: \"\",\n    apiUrl: void 0,\n    apiVersion: void 0,\n    proxyUrl: \"\",\n    publishableKey: \"\",\n    isSatellite: false,\n    domain: \"\",\n    audience: \"\"\n};\nfunction createAuthenticateRequest(params) {\n    const buildTimeOptions = mergePreDefinedOptions(defaultOptions, params.options);\n    const apiClient = params.apiClient;\n    const authenticateRequest2 = (request, options = {})=>{\n        const { apiUrl, apiVersion } = buildTimeOptions;\n        const runTimeOptions = mergePreDefinedOptions(buildTimeOptions, options);\n        return authenticateRequest(request, {\n            ...options,\n            ...runTimeOptions,\n            // We should add all the omitted props from options here (eg apiUrl / apiVersion)\n            // to avoid runtime options override them.\n            apiUrl,\n            apiVersion,\n            apiClient\n        });\n    };\n    return {\n        authenticateRequest: authenticateRequest2,\n        debugRequestState\n    };\n}\n //# sourceMappingURL=chunk-OFWLF3V3.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-OFWLF3V3.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withLegacyReturn: () => (/* binding */ withLegacyReturn),\n/* harmony export */   withLegacySyncReturn: () => (/* binding */ withLegacySyncReturn)\n/* harmony export */ });\n// src/jwt/legacyReturn.ts\nfunction withLegacyReturn(cb) {\n    return async (...args)=>{\n        const { data, errors } = await cb(...args);\n        if (errors) {\n            throw errors[0];\n        }\n        return data;\n    };\n}\nfunction withLegacySyncReturn(cb) {\n    return (...args)=>{\n        const { data, errors } = cb(...args);\n        if (errors) {\n            throw errors[0];\n        }\n        return data;\n    };\n}\n //# sourceMappingURL=chunk-P263NW7Z.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstUDI2M05XN1oubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMEJBQTBCO0FBQzFCLFNBQVNBLGlCQUFpQkMsRUFBRTtJQUMxQixPQUFPLE9BQU8sR0FBR0M7UUFDZixNQUFNLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFLEdBQUcsTUFBTUgsTUFBTUM7UUFDckMsSUFBSUUsUUFBUTtZQUNWLE1BQU1BLE1BQU0sQ0FBQyxFQUFFO1FBQ2pCO1FBQ0EsT0FBT0Q7SUFDVDtBQUNGO0FBQ0EsU0FBU0UscUJBQXFCSixFQUFFO0lBQzlCLE9BQU8sQ0FBQyxHQUFHQztRQUNULE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUUsR0FBR0gsTUFBTUM7UUFDL0IsSUFBSUUsUUFBUTtZQUNWLE1BQU1BLE1BQU0sQ0FBQyxFQUFFO1FBQ2pCO1FBQ0EsT0FBT0Q7SUFDVDtBQUNGO0FBS0UsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstUDI2M05XN1oubWpzP2E0MGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2p3dC9sZWdhY3lSZXR1cm4udHNcbmZ1bmN0aW9uIHdpdGhMZWdhY3lSZXR1cm4oY2IpIHtcbiAgcmV0dXJuIGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvcnMgfSA9IGF3YWl0IGNiKC4uLmFyZ3MpO1xuICAgIGlmIChlcnJvcnMpIHtcbiAgICAgIHRocm93IGVycm9yc1swXTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH07XG59XG5mdW5jdGlvbiB3aXRoTGVnYWN5U3luY1JldHVybihjYikge1xuICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9ycyB9ID0gY2IoLi4uYXJncyk7XG4gICAgaWYgKGVycm9ycykge1xuICAgICAgdGhyb3cgZXJyb3JzWzBdO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcbn1cblxuZXhwb3J0IHtcbiAgd2l0aExlZ2FjeVJldHVybixcbiAgd2l0aExlZ2FjeVN5bmNSZXR1cm5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1QMjYzTlc3Wi5tanMubWFwIl0sIm5hbWVzIjpbIndpdGhMZWdhY3lSZXR1cm4iLCJjYiIsImFyZ3MiLCJkYXRhIiwiZXJyb3JzIiwid2l0aExlZ2FjeVN5bmNSZXR1cm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClerkClient: () => (/* binding */ createClerkClient),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken2)\n/* harmony export */ });\n/* harmony import */ var _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-OFWLF3V3.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-OFWLF3V3.mjs\");\n/* harmony import */ var _chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-P263NW7Z.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\");\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n\n\n\n\n// src/index.ts\n\nvar verifyToken2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_1__.withLegacyReturn)(_chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.verifyToken);\nfunction createClerkClient(options) {\n    const opts = {\n        ...options\n    };\n    const apiClient = (0,_chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.createBackendApiClient)(opts);\n    const requestState = (0,_chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.createAuthenticateRequest)({\n        options: opts,\n        apiClient\n    });\n    const telemetry = new _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__.TelemetryCollector({\n        ...options.telemetry,\n        publishableKey: opts.publishableKey,\n        secretKey: opts.secretKey,\n        ...opts.sdkMetadata ? {\n            sdk: opts.sdkMetadata.name,\n            sdkVersion: opts.sdkMetadata.version\n        } : {}\n    });\n    return {\n        ...apiClient,\n        ...requestState,\n        telemetry\n    };\n}\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFJOEI7QUFHQTtBQUNBO0FBQ0E7QUFFOUIsZUFBZTtBQUM4QztBQUM3RCxJQUFJSyxlQUFlRixxRUFBZ0JBLENBQUNELDREQUFXQTtBQUMvQyxTQUFTSSxrQkFBa0JDLE9BQU87SUFDaEMsTUFBTUMsT0FBTztRQUFFLEdBQUdELE9BQU87SUFBQztJQUMxQixNQUFNRSxZQUFZUiwyRUFBc0JBLENBQUNPO0lBQ3pDLE1BQU1FLGVBQWVWLDhFQUF5QkEsQ0FBQztRQUFFTyxTQUFTQztRQUFNQztJQUFVO0lBQzFFLE1BQU1FLFlBQVksSUFBSVAsdUVBQWtCQSxDQUFDO1FBQ3ZDLEdBQUdHLFFBQVFJLFNBQVM7UUFDcEJDLGdCQUFnQkosS0FBS0ksY0FBYztRQUNuQ0MsV0FBV0wsS0FBS0ssU0FBUztRQUN6QixHQUFHTCxLQUFLTSxXQUFXLEdBQUc7WUFBRUMsS0FBS1AsS0FBS00sV0FBVyxDQUFDRSxJQUFJO1lBQUVDLFlBQVlULEtBQUtNLFdBQVcsQ0FBQ0ksT0FBTztRQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pHO0lBQ0EsT0FBTztRQUNMLEdBQUdULFNBQVM7UUFDWixHQUFHQyxZQUFZO1FBQ2ZDO0lBQ0Y7QUFDRjtBQUlFLENBQ0Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvYmFja2VuZC9kaXN0L2luZGV4Lm1qcz84Mjg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZUF1dGhlbnRpY2F0ZVJlcXVlc3QsXG4gIGNyZWF0ZUJhY2tlbmRBcGlDbGllbnQsXG4gIHZlcmlmeVRva2VuXG59IGZyb20gXCIuL2NodW5rLU9GV0xGM1YzLm1qc1wiO1xuaW1wb3J0IHtcbiAgd2l0aExlZ2FjeVJldHVyblxufSBmcm9tIFwiLi9jaHVuay1QMjYzTlc3Wi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstQVQzRkpVM00ubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTVKUzJWWUxVLm1qc1wiO1xuXG4vLyBzcmMvaW5kZXgudHNcbmltcG9ydCB7IFRlbGVtZXRyeUNvbGxlY3RvciB9IGZyb20gXCJAY2xlcmsvc2hhcmVkL3RlbGVtZXRyeVwiO1xudmFyIHZlcmlmeVRva2VuMiA9IHdpdGhMZWdhY3lSZXR1cm4odmVyaWZ5VG9rZW4pO1xuZnVuY3Rpb24gY3JlYXRlQ2xlcmtDbGllbnQob3B0aW9ucykge1xuICBjb25zdCBvcHRzID0geyAuLi5vcHRpb25zIH07XG4gIGNvbnN0IGFwaUNsaWVudCA9IGNyZWF0ZUJhY2tlbmRBcGlDbGllbnQob3B0cyk7XG4gIGNvbnN0IHJlcXVlc3RTdGF0ZSA9IGNyZWF0ZUF1dGhlbnRpY2F0ZVJlcXVlc3QoeyBvcHRpb25zOiBvcHRzLCBhcGlDbGllbnQgfSk7XG4gIGNvbnN0IHRlbGVtZXRyeSA9IG5ldyBUZWxlbWV0cnlDb2xsZWN0b3Ioe1xuICAgIC4uLm9wdGlvbnMudGVsZW1ldHJ5LFxuICAgIHB1Ymxpc2hhYmxlS2V5OiBvcHRzLnB1Ymxpc2hhYmxlS2V5LFxuICAgIHNlY3JldEtleTogb3B0cy5zZWNyZXRLZXksXG4gICAgLi4ub3B0cy5zZGtNZXRhZGF0YSA/IHsgc2RrOiBvcHRzLnNka01ldGFkYXRhLm5hbWUsIHNka1ZlcnNpb246IG9wdHMuc2RrTWV0YWRhdGEudmVyc2lvbiB9IDoge31cbiAgfSk7XG4gIHJldHVybiB7XG4gICAgLi4uYXBpQ2xpZW50LFxuICAgIC4uLnJlcXVlc3RTdGF0ZSxcbiAgICB0ZWxlbWV0cnlcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZUNsZXJrQ2xpZW50LFxuICB2ZXJpZnlUb2tlbjIgYXMgdmVyaWZ5VG9rZW5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUF1dGhlbnRpY2F0ZVJlcXVlc3QiLCJjcmVhdGVCYWNrZW5kQXBpQ2xpZW50IiwidmVyaWZ5VG9rZW4iLCJ3aXRoTGVnYWN5UmV0dXJuIiwiVGVsZW1ldHJ5Q29sbGVjdG9yIiwidmVyaWZ5VG9rZW4yIiwiY3JlYXRlQ2xlcmtDbGllbnQiLCJvcHRpb25zIiwib3B0cyIsImFwaUNsaWVudCIsInJlcXVlc3RTdGF0ZSIsInRlbGVtZXRyeSIsInB1Ymxpc2hhYmxlS2V5Iiwic2VjcmV0S2V5Iiwic2RrTWV0YWRhdGEiLCJzZGsiLCJuYW1lIiwic2RrVmVyc2lvbiIsInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/index.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/internal.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/internal.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthStatus),\n/* harmony export */   constants: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.constants),\n/* harmony export */   createAuthenticateRequest: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.createAuthenticateRequest),\n/* harmony export */   createClerkRequest: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest),\n/* harmony export */   createRedirect: () => (/* binding */ createRedirect),\n/* harmony export */   debugRequestState: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.debugRequestState),\n/* harmony export */   decorateObjectWithResources: () => (/* binding */ decorateObjectWithResources),\n/* harmony export */   makeAuthObjectSerializable: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.makeAuthObjectSerializable),\n/* harmony export */   reverificationError: () => (/* reexport safe */ _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_3__.reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* reexport safe */ _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_3__.reverificationErrorResponse),\n/* harmony export */   signedInAuthObject: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* reexport safe */ _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject),\n/* harmony export */   stripPrivateDataFromObject: () => (/* binding */ stripPrivateDataFromObject)\n/* harmony export */ });\n/* harmony import */ var _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-OFWLF3V3.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-OFWLF3V3.mjs\");\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/authorization-errors */ \"(middleware)/./node_modules/@clerk/shared/dist/authorization-errors.mjs\");\n\n\n\n// src/createRedirect.ts\nvar buildUrl = (_baseUrl, _targetUrl, _returnBackUrl, _devBrowserToken)=>{\n    if (_baseUrl === \"\") {\n        return legacyBuildUrl(_targetUrl.toString(), _returnBackUrl?.toString());\n    }\n    const baseUrl = new URL(_baseUrl);\n    const returnBackUrl = _returnBackUrl ? new URL(_returnBackUrl, baseUrl) : void 0;\n    const res = new URL(_targetUrl, baseUrl);\n    if (returnBackUrl) {\n        res.searchParams.set(\"redirect_url\", returnBackUrl.toString());\n    }\n    if (_devBrowserToken && baseUrl.hostname !== res.hostname) {\n        res.searchParams.set(_chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.constants.QueryParameters.DevBrowser, _devBrowserToken);\n    }\n    return res.toString();\n};\nvar legacyBuildUrl = (targetUrl, redirectUrl)=>{\n    let url;\n    if (!targetUrl.startsWith(\"http\")) {\n        if (!redirectUrl || !redirectUrl.startsWith(\"http\")) {\n            throw new Error(\"destination url or return back url should be an absolute path url!\");\n        }\n        const baseURL = new URL(redirectUrl);\n        url = new URL(targetUrl, baseURL.origin);\n    } else {\n        url = new URL(targetUrl);\n    }\n    if (redirectUrl) {\n        url.searchParams.set(\"redirect_url\", redirectUrl);\n    }\n    return url.toString();\n};\nvar buildAccountsBaseUrl = (frontendApi)=>{\n    if (!frontendApi) {\n        return \"\";\n    }\n    const accountsBaseUrl = frontendApi.replace(/clerk\\.accountsstage\\./, \"accountsstage.\").replace(/clerk\\.accounts\\.|clerk\\./, \"accounts.\");\n    return `https://${accountsBaseUrl}`;\n};\nvar createRedirect = (params)=>{\n    const { publishableKey, redirectAdapter, signInUrl, signUpUrl, baseUrl } = params;\n    const parsedPublishableKey = (0,_chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey);\n    const frontendApi = parsedPublishableKey?.frontendApi;\n    const isDevelopment = parsedPublishableKey?.instanceType === \"development\";\n    const accountsBaseUrl = buildAccountsBaseUrl(frontendApi);\n    const redirectToSignUp = ({ returnBackUrl } = {})=>{\n        if (!signUpUrl && !accountsBaseUrl) {\n            _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n        }\n        const accountsSignUpUrl = `${accountsBaseUrl}/sign-up`;\n        return redirectAdapter(buildUrl(baseUrl, signUpUrl || accountsSignUpUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null));\n    };\n    const redirectToSignIn = ({ returnBackUrl } = {})=>{\n        if (!signInUrl && !accountsBaseUrl) {\n            _chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n        }\n        const accountsSignInUrl = `${accountsBaseUrl}/sign-in`;\n        return redirectAdapter(buildUrl(baseUrl, signInUrl || accountsSignInUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null));\n    };\n    return {\n        redirectToSignUp,\n        redirectToSignIn\n    };\n};\n// src/util/decorateObjectWithResources.ts\nvar decorateObjectWithResources = async (obj, authObj, opts)=>{\n    const { loadSession, loadUser, loadOrganization } = opts || {};\n    const { userId, sessionId, orgId } = authObj;\n    const { sessions, users, organizations } = (0,_chunk_OFWLF3V3_mjs__WEBPACK_IMPORTED_MODULE_0__.createBackendApiClient)({\n        ...opts\n    });\n    const [sessionResp, userResp, organizationResp] = await Promise.all([\n        loadSession && sessionId ? sessions.getSession(sessionId) : Promise.resolve(void 0),\n        loadUser && userId ? users.getUser(userId) : Promise.resolve(void 0),\n        loadOrganization && orgId ? organizations.getOrganization({\n            organizationId: orgId\n        }) : Promise.resolve(void 0)\n    ]);\n    const resources = stripPrivateDataFromObject({\n        session: sessionResp,\n        user: userResp,\n        organization: organizationResp\n    });\n    return Object.assign(obj, resources);\n};\nfunction stripPrivateDataFromObject(authObject) {\n    const user = authObject.user ? {\n        ...authObject.user\n    } : authObject.user;\n    const organization = authObject.organization ? {\n        ...authObject.organization\n    } : authObject.organization;\n    prunePrivateMetadata(user);\n    prunePrivateMetadata(organization);\n    return {\n        ...authObject,\n        user,\n        organization\n    };\n}\nfunction prunePrivateMetadata(resource) {\n    if (resource) {\n        delete resource[\"privateMetadata\"];\n        delete resource[\"private_metadata\"];\n    }\n    return resource;\n}\n// src/internal.ts\n\n //# sourceMappingURL=internal.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/jwt/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/jwt/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt2),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature2),\n/* harmony export */   signJwt: () => (/* binding */ signJwt2),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt2)\n/* harmony export */ });\n/* harmony import */ var _chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-P263NW7Z.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\");\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-AT3FJU3M.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunk-5JS2VYLU.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n\n\n\n// src/jwt/signJwt.ts\nfunction encodeJwtData(value) {\n    const stringified = JSON.stringify(value);\n    const encoder = new TextEncoder();\n    const encoded = encoder.encode(stringified);\n    return _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.base64url.stringify(encoded, {\n        pad: false\n    });\n}\nasync function signJwt(payload, key, options) {\n    if (!options.algorithm) {\n        throw new Error(\"No algorithm specified\");\n    }\n    const encoder = new TextEncoder();\n    const algorithm = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.getCryptoAlgorithm)(options.algorithm);\n    if (!algorithm) {\n        return {\n            errors: [\n                new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__.SignJWTError(`Unsupported algorithm ${options.algorithm}`)\n            ]\n        };\n    }\n    const cryptoKey = await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.importKey)(key, algorithm, \"sign\");\n    const header = options.header || {\n        typ: \"JWT\"\n    };\n    header.alg = options.algorithm;\n    payload.iat = Math.floor(Date.now() / 1e3);\n    const encodedHeader = encodeJwtData(header);\n    const encodedPayload = encodeJwtData(payload);\n    const firstPart = `${encodedHeader}.${encodedPayload}`;\n    try {\n        const signature = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.runtime.crypto.subtle.sign(algorithm, cryptoKey, encoder.encode(firstPart));\n        const encodedSignature = `${firstPart}.${_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.base64url.stringify(new Uint8Array(signature), {\n            pad: false\n        })}`;\n        return {\n            data: encodedSignature\n        };\n    } catch (error) {\n        return {\n            errors: [\n                new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__.SignJWTError(error?.message)\n            ]\n        };\n    }\n}\n// src/jwt/index.ts\nvar verifyJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.verifyJwt);\nvar decodeJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacySyncReturn)(_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeJwt);\nvar signJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(signJwt);\nvar hasValidSignature2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.hasValidSignature);\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3Qvand0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRytCO0FBU0E7QUFHQTtBQUUvQixxQkFBcUI7QUFDckIsU0FBU1UsY0FBY0MsS0FBSztJQUMxQixNQUFNQyxjQUFjQyxLQUFLQyxTQUFTLENBQUNIO0lBQ25DLE1BQU1JLFVBQVUsSUFBSUM7SUFDcEIsTUFBTUMsVUFBVUYsUUFBUUcsTUFBTSxDQUFDTjtJQUMvQixPQUFPViwwREFBU0EsQ0FBQ1ksU0FBUyxDQUFDRyxTQUFTO1FBQUVFLEtBQUs7SUFBTTtBQUNuRDtBQUNBLGVBQWVDLFFBQVFDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQzFDLElBQUksQ0FBQ0EsUUFBUUMsU0FBUyxFQUFFO1FBQ3RCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE1BQU1WLFVBQVUsSUFBSUM7SUFDcEIsTUFBTVEsWUFBWXBCLHVFQUFrQkEsQ0FBQ21CLFFBQVFDLFNBQVM7SUFDdEQsSUFBSSxDQUFDQSxXQUFXO1FBQ2QsT0FBTztZQUNMRSxRQUFRO2dCQUFDLElBQUlqQiw2REFBWUEsQ0FBQyxDQUFDLHNCQUFzQixFQUFFYyxRQUFRQyxTQUFTLENBQUMsQ0FBQzthQUFFO1FBQzFFO0lBQ0Y7SUFDQSxNQUFNRyxZQUFZLE1BQU1yQiw4REFBU0EsQ0FBQ2dCLEtBQUtFLFdBQVc7SUFDbEQsTUFBTUksU0FBU0wsUUFBUUssTUFBTSxJQUFJO1FBQUVDLEtBQUs7SUFBTTtJQUM5Q0QsT0FBT0UsR0FBRyxHQUFHUCxRQUFRQyxTQUFTO0lBQzlCSCxRQUFRVSxHQUFHLEdBQUdDLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0MsR0FBRyxLQUFLO0lBQ3RDLE1BQU1DLGdCQUFnQjFCLGNBQWNrQjtJQUNwQyxNQUFNUyxpQkFBaUIzQixjQUFjVztJQUNyQyxNQUFNaUIsWUFBWSxDQUFDLEVBQUVGLGNBQWMsQ0FBQyxFQUFFQyxlQUFlLENBQUM7SUFDdEQsSUFBSTtRQUNGLE1BQU1FLFlBQVksTUFBTWhDLHdEQUFPQSxDQUFDaUMsTUFBTSxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQ2xCLFdBQVdHLFdBQVdaLFFBQVFHLE1BQU0sQ0FBQ29CO1FBQ3hGLE1BQU1LLG1CQUFtQixDQUFDLEVBQUVMLFVBQVUsQ0FBQyxFQUFFcEMsMERBQVNBLENBQUNZLFNBQVMsQ0FBQyxJQUFJOEIsV0FBV0wsWUFBWTtZQUFFcEIsS0FBSztRQUFNLEdBQUcsQ0FBQztRQUN6RyxPQUFPO1lBQUUwQixNQUFNRjtRQUFpQjtJQUNsQyxFQUFFLE9BQU9HLE9BQU87UUFDZCxPQUFPO1lBQUVwQixRQUFRO2dCQUFDLElBQUlqQiw2REFBWUEsQ0FBQ3FDLE9BQU9DO2FBQVM7UUFBQztJQUN0RDtBQUNGO0FBRUEsbUJBQW1CO0FBQ25CLElBQUlDLGFBQWFoRCxxRUFBZ0JBLENBQUNRLDBEQUFTQTtBQUMzQyxJQUFJeUMsYUFBYWhELHlFQUFvQkEsQ0FBQ0UsMERBQVNBO0FBQy9DLElBQUkrQyxXQUFXbEQscUVBQWdCQSxDQUFDb0I7QUFDaEMsSUFBSStCLHFCQUFxQm5ELHFFQUFnQkEsQ0FBQ0ssa0VBQWlCQTtBQU16RCxDQUNGLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9qd3QvaW5kZXgubWpzP2NmNzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgd2l0aExlZ2FjeVJldHVybixcbiAgd2l0aExlZ2FjeVN5bmNSZXR1cm5cbn0gZnJvbSBcIi4uL2NodW5rLVAyNjNOVzdaLm1qc1wiO1xuaW1wb3J0IHtcbiAgYmFzZTY0dXJsLFxuICBkZWNvZGVKd3QsXG4gIGdldENyeXB0b0FsZ29yaXRobSxcbiAgaGFzVmFsaWRTaWduYXR1cmUsXG4gIGltcG9ydEtleSxcbiAgcnVudGltZSxcbiAgdmVyaWZ5Snd0XG59IGZyb20gXCIuLi9jaHVuay1BVDNGSlUzTS5tanNcIjtcbmltcG9ydCB7XG4gIFNpZ25KV1RFcnJvclxufSBmcm9tIFwiLi4vY2h1bmstNUpTMlZZTFUubWpzXCI7XG5cbi8vIHNyYy9qd3Qvc2lnbkp3dC50c1xuZnVuY3Rpb24gZW5jb2RlSnd0RGF0YSh2YWx1ZSkge1xuICBjb25zdCBzdHJpbmdpZmllZCA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICBjb25zdCBlbmNvZGVkID0gZW5jb2Rlci5lbmNvZGUoc3RyaW5naWZpZWQpO1xuICByZXR1cm4gYmFzZTY0dXJsLnN0cmluZ2lmeShlbmNvZGVkLCB7IHBhZDogZmFsc2UgfSk7XG59XG5hc3luYyBmdW5jdGlvbiBzaWduSnd0KHBheWxvYWQsIGtleSwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMuYWxnb3JpdGhtKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gYWxnb3JpdGhtIHNwZWNpZmllZFwiKTtcbiAgfVxuICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gIGNvbnN0IGFsZ29yaXRobSA9IGdldENyeXB0b0FsZ29yaXRobShvcHRpb25zLmFsZ29yaXRobSk7XG4gIGlmICghYWxnb3JpdGhtKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVycm9yczogW25ldyBTaWduSldURXJyb3IoYFVuc3VwcG9ydGVkIGFsZ29yaXRobSAke29wdGlvbnMuYWxnb3JpdGhtfWApXVxuICAgIH07XG4gIH1cbiAgY29uc3QgY3J5cHRvS2V5ID0gYXdhaXQgaW1wb3J0S2V5KGtleSwgYWxnb3JpdGhtLCBcInNpZ25cIik7XG4gIGNvbnN0IGhlYWRlciA9IG9wdGlvbnMuaGVhZGVyIHx8IHsgdHlwOiBcIkpXVFwiIH07XG4gIGhlYWRlci5hbGcgPSBvcHRpb25zLmFsZ29yaXRobTtcbiAgcGF5bG9hZC5pYXQgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxZTMpO1xuICBjb25zdCBlbmNvZGVkSGVhZGVyID0gZW5jb2RlSnd0RGF0YShoZWFkZXIpO1xuICBjb25zdCBlbmNvZGVkUGF5bG9hZCA9IGVuY29kZUp3dERhdGEocGF5bG9hZCk7XG4gIGNvbnN0IGZpcnN0UGFydCA9IGAke2VuY29kZWRIZWFkZXJ9LiR7ZW5jb2RlZFBheWxvYWR9YDtcbiAgdHJ5IHtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBydW50aW1lLmNyeXB0by5zdWJ0bGUuc2lnbihhbGdvcml0aG0sIGNyeXB0b0tleSwgZW5jb2Rlci5lbmNvZGUoZmlyc3RQYXJ0KSk7XG4gICAgY29uc3QgZW5jb2RlZFNpZ25hdHVyZSA9IGAke2ZpcnN0UGFydH0uJHtiYXNlNjR1cmwuc3RyaW5naWZ5KG5ldyBVaW50OEFycmF5KHNpZ25hdHVyZSksIHsgcGFkOiBmYWxzZSB9KX1gO1xuICAgIHJldHVybiB7IGRhdGE6IGVuY29kZWRTaWduYXR1cmUgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4geyBlcnJvcnM6IFtuZXcgU2lnbkpXVEVycm9yKGVycm9yPy5tZXNzYWdlKV0gfTtcbiAgfVxufVxuXG4vLyBzcmMvand0L2luZGV4LnRzXG52YXIgdmVyaWZ5Snd0MiA9IHdpdGhMZWdhY3lSZXR1cm4odmVyaWZ5Snd0KTtcbnZhciBkZWNvZGVKd3QyID0gd2l0aExlZ2FjeVN5bmNSZXR1cm4oZGVjb2RlSnd0KTtcbnZhciBzaWduSnd0MiA9IHdpdGhMZWdhY3lSZXR1cm4oc2lnbkp3dCk7XG52YXIgaGFzVmFsaWRTaWduYXR1cmUyID0gd2l0aExlZ2FjeVJldHVybihoYXNWYWxpZFNpZ25hdHVyZSk7XG5leHBvcnQge1xuICBkZWNvZGVKd3QyIGFzIGRlY29kZUp3dCxcbiAgaGFzVmFsaWRTaWduYXR1cmUyIGFzIGhhc1ZhbGlkU2lnbmF0dXJlLFxuICBzaWduSnd0MiBhcyBzaWduSnd0LFxuICB2ZXJpZnlKd3QyIGFzIHZlcmlmeUp3dFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOlsid2l0aExlZ2FjeVJldHVybiIsIndpdGhMZWdhY3lTeW5jUmV0dXJuIiwiYmFzZTY0dXJsIiwiZGVjb2RlSnd0IiwiZ2V0Q3J5cHRvQWxnb3JpdGhtIiwiaGFzVmFsaWRTaWduYXR1cmUiLCJpbXBvcnRLZXkiLCJydW50aW1lIiwidmVyaWZ5Snd0IiwiU2lnbkpXVEVycm9yIiwiZW5jb2RlSnd0RGF0YSIsInZhbHVlIiwic3RyaW5naWZpZWQiLCJKU09OIiwic3RyaW5naWZ5IiwiZW5jb2RlciIsIlRleHRFbmNvZGVyIiwiZW5jb2RlZCIsImVuY29kZSIsInBhZCIsInNpZ25Kd3QiLCJwYXlsb2FkIiwia2V5Iiwib3B0aW9ucyIsImFsZ29yaXRobSIsIkVycm9yIiwiZXJyb3JzIiwiY3J5cHRvS2V5IiwiaGVhZGVyIiwidHlwIiwiYWxnIiwiaWF0IiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImVuY29kZWRIZWFkZXIiLCJlbmNvZGVkUGF5bG9hZCIsImZpcnN0UGFydCIsInNpZ25hdHVyZSIsImNyeXB0byIsInN1YnRsZSIsInNpZ24iLCJlbmNvZGVkU2lnbmF0dXJlIiwiVWludDhBcnJheSIsImRhdGEiLCJlcnJvciIsIm1lc3NhZ2UiLCJ2ZXJpZnlKd3QyIiwiZGVjb2RlSnd0MiIsInNpZ25Kd3QyIiwiaGFzVmFsaWRTaWduYXR1cmUyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/jwt/index.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webcrypto: () => (/* binding */ webcrypto)\n/* harmony export */ });\nconst webcrypto = crypto;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvcnVudGltZS9icm93c2VyL2NyeXB0by5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFlBQVlDLE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvcnVudGltZS9icm93c2VyL2NyeXB0by5tanM/MDc3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgd2ViY3J5cHRvID0gY3J5cHRvO1xuIl0sIm5hbWVzIjpbIndlYmNyeXB0byIsImNyeXB0byJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiUrlFromPublishableKey: () => (/* reexport safe */ _chunk_NNO3XJ5E_mjs__WEBPACK_IMPORTED_MODULE_0__.apiUrlFromPublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_NNO3XJ5E_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-NNO3XJ5E.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-NNO3XJ5E.mjs\");\n/* harmony import */ var _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-G3VP5PJE.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n //# sourceMappingURL=apiUrlFromPublishableKey.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9hcGlVcmxGcm9tUHVibGlzaGFibGVLZXkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFOEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRzVCLENBQ0YscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5Lm1qcz8zY2RiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFwaVVybEZyb21QdWJsaXNoYWJsZUtleVxufSBmcm9tIFwiLi9jaHVuay1OTk8zWEo1RS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstRzNWUDVQSkUubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVRFVEdURUkyLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1LT0g3R1RKTy5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstSTZNVFNUT0YubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5Lm1qcy5tYXAiXSwibmFtZXMiOlsiYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/authorization-errors.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/authorization-errors.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isReverificationHint: () => (/* reexport safe */ _chunk_43A5F2IE_mjs__WEBPACK_IMPORTED_MODULE_0__.isReverificationHint),\n/* harmony export */   reverificationError: () => (/* reexport safe */ _chunk_43A5F2IE_mjs__WEBPACK_IMPORTED_MODULE_0__.reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* reexport safe */ _chunk_43A5F2IE_mjs__WEBPACK_IMPORTED_MODULE_0__.reverificationErrorResponse)\n/* harmony export */ });\n/* harmony import */ var _chunk_43A5F2IE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-43A5F2IE.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=authorization-errors.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9hdXRob3JpemF0aW9uLWVycm9ycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFJOEI7QUFDQTtBQUs1QixDQUNGLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2F1dGhvcml6YXRpb24tZXJyb3JzLm1qcz9jODQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzUmV2ZXJpZmljYXRpb25IaW50LFxuICByZXZlcmlmaWNhdGlvbkVycm9yLFxuICByZXZlcmlmaWNhdGlvbkVycm9yUmVzcG9uc2Vcbn0gZnJvbSBcIi4vY2h1bmstNDNBNUYySUUubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgaXNSZXZlcmlmaWNhdGlvbkhpbnQsXG4gIHJldmVyaWZpY2F0aW9uRXJyb3IsXG4gIHJldmVyaWZpY2F0aW9uRXJyb3JSZXNwb25zZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhvcml6YXRpb24tZXJyb3JzLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNSZXZlcmlmaWNhdGlvbkhpbnQiLCJyZXZlcmlmaWNhdGlvbkVycm9yIiwicmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/authorization-errors.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/authorization.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/authorization.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCheckAuthorization: () => (/* reexport safe */ _chunk_X3VKQCBG_mjs__WEBPACK_IMPORTED_MODULE_0__.createCheckAuthorization),\n/* harmony export */   validateReverificationConfig: () => (/* reexport safe */ _chunk_X3VKQCBG_mjs__WEBPACK_IMPORTED_MODULE_0__.validateReverificationConfig)\n/* harmony export */ });\n/* harmony import */ var _chunk_X3VKQCBG_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-X3VKQCBG.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X3VKQCBG.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=authorization.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9hdXRob3JpemF0aW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRzhCO0FBQ0E7QUFJNUIsQ0FDRiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9hdXRob3JpemF0aW9uLm1qcz80NmM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZUNoZWNrQXV0aG9yaXphdGlvbixcbiAgdmFsaWRhdGVSZXZlcmlmaWNhdGlvbkNvbmZpZ1xufSBmcm9tIFwiLi9jaHVuay1YM1ZLUUNCRy5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBjcmVhdGVDaGVja0F1dGhvcml6YXRpb24sXG4gIHZhbGlkYXRlUmV2ZXJpZmljYXRpb25Db25maWdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRob3JpemF0aW9uLm1qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQ2hlY2tBdXRob3JpemF0aW9uIiwidmFsaWRhdGVSZXZlcmlmaWNhdGlvbkNvbmZpZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/authorization.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/callWithRetry.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/callWithRetry.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* reexport safe */ _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__.callWithRetry)\n/* harmony export */ });\n/* harmony import */ var _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-4PW5MDZA.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=callWithRetry.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jYWxsV2l0aFJldHJ5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFOEI7QUFDQTtBQUc1QixDQUNGLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NhbGxXaXRoUmV0cnkubWpzPzc1MjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY2FsbFdpdGhSZXRyeVxufSBmcm9tIFwiLi9jaHVuay00UFc1TURaQS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBjYWxsV2l0aFJldHJ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FsbFdpdGhSZXRyeS5tanMubWFwIl0sIm5hbWVzIjpbImNhbGxXaXRoUmV0cnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/callWithRetry.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-2ZNADCNC.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-2ZNADCNC.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPathMatcher: () => (/* binding */ createPathMatcher)\n/* harmony export */ });\n/* harmony import */ var _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JJHTUJGL.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs\");\n\n// src/pathMatcher.ts\nvar precomputePathRegex = (patterns)=>{\n    return patterns.map((pattern)=>pattern instanceof RegExp ? pattern : (0,_chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)(pattern));\n};\nvar createPathMatcher = (patterns)=>{\n    const routePatterns = [\n        patterns || \"\"\n    ].flat().filter(Boolean);\n    const matchers = precomputePathRegex(routePatterns);\n    return (pathname)=>matchers.some((matcher)=>matcher.test(pathname));\n};\n //# sourceMappingURL=chunk-2ZNADCNC.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay0yWk5BRENOQy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFOEI7QUFFOUIscUJBQXFCO0FBQ3JCLElBQUlDLHNCQUFzQixDQUFDQztJQUN6QixPQUFPQSxTQUFTQyxHQUFHLENBQUMsQ0FBQ0MsVUFBWUEsbUJBQW1CQyxTQUFTRCxVQUFVSixpRUFBWUEsQ0FBQ0k7QUFDdEY7QUFDQSxJQUFJRSxvQkFBb0IsQ0FBQ0o7SUFDdkIsTUFBTUssZ0JBQWdCO1FBQUNMLFlBQVk7S0FBRyxDQUFDTSxJQUFJLEdBQUdDLE1BQU0sQ0FBQ0M7SUFDckQsTUFBTUMsV0FBV1Ysb0JBQW9CTTtJQUNyQyxPQUFPLENBQUNLLFdBQWFELFNBQVNFLElBQUksQ0FBQyxDQUFDQyxVQUFZQSxRQUFRQyxJQUFJLENBQUNIO0FBQy9EO0FBSUUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay0yWk5BRENOQy5tanM/ZTQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBwYXRoVG9SZWdleHBcbn0gZnJvbSBcIi4vY2h1bmstSkpIVFVKR0wubWpzXCI7XG5cbi8vIHNyYy9wYXRoTWF0Y2hlci50c1xudmFyIHByZWNvbXB1dGVQYXRoUmVnZXggPSAocGF0dGVybnMpID0+IHtcbiAgcmV0dXJuIHBhdHRlcm5zLm1hcCgocGF0dGVybikgPT4gcGF0dGVybiBpbnN0YW5jZW9mIFJlZ0V4cCA/IHBhdHRlcm4gOiBwYXRoVG9SZWdleHAocGF0dGVybikpO1xufTtcbnZhciBjcmVhdGVQYXRoTWF0Y2hlciA9IChwYXR0ZXJucykgPT4ge1xuICBjb25zdCByb3V0ZVBhdHRlcm5zID0gW3BhdHRlcm5zIHx8IFwiXCJdLmZsYXQoKS5maWx0ZXIoQm9vbGVhbik7XG4gIGNvbnN0IG1hdGNoZXJzID0gcHJlY29tcHV0ZVBhdGhSZWdleChyb3V0ZVBhdHRlcm5zKTtcbiAgcmV0dXJuIChwYXRobmFtZSkgPT4gbWF0Y2hlcnMuc29tZSgobWF0Y2hlcikgPT4gbWF0Y2hlci50ZXN0KHBhdGhuYW1lKSk7XG59O1xuXG5leHBvcnQge1xuICBjcmVhdGVQYXRoTWF0Y2hlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTJaTkFEQ05DLm1qcy5tYXAiXSwibmFtZXMiOlsicGF0aFRvUmVnZXhwIiwicHJlY29tcHV0ZVBhdGhSZWdleCIsInBhdHRlcm5zIiwibWFwIiwicGF0dGVybiIsIlJlZ0V4cCIsImNyZWF0ZVBhdGhNYXRjaGVyIiwicm91dGVQYXR0ZXJucyIsImZsYXQiLCJmaWx0ZXIiLCJCb29sZWFuIiwibWF0Y2hlcnMiLCJwYXRobmFtZSIsInNvbWUiLCJtYXRjaGVyIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-2ZNADCNC.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isStaging: () => (/* binding */ isStaging)\n/* harmony export */ });\n// src/utils/instance.ts\nfunction isStaging(frontendApi) {\n    return frontendApi.endsWith(\".lclstage.dev\") || frontendApi.endsWith(\".stgstage.dev\") || frontendApi.endsWith(\".clerkstage.dev\") || frontendApi.endsWith(\".accountsstage.dev\");\n}\n //# sourceMappingURL=chunk-3TMSNP4L.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay0zVE1TTlA0TC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdCQUF3QjtBQUN4QixTQUFTQSxVQUFVQyxXQUFXO0lBQzVCLE9BQU9BLFlBQVlDLFFBQVEsQ0FBQyxvQkFBb0JELFlBQVlDLFFBQVEsQ0FBQyxvQkFBb0JELFlBQVlDLFFBQVEsQ0FBQyxzQkFBc0JELFlBQVlDLFFBQVEsQ0FBQztBQUMzSjtBQUlFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstM1RNU05QNEwubWpzP2Y1NDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2luc3RhbmNlLnRzXG5mdW5jdGlvbiBpc1N0YWdpbmcoZnJvbnRlbmRBcGkpIHtcbiAgcmV0dXJuIGZyb250ZW5kQXBpLmVuZHNXaXRoKFwiLmxjbHN0YWdlLmRldlwiKSB8fCBmcm9udGVuZEFwaS5lbmRzV2l0aChcIi5zdGdzdGFnZS5kZXZcIikgfHwgZnJvbnRlbmRBcGkuZW5kc1dpdGgoXCIuY2xlcmtzdGFnZS5kZXZcIikgfHwgZnJvbnRlbmRBcGkuZW5kc1dpdGgoXCIuYWNjb3VudHNzdGFnZS5kZXZcIik7XG59XG5cbmV4cG9ydCB7XG4gIGlzU3RhZ2luZ1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTNUTVNOUDRMLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNTdGFnaW5nIiwiZnJvbnRlbmRBcGkiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isReverificationHint: () => (/* binding */ isReverificationHint),\n/* harmony export */   reverificationError: () => (/* binding */ reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* binding */ reverificationErrorResponse)\n/* harmony export */ });\n// src/authorization-errors.ts\nvar REVERIFICATION_REASON = \"reverification-error\";\nvar reverificationError = (missingConfig)=>({\n        clerk_error: {\n            type: \"forbidden\",\n            reason: REVERIFICATION_REASON,\n            metadata: {\n                reverification: missingConfig\n            }\n        }\n    });\nvar reverificationErrorResponse = (...args)=>new Response(JSON.stringify(reverificationError(...args)), {\n        status: 403\n    });\nvar isReverificationHint = (result)=>{\n    return result && typeof result === \"object\" && \"clerk_error\" in result && result.clerk_error?.type === \"forbidden\" && result.clerk_error?.reason === REVERIFICATION_REASON;\n};\n //# sourceMappingURL=chunk-43A5F2IE.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00M0E1RjJJRS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsOEJBQThCO0FBQzlCLElBQUlBLHdCQUF3QjtBQUM1QixJQUFJQyxzQkFBc0IsQ0FBQ0MsZ0JBQW1CO1FBQzVDQyxhQUFhO1lBQ1hDLE1BQU07WUFDTkMsUUFBUUw7WUFDUk0sVUFBVTtnQkFDUkMsZ0JBQWdCTDtZQUNsQjtRQUNGO0lBQ0Y7QUFDQSxJQUFJTSw4QkFBOEIsQ0FBQyxHQUFHQyxPQUFTLElBQUlDLFNBQVNDLEtBQUtDLFNBQVMsQ0FBQ1gsdUJBQXVCUSxRQUFRO1FBQ3hHSSxRQUFRO0lBQ1Y7QUFDQSxJQUFJQyx1QkFBdUIsQ0FBQ0M7SUFDMUIsT0FBT0EsVUFBVSxPQUFPQSxXQUFXLFlBQVksaUJBQWlCQSxVQUFVQSxPQUFPWixXQUFXLEVBQUVDLFNBQVMsZUFBZVcsT0FBT1osV0FBVyxFQUFFRSxXQUFXTDtBQUN2SjtBQU1FLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNDNBNUYySUUubWpzP2VjZmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2F1dGhvcml6YXRpb24tZXJyb3JzLnRzXG52YXIgUkVWRVJJRklDQVRJT05fUkVBU09OID0gXCJyZXZlcmlmaWNhdGlvbi1lcnJvclwiO1xudmFyIHJldmVyaWZpY2F0aW9uRXJyb3IgPSAobWlzc2luZ0NvbmZpZykgPT4gKHtcbiAgY2xlcmtfZXJyb3I6IHtcbiAgICB0eXBlOiBcImZvcmJpZGRlblwiLFxuICAgIHJlYXNvbjogUkVWRVJJRklDQVRJT05fUkVBU09OLFxuICAgIG1ldGFkYXRhOiB7XG4gICAgICByZXZlcmlmaWNhdGlvbjogbWlzc2luZ0NvbmZpZ1xuICAgIH1cbiAgfVxufSk7XG52YXIgcmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlID0gKC4uLmFyZ3MpID0+IG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShyZXZlcmlmaWNhdGlvbkVycm9yKC4uLmFyZ3MpKSwge1xuICBzdGF0dXM6IDQwM1xufSk7XG52YXIgaXNSZXZlcmlmaWNhdGlvbkhpbnQgPSAocmVzdWx0KSA9PiB7XG4gIHJldHVybiByZXN1bHQgJiYgdHlwZW9mIHJlc3VsdCA9PT0gXCJvYmplY3RcIiAmJiBcImNsZXJrX2Vycm9yXCIgaW4gcmVzdWx0ICYmIHJlc3VsdC5jbGVya19lcnJvcj8udHlwZSA9PT0gXCJmb3JiaWRkZW5cIiAmJiByZXN1bHQuY2xlcmtfZXJyb3I/LnJlYXNvbiA9PT0gUkVWRVJJRklDQVRJT05fUkVBU09OO1xufTtcblxuZXhwb3J0IHtcbiAgcmV2ZXJpZmljYXRpb25FcnJvcixcbiAgcmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlLFxuICBpc1JldmVyaWZpY2F0aW9uSGludFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTQzQTVGMklFLm1qcy5tYXAiXSwibmFtZXMiOlsiUkVWRVJJRklDQVRJT05fUkVBU09OIiwicmV2ZXJpZmljYXRpb25FcnJvciIsIm1pc3NpbmdDb25maWciLCJjbGVya19lcnJvciIsInR5cGUiLCJyZWFzb24iLCJtZXRhZGF0YSIsInJldmVyaWZpY2F0aW9uIiwicmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlIiwiYXJncyIsIlJlc3BvbnNlIiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YXR1cyIsImlzUmV2ZXJpZmljYXRpb25IaW50IiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* binding */ callWithRetry)\n/* harmony export */ });\n// src/callWithRetry.ts\nfunction wait(ms) {\n    return new Promise((res)=>setTimeout(res, ms));\n}\nvar MAX_NUMBER_OF_RETRIES = 5;\nasync function callWithRetry(fn, attempt = 1, maxAttempts = MAX_NUMBER_OF_RETRIES) {\n    try {\n        return await fn();\n    } catch (e) {\n        if (attempt >= maxAttempts) {\n            throw e;\n        }\n        await wait(2 ** attempt * 100);\n        return callWithRetry(fn, attempt + 1, maxAttempts);\n    }\n}\n //# sourceMappingURL=chunk-4PW5MDZA.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00UFc1TURaQS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHVCQUF1QjtBQUN2QixTQUFTQSxLQUFLQyxFQUFFO0lBQ2QsT0FBTyxJQUFJQyxRQUFRLENBQUNDLE1BQVFDLFdBQVdELEtBQUtGO0FBQzlDO0FBQ0EsSUFBSUksd0JBQXdCO0FBQzVCLGVBQWVDLGNBQWNDLEVBQUUsRUFBRUMsVUFBVSxDQUFDLEVBQUVDLGNBQWNKLHFCQUFxQjtJQUMvRSxJQUFJO1FBQ0YsT0FBTyxNQUFNRTtJQUNmLEVBQUUsT0FBT0csR0FBRztRQUNWLElBQUlGLFdBQVdDLGFBQWE7WUFDMUIsTUFBTUM7UUFDUjtRQUNBLE1BQU1WLEtBQUssS0FBS1EsVUFBVTtRQUMxQixPQUFPRixjQUFjQyxJQUFJQyxVQUFVLEdBQUdDO0lBQ3hDO0FBQ0Y7QUFJRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTRQVzVNRFpBLm1qcz8yYjQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jYWxsV2l0aFJldHJ5LnRzXG5mdW5jdGlvbiB3YWl0KG1zKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzKSA9PiBzZXRUaW1lb3V0KHJlcywgbXMpKTtcbn1cbnZhciBNQVhfTlVNQkVSX09GX1JFVFJJRVMgPSA1O1xuYXN5bmMgZnVuY3Rpb24gY2FsbFdpdGhSZXRyeShmbiwgYXR0ZW1wdCA9IDEsIG1heEF0dGVtcHRzID0gTUFYX05VTUJFUl9PRl9SRVRSSUVTKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGF3YWl0IGZuKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoYXR0ZW1wdCA+PSBtYXhBdHRlbXB0cykge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gICAgYXdhaXQgd2FpdCgyICoqIGF0dGVtcHQgKiAxMDApO1xuICAgIHJldHVybiBjYWxsV2l0aFJldHJ5KGZuLCBhdHRlbXB0ICsgMSwgbWF4QXR0ZW1wdHMpO1xuICB9XG59XG5cbmV4cG9ydCB7XG4gIGNhbGxXaXRoUmV0cnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay00UFc1TURaQS5tanMubWFwIl0sIm5hbWVzIjpbIndhaXQiLCJtcyIsIlByb21pc2UiLCJyZXMiLCJzZXRUaW1lb3V0IiwiTUFYX05VTUJFUl9PRl9SRVRSSUVTIiwiY2FsbFdpdGhSZXRyeSIsImZuIiwiYXR0ZW1wdCIsIm1heEF0dGVtcHRzIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpOrHttps: () => (/* binding */ isHttpOrHttps),\n/* harmony export */   isProxyUrlRelative: () => (/* binding */ isProxyUrlRelative),\n/* harmony export */   isValidProxyUrl: () => (/* binding */ isValidProxyUrl),\n/* harmony export */   proxyUrlToAbsoluteURL: () => (/* binding */ proxyUrlToAbsoluteURL)\n/* harmony export */ });\n// src/proxy.ts\nfunction isValidProxyUrl(key) {\n    if (!key) {\n        return true;\n    }\n    return isHttpOrHttps(key) || isProxyUrlRelative(key);\n}\nfunction isHttpOrHttps(key) {\n    return /^http(s)?:\\/\\//.test(key || \"\");\n}\nfunction isProxyUrlRelative(key) {\n    return key.startsWith(\"/\");\n}\nfunction proxyUrlToAbsoluteURL(url) {\n    if (!url) {\n        return \"\";\n    }\n    return isProxyUrlRelative(url) ? new URL(url, window.location.origin).toString() : url;\n}\n //# sourceMappingURL=chunk-6NDGN2IU.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay02TkRHTjJJVS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGVBQWU7QUFDZixTQUFTQSxnQkFBZ0JDLEdBQUc7SUFDMUIsSUFBSSxDQUFDQSxLQUFLO1FBQ1IsT0FBTztJQUNUO0lBQ0EsT0FBT0MsY0FBY0QsUUFBUUUsbUJBQW1CRjtBQUNsRDtBQUNBLFNBQVNDLGNBQWNELEdBQUc7SUFDeEIsT0FBTyxpQkFBaUJHLElBQUksQ0FBQ0gsT0FBTztBQUN0QztBQUNBLFNBQVNFLG1CQUFtQkYsR0FBRztJQUM3QixPQUFPQSxJQUFJSSxVQUFVLENBQUM7QUFDeEI7QUFDQSxTQUFTQyxzQkFBc0JDLEdBQUc7SUFDaEMsSUFBSSxDQUFDQSxLQUFLO1FBQ1IsT0FBTztJQUNUO0lBQ0EsT0FBT0osbUJBQW1CSSxPQUFPLElBQUlDLElBQUlELEtBQUtFLE9BQU9DLFFBQVEsQ0FBQ0MsTUFBTSxFQUFFQyxRQUFRLEtBQUtMO0FBQ3JGO0FBT0UsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay02TkRHTjJJVS5tanM/ZjliMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcHJveHkudHNcbmZ1bmN0aW9uIGlzVmFsaWRQcm94eVVybChrZXkpIHtcbiAgaWYgKCFrZXkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gaXNIdHRwT3JIdHRwcyhrZXkpIHx8IGlzUHJveHlVcmxSZWxhdGl2ZShrZXkpO1xufVxuZnVuY3Rpb24gaXNIdHRwT3JIdHRwcyhrZXkpIHtcbiAgcmV0dXJuIC9eaHR0cChzKT86XFwvXFwvLy50ZXN0KGtleSB8fCBcIlwiKTtcbn1cbmZ1bmN0aW9uIGlzUHJveHlVcmxSZWxhdGl2ZShrZXkpIHtcbiAgcmV0dXJuIGtleS5zdGFydHNXaXRoKFwiL1wiKTtcbn1cbmZ1bmN0aW9uIHByb3h5VXJsVG9BYnNvbHV0ZVVSTCh1cmwpIHtcbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICByZXR1cm4gaXNQcm94eVVybFJlbGF0aXZlKHVybCkgPyBuZXcgVVJMKHVybCwgd2luZG93LmxvY2F0aW9uLm9yaWdpbikudG9TdHJpbmcoKSA6IHVybDtcbn1cblxuZXhwb3J0IHtcbiAgaXNWYWxpZFByb3h5VXJsLFxuICBpc0h0dHBPckh0dHBzLFxuICBpc1Byb3h5VXJsUmVsYXRpdmUsXG4gIHByb3h5VXJsVG9BYnNvbHV0ZVVSTFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTZOREdOMklVLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNWYWxpZFByb3h5VXJsIiwia2V5IiwiaXNIdHRwT3JIdHRwcyIsImlzUHJveHlVcmxSZWxhdGl2ZSIsInRlc3QiLCJzdGFydHNXaXRoIiwicHJveHlVcmxUb0Fic29sdXRlVVJMIiwidXJsIiwiVVJMIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __export: () => (/* binding */ __export),\n/* harmony export */   __privateAdd: () => (/* binding */ __privateAdd),\n/* harmony export */   __privateGet: () => (/* binding */ __privateGet),\n/* harmony export */   __privateMethod: () => (/* binding */ __privateMethod),\n/* harmony export */   __privateSet: () => (/* binding */ __privateSet),\n/* harmony export */   __reExport: () => (/* binding */ __reExport)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = (msg)=>{\n    throw TypeError(msg);\n};\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __accessCheck = (obj, member, msg)=>member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter)=>(__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value)=>member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter)=>(__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method)=>(__accessCheck(obj, member, \"access private method\"), method);\n //# sourceMappingURL=chunk-7ELT755Q.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay03RUxUNzU1US5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWUMsT0FBT0MsY0FBYztBQUNyQyxJQUFJQyxtQkFBbUJGLE9BQU9HLHdCQUF3QjtBQUN0RCxJQUFJQyxvQkFBb0JKLE9BQU9LLG1CQUFtQjtBQUNsRCxJQUFJQyxlQUFlTixPQUFPTyxTQUFTLENBQUNDLGNBQWM7QUFDbEQsSUFBSUMsY0FBYyxDQUFDQztJQUNqQixNQUFNQyxVQUFVRDtBQUNsQjtBQUNBLElBQUlFLFdBQVcsQ0FBQ0MsUUFBUUM7SUFDdEIsSUFBSyxJQUFJQyxRQUFRRCxJQUNmZixVQUFVYyxRQUFRRSxNQUFNO1FBQUVDLEtBQUtGLEdBQUcsQ0FBQ0MsS0FBSztRQUFFRSxZQUFZO0lBQUs7QUFDL0Q7QUFDQSxJQUFJQyxjQUFjLENBQUNDLElBQUlDLE1BQU1DLFFBQVFDO0lBQ25DLElBQUlGLFFBQVEsT0FBT0EsU0FBUyxZQUFZLE9BQU9BLFNBQVMsWUFBWTtRQUNsRSxLQUFLLElBQUlHLE9BQU9uQixrQkFBa0JnQixNQUNoQyxJQUFJLENBQUNkLGFBQWFrQixJQUFJLENBQUNMLElBQUlJLFFBQVFBLFFBQVFGLFFBQ3pDdEIsVUFBVW9CLElBQUlJLEtBQUs7WUFBRVAsS0FBSyxJQUFNSSxJQUFJLENBQUNHLElBQUk7WUFBRU4sWUFBWSxDQUFFSyxDQUFBQSxPQUFPcEIsaUJBQWlCa0IsTUFBTUcsSUFBRyxLQUFNRCxLQUFLTCxVQUFVO1FBQUM7SUFDdEg7SUFDQSxPQUFPRTtBQUNUO0FBQ0EsSUFBSU0sYUFBYSxDQUFDWixRQUFRYSxLQUFLQyxlQUFrQlQsQ0FBQUEsWUFBWUwsUUFBUWEsS0FBSyxZQUFZQyxnQkFBZ0JULFlBQVlTLGNBQWNELEtBQUssVUFBUztBQUM5SSxJQUFJRSxnQkFBZ0IsQ0FBQ0MsS0FBS0MsUUFBUXBCLE1BQVFvQixPQUFPQyxHQUFHLENBQUNGLFFBQVFwQixZQUFZLFlBQVlDO0FBQ3JGLElBQUlzQixlQUFlLENBQUNILEtBQUtDLFFBQVFHLFNBQVlMLENBQUFBLGNBQWNDLEtBQUtDLFFBQVEsNEJBQTRCRyxTQUFTQSxPQUFPVCxJQUFJLENBQUNLLE9BQU9DLE9BQU9kLEdBQUcsQ0FBQ2EsSUFBRztBQUM5SSxJQUFJSyxlQUFlLENBQUNMLEtBQUtDLFFBQVFLLFFBQVVMLE9BQU9DLEdBQUcsQ0FBQ0YsT0FBT3BCLFlBQVksdURBQXVEcUIsa0JBQWtCTSxVQUFVTixPQUFPTyxHQUFHLENBQUNSLE9BQU9DLE9BQU9RLEdBQUcsQ0FBQ1QsS0FBS007QUFDOUwsSUFBSUksZUFBZSxDQUFDVixLQUFLQyxRQUFRSyxPQUFPSyxTQUFZWixDQUFBQSxjQUFjQyxLQUFLQyxRQUFRLDJCQUEyQlUsU0FBU0EsT0FBT2hCLElBQUksQ0FBQ0ssS0FBS00sU0FBU0wsT0FBT1EsR0FBRyxDQUFDVCxLQUFLTSxRQUFRQSxLQUFJO0FBQ3pLLElBQUlNLGtCQUFrQixDQUFDWixLQUFLQyxRQUFRWSxTQUFZZCxDQUFBQSxjQUFjQyxLQUFLQyxRQUFRLDBCQUEwQlksTUFBSztBQVN4RyxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTdFTFQ3NTVRLm1qcz80ZWY1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fdHlwZUVycm9yID0gKG1zZykgPT4ge1xuICB0aHJvdyBUeXBlRXJyb3IobXNnKTtcbn07XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX19yZUV4cG9ydCA9ICh0YXJnZXQsIG1vZCwgc2Vjb25kVGFyZ2V0KSA9PiAoX19jb3B5UHJvcHModGFyZ2V0LCBtb2QsIFwiZGVmYXVsdFwiKSwgc2Vjb25kVGFyZ2V0ICYmIF9fY29weVByb3BzKHNlY29uZFRhcmdldCwgbW9kLCBcImRlZmF1bHRcIikpO1xudmFyIF9fYWNjZXNzQ2hlY2sgPSAob2JqLCBtZW1iZXIsIG1zZykgPT4gbWVtYmVyLmhhcyhvYmopIHx8IF9fdHlwZUVycm9yKFwiQ2Fubm90IFwiICsgbXNnKTtcbnZhciBfX3ByaXZhdGVHZXQgPSAob2JqLCBtZW1iZXIsIGdldHRlcikgPT4gKF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwicmVhZCBmcm9tIHByaXZhdGUgZmllbGRcIiksIGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiBtZW1iZXIuZ2V0KG9iaikpO1xudmFyIF9fcHJpdmF0ZUFkZCA9IChvYmosIG1lbWJlciwgdmFsdWUpID0+IG1lbWJlci5oYXMob2JqKSA/IF9fdHlwZUVycm9yKFwiQ2Fubm90IGFkZCB0aGUgc2FtZSBwcml2YXRlIG1lbWJlciBtb3JlIHRoYW4gb25jZVwiKSA6IG1lbWJlciBpbnN0YW5jZW9mIFdlYWtTZXQgPyBtZW1iZXIuYWRkKG9iaikgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xudmFyIF9fcHJpdmF0ZVNldCA9IChvYmosIG1lbWJlciwgdmFsdWUsIHNldHRlcikgPT4gKF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZFwiKSwgc2V0dGVyID8gc2V0dGVyLmNhbGwob2JqLCB2YWx1ZSkgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpLCB2YWx1ZSk7XG52YXIgX19wcml2YXRlTWV0aG9kID0gKG9iaiwgbWVtYmVyLCBtZXRob2QpID0+IChfX2FjY2Vzc0NoZWNrKG9iaiwgbWVtYmVyLCBcImFjY2VzcyBwcml2YXRlIG1ldGhvZFwiKSwgbWV0aG9kKTtcblxuZXhwb3J0IHtcbiAgX19leHBvcnQsXG4gIF9fcmVFeHBvcnQsXG4gIF9fcHJpdmF0ZUdldCxcbiAgX19wcml2YXRlQWRkLFxuICBfX3ByaXZhdGVTZXQsXG4gIF9fcHJpdmF0ZU1ldGhvZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTdFTFQ3NTVRLm1qcy5tYXAiXSwibmFtZXMiOlsiX19kZWZQcm9wIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2dldE93blByb3BEZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19nZXRPd25Qcm9wTmFtZXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiX19oYXNPd25Qcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJfX3R5cGVFcnJvciIsIm1zZyIsIlR5cGVFcnJvciIsIl9fZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImdldCIsImVudW1lcmFibGUiLCJfX2NvcHlQcm9wcyIsInRvIiwiZnJvbSIsImV4Y2VwdCIsImRlc2MiLCJrZXkiLCJjYWxsIiwiX19yZUV4cG9ydCIsIm1vZCIsInNlY29uZFRhcmdldCIsIl9fYWNjZXNzQ2hlY2siLCJvYmoiLCJtZW1iZXIiLCJoYXMiLCJfX3ByaXZhdGVHZXQiLCJnZXR0ZXIiLCJfX3ByaXZhdGVBZGQiLCJ2YWx1ZSIsIldlYWtTZXQiLCJhZGQiLCJzZXQiLCJfX3ByaXZhdGVTZXQiLCJzZXR0ZXIiLCJfX3ByaXZhdGVNZXRob2QiLCJtZXRob2QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noop: () => (/* binding */ noop)\n/* harmony export */ });\n// src/utils/noop.ts\nvar noop = (..._args)=>{};\n //# sourceMappingURL=chunk-7FNX7RWY.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay03Rk5YN1JXWS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLG9CQUFvQjtBQUNwQixJQUFJQSxPQUFPLENBQUMsR0FBR0MsU0FDZjtBQUlFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN0ZOWDdSV1kubWpzPzYwNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL25vb3AudHNcbnZhciBub29wID0gKC4uLl9hcmdzKSA9PiB7XG59O1xuXG5leHBvcnQge1xuICBub29wXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstN0ZOWDdSV1kubWpzLm1hcCJdLCJuYW1lcyI6WyJub29wIiwiX2FyZ3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDevelopmentEnvironment: () => (/* binding */ isDevelopmentEnvironment),\n/* harmony export */   isProductionEnvironment: () => (/* binding */ isProductionEnvironment),\n/* harmony export */   isTestEnvironment: () => (/* binding */ isTestEnvironment)\n/* harmony export */ });\n// src/utils/runtimeEnvironment.ts\nvar isDevelopmentEnvironment = ()=>{\n    try {\n        return \"development\" === \"development\";\n    } catch  {}\n    return false;\n};\nvar isTestEnvironment = ()=>{\n    try {\n        return \"development\" === \"test\";\n    } catch  {}\n    return false;\n};\nvar isProductionEnvironment = ()=>{\n    try {\n        return \"development\" === \"production\";\n    } catch  {}\n    return false;\n};\n //# sourceMappingURL=chunk-7HPDNZ3R.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay03SFBETlozUi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsa0NBQWtDO0FBQ2xDLElBQUlBLDJCQUEyQjtJQUM3QixJQUFJO1FBQ0YsT0FBT0Msa0JBQXlCO0lBQ2xDLEVBQUUsT0FBTSxDQUNSO0lBQ0EsT0FBTztBQUNUO0FBQ0EsSUFBSUMsb0JBQW9CO0lBQ3RCLElBQUk7UUFDRixPQUFPRCxrQkFBeUI7SUFDbEMsRUFBRSxPQUFNLENBQ1I7SUFDQSxPQUFPO0FBQ1Q7QUFDQSxJQUFJRSwwQkFBMEI7SUFDNUIsSUFBSTtRQUNGLE9BQU9GLGtCQUF5QjtJQUNsQyxFQUFFLE9BQU0sQ0FDUjtJQUNBLE9BQU87QUFDVDtBQU1FLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN0hQRE5aM1IubWpzPzgxZTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL3J1bnRpbWVFbnZpcm9ubWVudC50c1xudmFyIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIjtcbiAgfSBjYXRjaCB7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcbnZhciBpc1Rlc3RFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiO1xuICB9IGNhdGNoIHtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xudmFyIGlzUHJvZHVjdGlvbkVudmlyb25tZW50ID0gKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCI7XG4gIH0gY2F0Y2gge1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCxcbiAgaXNUZXN0RW52aXJvbm1lbnQsXG4gIGlzUHJvZHVjdGlvbkVudmlyb25tZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstN0hQRE5aM1IubWpzLm1hcCJdLCJuYW1lcyI6WyJpc0RldmVsb3BtZW50RW52aXJvbm1lbnQiLCJwcm9jZXNzIiwiaXNUZXN0RW52aXJvbm1lbnQiLCJpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-BS4QFUKM.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-BS4QFUKM.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeferredPromise: () => (/* binding */ createDeferredPromise)\n/* harmony export */ });\n/* harmony import */ var _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7FNX7RWY.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\");\n\n// src/utils/createDeferredPromise.ts\nvar createDeferredPromise = ()=>{\n    let resolve = _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__.noop;\n    let reject = _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__.noop;\n    const promise = new Promise((res, rej)=>{\n        resolve = res;\n        reject = rej;\n    });\n    return {\n        promise,\n        resolve,\n        reject\n    };\n};\n //# sourceMappingURL=chunk-BS4QFUKM.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1CUzRRRlVLTS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFOEI7QUFFOUIscUNBQXFDO0FBQ3JDLElBQUlDLHdCQUF3QjtJQUMxQixJQUFJQyxVQUFVRixxREFBSUE7SUFDbEIsSUFBSUcsU0FBU0gscURBQUlBO0lBQ2pCLE1BQU1JLFVBQVUsSUFBSUMsUUFBUSxDQUFDQyxLQUFLQztRQUNoQ0wsVUFBVUk7UUFDVkgsU0FBU0k7SUFDWDtJQUNBLE9BQU87UUFBRUg7UUFBU0Y7UUFBU0M7SUFBTztBQUNwQztBQUlFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstQlM0UUZVS00ubWpzPzJlYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgbm9vcFxufSBmcm9tIFwiLi9jaHVuay03Rk5YN1JXWS5tanNcIjtcblxuLy8gc3JjL3V0aWxzL2NyZWF0ZURlZmVycmVkUHJvbWlzZS50c1xudmFyIGNyZWF0ZURlZmVycmVkUHJvbWlzZSA9ICgpID0+IHtcbiAgbGV0IHJlc29sdmUgPSBub29wO1xuICBsZXQgcmVqZWN0ID0gbm9vcDtcbiAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgIHJlc29sdmUgPSByZXM7XG4gICAgcmVqZWN0ID0gcmVqO1xuICB9KTtcbiAgcmV0dXJuIHsgcHJvbWlzZSwgcmVzb2x2ZSwgcmVqZWN0IH07XG59O1xuXG5leHBvcnQge1xuICBjcmVhdGVEZWZlcnJlZFByb21pc2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1CUzRRRlVLTS5tanMubWFwIl0sIm5hbWVzIjpbIm5vb3AiLCJjcmVhdGVEZWZlcnJlZFByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicHJvbWlzZSIsIlByb21pc2UiLCJyZXMiLCJyZWoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-BS4QFUKM.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n// src/logger.ts\nvar loggedMessages = /* @__PURE__ */ new Set();\nvar logger = {\n    /**\n   * A custom logger that ensures messages are logged only once.\n   * Reduces noise and duplicated messages when logs are in a hot codepath.\n   */ warnOnce: (msg)=>{\n        if (loggedMessages.has(msg)) {\n            return;\n        }\n        loggedMessages.add(msg);\n        console.warn(msg);\n    },\n    logOnce: (msg)=>{\n        if (loggedMessages.has(msg)) {\n            return;\n        }\n        console.log(msg);\n        loggedMessages.add(msg);\n    }\n};\n //# sourceMappingURL=chunk-CYDR2ZSA.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1DWURSMlpTQS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGdCQUFnQjtBQUNoQixJQUFJQSxpQkFBaUIsYUFBYSxHQUFHLElBQUlDO0FBQ3pDLElBQUlDLFNBQVM7SUFDWDs7O0dBR0MsR0FDREMsVUFBVSxDQUFDQztRQUNULElBQUlKLGVBQWVLLEdBQUcsQ0FBQ0QsTUFBTTtZQUMzQjtRQUNGO1FBQ0FKLGVBQWVNLEdBQUcsQ0FBQ0Y7UUFDbkJHLFFBQVFDLElBQUksQ0FBQ0o7SUFDZjtJQUNBSyxTQUFTLENBQUNMO1FBQ1IsSUFBSUosZUFBZUssR0FBRyxDQUFDRCxNQUFNO1lBQzNCO1FBQ0Y7UUFDQUcsUUFBUUcsR0FBRyxDQUFDTjtRQUNaSixlQUFlTSxHQUFHLENBQUNGO0lBQ3JCO0FBQ0Y7QUFJRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUNZRFIyWlNBLm1qcz9mMTI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9sb2dnZXIudHNcbnZhciBsb2dnZWRNZXNzYWdlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG52YXIgbG9nZ2VyID0ge1xuICAvKipcbiAgICogQSBjdXN0b20gbG9nZ2VyIHRoYXQgZW5zdXJlcyBtZXNzYWdlcyBhcmUgbG9nZ2VkIG9ubHkgb25jZS5cbiAgICogUmVkdWNlcyBub2lzZSBhbmQgZHVwbGljYXRlZCBtZXNzYWdlcyB3aGVuIGxvZ3MgYXJlIGluIGEgaG90IGNvZGVwYXRoLlxuICAgKi9cbiAgd2Fybk9uY2U6IChtc2cpID0+IHtcbiAgICBpZiAobG9nZ2VkTWVzc2FnZXMuaGFzKG1zZykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbG9nZ2VkTWVzc2FnZXMuYWRkKG1zZyk7XG4gICAgY29uc29sZS53YXJuKG1zZyk7XG4gIH0sXG4gIGxvZ09uY2U6IChtc2cpID0+IHtcbiAgICBpZiAobG9nZ2VkTWVzc2FnZXMuaGFzKG1zZykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc29sZS5sb2cobXNnKTtcbiAgICBsb2dnZWRNZXNzYWdlcy5hZGQobXNnKTtcbiAgfVxufTtcblxuZXhwb3J0IHtcbiAgbG9nZ2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstQ1lEUjJaU0EubWpzLm1hcCJdLCJuYW1lcyI6WyJsb2dnZWRNZXNzYWdlcyIsIlNldCIsImxvZ2dlciIsIndhcm5PbmNlIiwibXNnIiwiaGFzIiwiYWRkIiwiY29uc29sZSIsIndhcm4iLCJsb2dPbmNlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-CZUPK5OI.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-CZUPK5OI.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* binding */ ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* binding */ ClerkRuntimeError),\n/* harmony export */   ClerkWebAuthnError: () => (/* binding */ ClerkWebAuthnError),\n/* harmony export */   EmailLinkError: () => (/* binding */ EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* binding */ EmailLinkErrorCode),\n/* harmony export */   buildErrorThrower: () => (/* binding */ buildErrorThrower),\n/* harmony export */   errorToJSON: () => (/* binding */ errorToJSON),\n/* harmony export */   is4xxError: () => (/* binding */ is4xxError),\n/* harmony export */   isCaptchaError: () => (/* binding */ isCaptchaError),\n/* harmony export */   isClerkAPIResponseError: () => (/* binding */ isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* binding */ isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* binding */ isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* binding */ isKnownError),\n/* harmony export */   isMetamaskError: () => (/* binding */ isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* binding */ isNetworkError),\n/* harmony export */   isPasswordPwnedError: () => (/* binding */ isPasswordPwnedError),\n/* harmony export */   isUnauthorizedError: () => (/* binding */ isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* binding */ isUserLockedError),\n/* harmony export */   parseError: () => (/* binding */ parseError),\n/* harmony export */   parseErrors: () => (/* binding */ parseErrors)\n/* harmony export */ });\n// src/error.ts\nfunction isUnauthorizedError(e) {\n    const status = e?.status;\n    const code = e?.errors?.[0]?.code;\n    return code === \"authentication_invalid\" && status === 401;\n}\nfunction isCaptchaError(e) {\n    return [\n        \"captcha_invalid\",\n        \"captcha_not_enabled\",\n        \"captcha_missing_token\"\n    ].includes(e.errors[0].code);\n}\nfunction is4xxError(e) {\n    const status = e?.status;\n    return !!status && status >= 400 && status < 500;\n}\nfunction isNetworkError(e) {\n    const message = (`${e.message}${e.name}` || \"\").toLowerCase().replace(/\\s+/g, \"\");\n    return message.includes(\"networkerror\");\n}\nfunction isKnownError(error) {\n    return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\nfunction isClerkAPIResponseError(err) {\n    return \"clerkError\" in err;\n}\nfunction isClerkRuntimeError(err) {\n    return \"clerkRuntimeError\" in err;\n}\nfunction isMetamaskError(err) {\n    return \"code\" in err && [\n        4001,\n        32602,\n        32603\n    ].includes(err.code) && \"message\" in err;\n}\nfunction isUserLockedError(err) {\n    return isClerkAPIResponseError(err) && err.errors?.[0]?.code === \"user_locked\";\n}\nfunction isPasswordPwnedError(err) {\n    return isClerkAPIResponseError(err) && err.errors?.[0]?.code === \"form_password_pwned\";\n}\nfunction parseErrors(data = []) {\n    return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n    return {\n        code: error.code,\n        message: error.message,\n        longMessage: error.long_message,\n        meta: {\n            paramName: error?.meta?.param_name,\n            sessionId: error?.meta?.session_id,\n            emailAddresses: error?.meta?.email_addresses,\n            identifiers: error?.meta?.identifiers,\n            zxcvbn: error?.meta?.zxcvbn\n        }\n    };\n}\nfunction errorToJSON(error) {\n    return {\n        code: error?.code || \"\",\n        message: error?.message || \"\",\n        long_message: error?.longMessage,\n        meta: {\n            param_name: error?.meta?.paramName,\n            session_id: error?.meta?.sessionId,\n            email_addresses: error?.meta?.emailAddresses,\n            identifiers: error?.meta?.identifiers,\n            zxcvbn: error?.meta?.zxcvbn\n        }\n    };\n}\nvar ClerkAPIResponseError = class _ClerkAPIResponseError extends Error {\n    constructor(message, { data, status, clerkTraceId }){\n        super(message);\n        this.toString = ()=>{\n            let message = `[${this.name}]\nMessage:${this.message}\nStatus:${this.status}\nSerialized errors: ${this.errors.map((e)=>JSON.stringify(e))}`;\n            if (this.clerkTraceId) {\n                message += `\nClerk Trace ID: ${this.clerkTraceId}`;\n            }\n            return message;\n        };\n        Object.setPrototypeOf(this, _ClerkAPIResponseError.prototype);\n        this.status = status;\n        this.message = message;\n        this.clerkTraceId = clerkTraceId;\n        this.clerkError = true;\n        this.errors = parseErrors(data);\n    }\n};\nvar ClerkRuntimeError = class _ClerkRuntimeError extends Error {\n    constructor(message, { code }){\n        const prefix = \"\\uD83D\\uDD12 Clerk:\";\n        const regex = new RegExp(prefix.replace(\" \", \"\\\\s*\"), \"i\");\n        const sanitized = message.replace(regex, \"\");\n        const _message = `${prefix} ${sanitized.trim()}\n\n(code=\"${code}\")\n`;\n        super(_message);\n        /**\n     * Returns a string representation of the error.\n     *\n     * @returns {string} A formatted string with the error name and message.\n     * @memberof ClerkRuntimeError\n     */ this.toString = ()=>{\n            return `[${this.name}]\nMessage:${this.message}`;\n        };\n        Object.setPrototypeOf(this, _ClerkRuntimeError.prototype);\n        this.code = code;\n        this.message = _message;\n        this.clerkRuntimeError = true;\n        this.name = \"ClerkRuntimeError\";\n    }\n};\nvar EmailLinkError = class _EmailLinkError extends Error {\n    constructor(code){\n        super(code);\n        this.code = code;\n        this.name = \"EmailLinkError\";\n        Object.setPrototypeOf(this, _EmailLinkError.prototype);\n    }\n};\nfunction isEmailLinkError(err) {\n    return err.name === \"EmailLinkError\";\n}\nvar EmailLinkErrorCode = {\n    Expired: \"expired\",\n    Failed: \"failed\",\n    ClientMismatch: \"client_mismatch\"\n};\nvar DefaultMessages = Object.freeze({\n    InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n    InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n    MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n    MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n    MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`\n});\nfunction buildErrorThrower({ packageName, customMessages }) {\n    let pkg = packageName;\n    const messages = {\n        ...DefaultMessages,\n        ...customMessages\n    };\n    function buildMessage(rawMessage, replacements) {\n        if (!replacements) {\n            return `${pkg}: ${rawMessage}`;\n        }\n        let msg = rawMessage;\n        const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n        for (const match of matches){\n            const replacement = (replacements[match[1]] || \"\").toString();\n            msg = msg.replace(`{{${match[1]}}}`, replacement);\n        }\n        return `${pkg}: ${msg}`;\n    }\n    return {\n        setPackageName ({ packageName: packageName2 }) {\n            if (typeof packageName2 === \"string\") {\n                pkg = packageName2;\n            }\n            return this;\n        },\n        setMessages ({ customMessages: customMessages2 }) {\n            Object.assign(messages, customMessages2 || {});\n            return this;\n        },\n        throwInvalidPublishableKeyError (params) {\n            throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n        },\n        throwInvalidProxyUrl (params) {\n            throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n        },\n        throwMissingPublishableKeyError () {\n            throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n        },\n        throwMissingSecretKeyError () {\n            throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));\n        },\n        throwMissingClerkProviderError (params) {\n            throw new Error(buildMessage(messages.MissingClerkProvider, params));\n        },\n        throw (message) {\n            throw new Error(buildMessage(message));\n        }\n    };\n}\nvar ClerkWebAuthnError = class extends ClerkRuntimeError {\n    constructor(message, { code }){\n        super(message, {\n            code\n        });\n        this.code = code;\n    }\n};\n //# sourceMappingURL=chunk-CZUPK5OI.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-CZUPK5OI.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: () => (/* binding */ buildPublishableKey),\n/* harmony export */   createDevOrStagingUrlCache: () => (/* binding */ createDevOrStagingUrlCache),\n/* harmony export */   getCookieSuffix: () => (/* binding */ getCookieSuffix),\n/* harmony export */   getSuffixedCookieName: () => (/* binding */ getSuffixedCookieName),\n/* harmony export */   isDevelopmentFromPublishableKey: () => (/* binding */ isDevelopmentFromPublishableKey),\n/* harmony export */   isDevelopmentFromSecretKey: () => (/* binding */ isDevelopmentFromSecretKey),\n/* harmony export */   isProductionFromPublishableKey: () => (/* binding */ isProductionFromPublishableKey),\n/* harmony export */   isProductionFromSecretKey: () => (/* binding */ isProductionFromSecretKey),\n/* harmony export */   isPublishableKey: () => (/* binding */ isPublishableKey),\n/* harmony export */   parsePublishableKey: () => (/* binding */ parsePublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n\n// src/keys.ts\nvar PUBLISHABLE_KEY_LIVE_PREFIX = \"pk_live_\";\nvar PUBLISHABLE_KEY_TEST_PREFIX = \"pk_test_\";\nvar PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\nfunction buildPublishableKey(frontendApi) {\n    const isDevKey = PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) || frontendApi.startsWith(\"clerk.\") && _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__.LEGACY_DEV_INSTANCE_SUFFIXES.some((s)=>frontendApi.endsWith(s));\n    const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n    return `${keyPrefix}${(0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(`${frontendApi}$`)}`;\n}\nfunction parsePublishableKey(key, options = {}) {\n    key = key || \"\";\n    if (!key || !isPublishableKey(key)) {\n        if (options.fatal && !key) {\n            throw new Error(\"Publishable key is missing. Ensure that your publishable key is correctly configured. Double-check your environment configuration for your keys, or access them here: https://dashboard.clerk.com/last-active?path=api-keys\");\n        }\n        if (options.fatal && !isPublishableKey(key)) {\n            throw new Error(\"Publishable key not valid.\");\n        }\n        return null;\n    }\n    const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? \"production\" : \"development\";\n    let frontendApi = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2]);\n    frontendApi = frontendApi.slice(0, -1);\n    if (options.proxyUrl) {\n        frontendApi = options.proxyUrl;\n    } else if (instanceType !== \"development\" && options.domain) {\n        frontendApi = `clerk.${options.domain}`;\n    }\n    return {\n        instanceType,\n        frontendApi\n    };\n}\nfunction isPublishableKey(key = \"\") {\n    try {\n        const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n        const hasValidFrontendApiPostfix = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2] || \"\").endsWith(\"$\");\n        return hasValidPrefix && hasValidFrontendApiPostfix;\n    } catch  {\n        return false;\n    }\n}\nfunction createDevOrStagingUrlCache() {\n    const devOrStagingUrlCache = /* @__PURE__ */ new Map();\n    return {\n        isDevOrStagingUrl: (url)=>{\n            if (!url) {\n                return false;\n            }\n            const hostname = typeof url === \"string\" ? url : url.hostname;\n            let res = devOrStagingUrlCache.get(hostname);\n            if (res === void 0) {\n                res = _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__.DEV_OR_STAGING_SUFFIXES.some((s)=>hostname.endsWith(s));\n                devOrStagingUrlCache.set(hostname, res);\n            }\n            return res;\n        }\n    };\n}\nfunction isDevelopmentFromPublishableKey(apiKey) {\n    return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"pk_test_\");\n}\nfunction isProductionFromPublishableKey(apiKey) {\n    return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"pk_live_\");\n}\nfunction isDevelopmentFromSecretKey(apiKey) {\n    return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"sk_test_\");\n}\nfunction isProductionFromSecretKey(apiKey) {\n    return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"sk_live_\");\n}\nasync function getCookieSuffix(publishableKey, subtle = globalThis.crypto.subtle) {\n    const data = new TextEncoder().encode(publishableKey);\n    const digest = await subtle.digest(\"sha-1\", data);\n    const stringDigest = String.fromCharCode(...new Uint8Array(digest));\n    return (0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(stringDigest).replace(/\\+/gi, \"-\").replace(/\\//gi, \"_\").substring(0, 8);\n}\nvar getSuffixedCookieName = (cookieName, cookieSuffix)=>{\n    return `${cookieName}_${cookieSuffix}`;\n};\n //# sourceMappingURL=chunk-G3VP5PJE.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: () => (/* binding */ CURRENT_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: () => (/* binding */ DEV_OR_STAGING_SUFFIXES),\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: () => (/* binding */ LEGACY_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   LOCAL_API_URL: () => (/* binding */ LOCAL_API_URL),\n/* harmony export */   LOCAL_ENV_SUFFIXES: () => (/* binding */ LOCAL_ENV_SUFFIXES),\n/* harmony export */   PROD_API_URL: () => (/* binding */ PROD_API_URL),\n/* harmony export */   STAGING_API_URL: () => (/* binding */ STAGING_API_URL),\n/* harmony export */   STAGING_ENV_SUFFIXES: () => (/* binding */ STAGING_ENV_SUFFIXES),\n/* harmony export */   iconImageUrl: () => (/* binding */ iconImageUrl)\n/* harmony export */ });\n// src/constants.ts\nvar LEGACY_DEV_INSTANCE_SUFFIXES = [\n    \".lcl.dev\",\n    \".lclstage.dev\",\n    \".lclclerk.com\"\n];\nvar CURRENT_DEV_INSTANCE_SUFFIXES = [\n    \".accounts.dev\",\n    \".accountsstage.dev\",\n    \".accounts.lclclerk.com\"\n];\nvar DEV_OR_STAGING_SUFFIXES = [\n    \".lcl.dev\",\n    \".stg.dev\",\n    \".lclstage.dev\",\n    \".stgstage.dev\",\n    \".dev.lclclerk.com\",\n    \".stg.lclclerk.com\",\n    \".accounts.lclclerk.com\",\n    \"accountsstage.dev\",\n    \"accounts.dev\"\n];\nvar LOCAL_ENV_SUFFIXES = [\n    \".lcl.dev\",\n    \"lclstage.dev\",\n    \".lclclerk.com\",\n    \".accounts.lclclerk.com\"\n];\nvar STAGING_ENV_SUFFIXES = [\n    \".accountsstage.dev\"\n];\nvar LOCAL_API_URL = \"https://api.lclclerk.com\";\nvar STAGING_API_URL = \"https://api.clerkstage.dev\";\nvar PROD_API_URL = \"https://api.clerk.com\";\nfunction iconImageUrl(id, format = \"svg\") {\n    return `https://img.clerk.com/static/${id}.${format}`;\n}\n //# sourceMappingURL=chunk-I6MTSTOF.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1JNk1UU1RPRi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsbUJBQW1CO0FBQ25CLElBQUlBLCtCQUErQjtJQUFDO0lBQVk7SUFBaUI7Q0FBZ0I7QUFDakYsSUFBSUMsZ0NBQWdDO0lBQUM7SUFBaUI7SUFBc0I7Q0FBeUI7QUFDckcsSUFBSUMsMEJBQTBCO0lBQzVCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNEO0FBQ0QsSUFBSUMscUJBQXFCO0lBQUM7SUFBWTtJQUFnQjtJQUFpQjtDQUF5QjtBQUNoRyxJQUFJQyx1QkFBdUI7SUFBQztDQUFxQjtBQUNqRCxJQUFJQyxnQkFBZ0I7QUFDcEIsSUFBSUMsa0JBQWtCO0FBQ3RCLElBQUlDLGVBQWU7QUFDbkIsU0FBU0MsYUFBYUMsRUFBRSxFQUFFQyxTQUFTLEtBQUs7SUFDdEMsT0FBTyxDQUFDLDZCQUE2QixFQUFFRCxHQUFHLENBQUMsRUFBRUMsT0FBTyxDQUFDO0FBQ3ZEO0FBWUUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1JNk1UU1RPRi5tanM/YWNjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29uc3RhbnRzLnRzXG52YXIgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyA9IFtcIi5sY2wuZGV2XCIsIFwiLmxjbHN0YWdlLmRldlwiLCBcIi5sY2xjbGVyay5jb21cIl07XG52YXIgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMgPSBbXCIuYWNjb3VudHMuZGV2XCIsIFwiLmFjY291bnRzc3RhZ2UuZGV2XCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBERVZfT1JfU1RBR0lOR19TVUZGSVhFUyA9IFtcbiAgXCIubGNsLmRldlwiLFxuICBcIi5zdGcuZGV2XCIsXG4gIFwiLmxjbHN0YWdlLmRldlwiLFxuICBcIi5zdGdzdGFnZS5kZXZcIixcbiAgXCIuZGV2LmxjbGNsZXJrLmNvbVwiLFxuICBcIi5zdGcubGNsY2xlcmsuY29tXCIsXG4gIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiLFxuICBcImFjY291bnRzc3RhZ2UuZGV2XCIsXG4gIFwiYWNjb3VudHMuZGV2XCJcbl07XG52YXIgTE9DQUxfRU5WX1NVRkZJWEVTID0gW1wiLmxjbC5kZXZcIiwgXCJsY2xzdGFnZS5kZXZcIiwgXCIubGNsY2xlcmsuY29tXCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBTVEFHSU5HX0VOVl9TVUZGSVhFUyA9IFtcIi5hY2NvdW50c3N0YWdlLmRldlwiXTtcbnZhciBMT0NBTF9BUElfVVJMID0gXCJodHRwczovL2FwaS5sY2xjbGVyay5jb21cIjtcbnZhciBTVEFHSU5HX0FQSV9VUkwgPSBcImh0dHBzOi8vYXBpLmNsZXJrc3RhZ2UuZGV2XCI7XG52YXIgUFJPRF9BUElfVVJMID0gXCJodHRwczovL2FwaS5jbGVyay5jb21cIjtcbmZ1bmN0aW9uIGljb25JbWFnZVVybChpZCwgZm9ybWF0ID0gXCJzdmdcIikge1xuICByZXR1cm4gYGh0dHBzOi8vaW1nLmNsZXJrLmNvbS9zdGF0aWMvJHtpZH0uJHtmb3JtYXR9YDtcbn1cblxuZXhwb3J0IHtcbiAgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFNUQUdJTkdfRU5WX1NVRkZJWEVTLFxuICBMT0NBTF9BUElfVVJMLFxuICBTVEFHSU5HX0FQSV9VUkwsXG4gIFBST0RfQVBJX1VSTCxcbiAgaWNvbkltYWdlVXJsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstSTZNVFNUT0YubWpzLm1hcCJdLCJuYW1lcyI6WyJMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTIiwiQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMiLCJERVZfT1JfU1RBR0lOR19TVUZGSVhFUyIsIkxPQ0FMX0VOVl9TVUZGSVhFUyIsIlNUQUdJTkdfRU5WX1NVRkZJWEVTIiwiTE9DQUxfQVBJX1VSTCIsIlNUQUdJTkdfQVBJX1VSTCIsIlBST0RfQVBJX1VSTCIsImljb25JbWFnZVVybCIsImlkIiwiZm9ybWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* binding */ addClerkPrefix),\n/* harmony export */   cleanDoubleSlashes: () => (/* binding */ cleanDoubleSlashes),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* binding */ getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* binding */ getScriptUrl),\n/* harmony export */   hasLeadingSlash: () => (/* binding */ hasLeadingSlash),\n/* harmony export */   hasTrailingSlash: () => (/* binding */ hasTrailingSlash),\n/* harmony export */   isAbsoluteUrl: () => (/* binding */ isAbsoluteUrl),\n/* harmony export */   isCurrentDevAccountPortalOrigin: () => (/* binding */ isCurrentDevAccountPortalOrigin),\n/* harmony export */   isLegacyDevAccountPortalOrigin: () => (/* binding */ isLegacyDevAccountPortalOrigin),\n/* harmony export */   isNonEmptyURL: () => (/* binding */ isNonEmptyURL),\n/* harmony export */   joinURL: () => (/* binding */ joinURL),\n/* harmony export */   parseSearchParams: () => (/* binding */ parseSearchParams),\n/* harmony export */   stripScheme: () => (/* binding */ stripScheme),\n/* harmony export */   withLeadingSlash: () => (/* binding */ withLeadingSlash),\n/* harmony export */   withTrailingSlash: () => (/* binding */ withTrailingSlash),\n/* harmony export */   withoutLeadingSlash: () => (/* binding */ withoutLeadingSlash),\n/* harmony export */   withoutTrailingSlash: () => (/* binding */ withoutTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-3TMSNP4L.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n// src/url.ts\nfunction parseSearchParams(queryString = \"\") {\n    if (queryString.startsWith(\"?\")) {\n        queryString = queryString.slice(1);\n    }\n    return new URLSearchParams(queryString);\n}\nfunction stripScheme(url = \"\") {\n    return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\nfunction addClerkPrefix(str) {\n    if (!str) {\n        return \"\";\n    }\n    let regex;\n    if (str.match(/^(clerk\\.)+\\w*$/)) {\n        regex = /(clerk\\.)*(?=clerk\\.)/;\n    } else if (str.match(/\\.clerk.accounts/)) {\n        return str;\n    } else {\n        regex = /^(clerk\\.)*/gi;\n    }\n    const stripped = str.replace(regex, \"\");\n    return `clerk.${stripped}`;\n}\nvar getClerkJsMajorVersionOrTag = (frontendApi, version)=>{\n    if (!version && (0,_chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_0__.isStaging)(frontendApi)) {\n        return \"canary\";\n    }\n    if (!version) {\n        return \"latest\";\n    }\n    return version.split(\".\")[0] || \"latest\";\n};\nvar getScriptUrl = (frontendApi, { clerkJSVersion })=>{\n    const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n    const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n    return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\nfunction isLegacyDevAccountPortalOrigin(host) {\n    return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LEGACY_DEV_INSTANCE_SUFFIXES.some((legacyDevSuffix)=>{\n        return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n    });\n}\nfunction isCurrentDevAccountPortalOrigin(host) {\n    return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.CURRENT_DEV_INSTANCE_SUFFIXES.some((currentDevSuffix)=>{\n        return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n    });\n}\nvar TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n    if (!respectQueryAndFragment) {\n        return input.endsWith(\"/\");\n    }\n    return TRAILING_SLASH_RE.test(input);\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n    if (!respectQueryAndFragment) {\n        return input.endsWith(\"/\") ? input : input + \"/\";\n    }\n    if (hasTrailingSlash(input, true)) {\n        return input || \"/\";\n    }\n    let path = input;\n    let fragment = \"\";\n    const fragmentIndex = input.indexOf(\"#\");\n    if (fragmentIndex >= 0) {\n        path = input.slice(0, fragmentIndex);\n        fragment = input.slice(fragmentIndex);\n        if (!path) {\n            return fragment;\n        }\n    }\n    const [s0, ...s] = path.split(\"?\");\n    return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n    if (!respectQueryAndFragment) {\n        return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n    }\n    if (!hasTrailingSlash(input, true)) {\n        return input || \"/\";\n    }\n    let path = input;\n    let fragment = \"\";\n    const fragmentIndex = input.indexOf(\"#\");\n    if (fragmentIndex >= 0) {\n        path = input.slice(0, fragmentIndex);\n        fragment = input.slice(fragmentIndex);\n    }\n    const [s0, ...s] = path.split(\"?\");\n    return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n    return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n    return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n    return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n    return input.split(\"://\").map((string_)=>string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction isNonEmptyURL(url) {\n    return url && url !== \"/\";\n}\nvar JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction joinURL(base, ...input) {\n    let url = base || \"\";\n    for (const segment of input.filter((url2)=>isNonEmptyURL(url2))){\n        if (url) {\n            const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n            url = withTrailingSlash(url) + _segment;\n        } else {\n            url = segment;\n        }\n    }\n    return url;\n}\nvar ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nvar isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);\n //# sourceMappingURL=chunk-IFTVZ2LQ.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1JRlRWWjJMUS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU4QjtBQUlBO0FBRTlCLGFBQWE7QUFDYixTQUFTRyxrQkFBa0JDLGNBQWMsRUFBRTtJQUN6QyxJQUFJQSxZQUFZQyxVQUFVLENBQUMsTUFBTTtRQUMvQkQsY0FBY0EsWUFBWUUsS0FBSyxDQUFDO0lBQ2xDO0lBQ0EsT0FBTyxJQUFJQyxnQkFBZ0JIO0FBQzdCO0FBQ0EsU0FBU0ksWUFBWUMsTUFBTSxFQUFFO0lBQzNCLE9BQU8sQ0FBQ0EsT0FBTyxFQUFDLEVBQUdDLE9BQU8sQ0FBQyxZQUFZO0FBQ3pDO0FBQ0EsU0FBU0MsZUFBZUMsR0FBRztJQUN6QixJQUFJLENBQUNBLEtBQUs7UUFDUixPQUFPO0lBQ1Q7SUFDQSxJQUFJQztJQUNKLElBQUlELElBQUlFLEtBQUssQ0FBQyxvQkFBb0I7UUFDaENELFFBQVE7SUFDVixPQUFPLElBQUlELElBQUlFLEtBQUssQ0FBQyxxQkFBcUI7UUFDeEMsT0FBT0Y7SUFDVCxPQUFPO1FBQ0xDLFFBQVE7SUFDVjtJQUNBLE1BQU1FLFdBQVdILElBQUlGLE9BQU8sQ0FBQ0csT0FBTztJQUNwQyxPQUFPLENBQUMsTUFBTSxFQUFFRSxTQUFTLENBQUM7QUFDNUI7QUFDQSxJQUFJQyw4QkFBOEIsQ0FBQ0MsYUFBYUM7SUFDOUMsSUFBSSxDQUFDQSxXQUFXbEIsOERBQVNBLENBQUNpQixjQUFjO1FBQ3RDLE9BQU87SUFDVDtJQUNBLElBQUksQ0FBQ0MsU0FBUztRQUNaLE9BQU87SUFDVDtJQUNBLE9BQU9BLFFBQVFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJO0FBQ2xDO0FBQ0EsSUFBSUMsZUFBZSxDQUFDSCxhQUFhLEVBQUVJLGNBQWMsRUFBRTtJQUNqRCxNQUFNQyxzQkFBc0JMLFlBQVlQLE9BQU8sQ0FBQyxpQkFBaUI7SUFDakUsTUFBTWEsUUFBUVAsNEJBQTRCQyxhQUFhSTtJQUN2RCxPQUFPLENBQUMsUUFBUSxFQUFFQyxvQkFBb0IscUJBQXFCLEVBQUVELGtCQUFrQkUsTUFBTSxzQkFBc0IsQ0FBQztBQUM5RztBQUNBLFNBQVNDLCtCQUErQkMsSUFBSTtJQUMxQyxPQUFPdkIsNkVBQTRCQSxDQUFDd0IsSUFBSSxDQUFDLENBQUNDO1FBQ3hDLE9BQU9GLEtBQUtwQixVQUFVLENBQUMsZ0JBQWdCb0IsS0FBS0csUUFBUSxDQUFDRDtJQUN2RDtBQUNGO0FBQ0EsU0FBU0UsZ0NBQWdDSixJQUFJO0lBQzNDLE9BQU94Qiw4RUFBNkJBLENBQUN5QixJQUFJLENBQUMsQ0FBQ0k7UUFDekMsT0FBT0wsS0FBS0csUUFBUSxDQUFDRSxxQkFBcUIsQ0FBQ0wsS0FBS0csUUFBUSxDQUFDLFdBQVdFO0lBQ3RFO0FBQ0Y7QUFDQSxJQUFJQyxvQkFBb0I7QUFDeEIsU0FBU0MsaUJBQWlCQyxRQUFRLEVBQUUsRUFBRUMsdUJBQXVCO0lBQzNELElBQUksQ0FBQ0EseUJBQXlCO1FBQzVCLE9BQU9ELE1BQU1MLFFBQVEsQ0FBQztJQUN4QjtJQUNBLE9BQU9HLGtCQUFrQkksSUFBSSxDQUFDRjtBQUNoQztBQUNBLFNBQVNHLGtCQUFrQkgsUUFBUSxFQUFFLEVBQUVDLHVCQUF1QjtJQUM1RCxJQUFJLENBQUNBLHlCQUF5QjtRQUM1QixPQUFPRCxNQUFNTCxRQUFRLENBQUMsT0FBT0ssUUFBUUEsUUFBUTtJQUMvQztJQUNBLElBQUlELGlCQUFpQkMsT0FBTyxPQUFPO1FBQ2pDLE9BQU9BLFNBQVM7SUFDbEI7SUFDQSxJQUFJSSxPQUFPSjtJQUNYLElBQUlLLFdBQVc7SUFDZixNQUFNQyxnQkFBZ0JOLE1BQU1PLE9BQU8sQ0FBQztJQUNwQyxJQUFJRCxpQkFBaUIsR0FBRztRQUN0QkYsT0FBT0osTUFBTTNCLEtBQUssQ0FBQyxHQUFHaUM7UUFDdEJELFdBQVdMLE1BQU0zQixLQUFLLENBQUNpQztRQUN2QixJQUFJLENBQUNGLE1BQU07WUFDVCxPQUFPQztRQUNUO0lBQ0Y7SUFDQSxNQUFNLENBQUNHLElBQUksR0FBR0MsRUFBRSxHQUFHTCxLQUFLbEIsS0FBSyxDQUFDO0lBQzlCLE9BQU9zQixLQUFLLE1BQU9DLENBQUFBLEVBQUVDLE1BQU0sR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFRCxFQUFFRSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBQyxJQUFLTjtBQUM5RDtBQUNBLFNBQVNPLHFCQUFxQlosUUFBUSxFQUFFLEVBQUVDLHVCQUF1QjtJQUMvRCxJQUFJLENBQUNBLHlCQUF5QjtRQUM1QixPQUFPLENBQUNGLGlCQUFpQkMsU0FBU0EsTUFBTTNCLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSzJCLEtBQUksS0FBTTtJQUNuRTtJQUNBLElBQUksQ0FBQ0QsaUJBQWlCQyxPQUFPLE9BQU87UUFDbEMsT0FBT0EsU0FBUztJQUNsQjtJQUNBLElBQUlJLE9BQU9KO0lBQ1gsSUFBSUssV0FBVztJQUNmLE1BQU1DLGdCQUFnQk4sTUFBTU8sT0FBTyxDQUFDO0lBQ3BDLElBQUlELGlCQUFpQixHQUFHO1FBQ3RCRixPQUFPSixNQUFNM0IsS0FBSyxDQUFDLEdBQUdpQztRQUN0QkQsV0FBV0wsTUFBTTNCLEtBQUssQ0FBQ2lDO0lBQ3pCO0lBQ0EsTUFBTSxDQUFDRSxJQUFJLEdBQUdDLEVBQUUsR0FBR0wsS0FBS2xCLEtBQUssQ0FBQztJQUM5QixPQUFPLENBQUNzQixHQUFHbkMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUUsSUFBTW9DLENBQUFBLEVBQUVDLE1BQU0sR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFRCxFQUFFRSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBQyxJQUFLTjtBQUM5RTtBQUNBLFNBQVNRLGdCQUFnQmIsUUFBUSxFQUFFO0lBQ2pDLE9BQU9BLE1BQU01QixVQUFVLENBQUM7QUFDMUI7QUFDQSxTQUFTMEMsb0JBQW9CZCxRQUFRLEVBQUU7SUFDckMsT0FBTyxDQUFDYSxnQkFBZ0JiLFNBQVNBLE1BQU0zQixLQUFLLENBQUMsS0FBSzJCLEtBQUksS0FBTTtBQUM5RDtBQUNBLFNBQVNlLGlCQUFpQmYsUUFBUSxFQUFFO0lBQ2xDLE9BQU9hLGdCQUFnQmIsU0FBU0EsUUFBUSxNQUFNQTtBQUNoRDtBQUNBLFNBQVNnQixtQkFBbUJoQixRQUFRLEVBQUU7SUFDcEMsT0FBT0EsTUFBTWQsS0FBSyxDQUFDLE9BQU8rQixHQUFHLENBQUMsQ0FBQ0MsVUFBWUEsUUFBUXpDLE9BQU8sQ0FBQyxXQUFXLE1BQU1rQyxJQUFJLENBQUM7QUFDbkY7QUFDQSxTQUFTUSxjQUFjM0MsR0FBRztJQUN4QixPQUFPQSxPQUFPQSxRQUFRO0FBQ3hCO0FBQ0EsSUFBSTRDLHdCQUF3QjtBQUM1QixTQUFTQyxRQUFRQyxJQUFJLEVBQUUsR0FBR3RCLEtBQUs7SUFDN0IsSUFBSXhCLE1BQU04QyxRQUFRO0lBQ2xCLEtBQUssTUFBTUMsV0FBV3ZCLE1BQU13QixNQUFNLENBQUMsQ0FBQ0MsT0FBU04sY0FBY00sT0FBUTtRQUNqRSxJQUFJakQsS0FBSztZQUNQLE1BQU1rRCxXQUFXSCxRQUFROUMsT0FBTyxDQUFDMkMsdUJBQXVCO1lBQ3hENUMsTUFBTTJCLGtCQUFrQjNCLE9BQU9rRDtRQUNqQyxPQUFPO1lBQ0xsRCxNQUFNK0M7UUFDUjtJQUNGO0lBQ0EsT0FBTy9DO0FBQ1Q7QUFDQSxJQUFJbUQscUJBQXFCO0FBQ3pCLElBQUlDLGdCQUFnQixDQUFDcEQsTUFBUW1ELG1CQUFtQnpCLElBQUksQ0FBQzFCO0FBb0JuRCxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUlGVFZaMkxRLm1qcz8xNjMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzU3RhZ2luZ1xufSBmcm9tIFwiLi9jaHVuay0zVE1TTlA0TC5tanNcIjtcbmltcG9ydCB7XG4gIENVUlJFTlRfREVWX0lOU1RBTkNFX1NVRkZJWEVTLFxuICBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTXG59IGZyb20gXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuXG4vLyBzcmMvdXJsLnRzXG5mdW5jdGlvbiBwYXJzZVNlYXJjaFBhcmFtcyhxdWVyeVN0cmluZyA9IFwiXCIpIHtcbiAgaWYgKHF1ZXJ5U3RyaW5nLnN0YXJ0c1dpdGgoXCI/XCIpKSB7XG4gICAgcXVlcnlTdHJpbmcgPSBxdWVyeVN0cmluZy5zbGljZSgxKTtcbiAgfVxuICByZXR1cm4gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeVN0cmluZyk7XG59XG5mdW5jdGlvbiBzdHJpcFNjaGVtZSh1cmwgPSBcIlwiKSB7XG4gIHJldHVybiAodXJsIHx8IFwiXCIpLnJlcGxhY2UoL14uKzpcXC9cXC8vLCBcIlwiKTtcbn1cbmZ1bmN0aW9uIGFkZENsZXJrUHJlZml4KHN0cikge1xuICBpZiAoIXN0cikge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIGxldCByZWdleDtcbiAgaWYgKHN0ci5tYXRjaCgvXihjbGVya1xcLikrXFx3KiQvKSkge1xuICAgIHJlZ2V4ID0gLyhjbGVya1xcLikqKD89Y2xlcmtcXC4pLztcbiAgfSBlbHNlIGlmIChzdHIubWF0Y2goL1xcLmNsZXJrLmFjY291bnRzLykpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9IGVsc2Uge1xuICAgIHJlZ2V4ID0gL14oY2xlcmtcXC4pKi9naTtcbiAgfVxuICBjb25zdCBzdHJpcHBlZCA9IHN0ci5yZXBsYWNlKHJlZ2V4LCBcIlwiKTtcbiAgcmV0dXJuIGBjbGVyay4ke3N0cmlwcGVkfWA7XG59XG52YXIgZ2V0Q2xlcmtKc01ham9yVmVyc2lvbk9yVGFnID0gKGZyb250ZW5kQXBpLCB2ZXJzaW9uKSA9PiB7XG4gIGlmICghdmVyc2lvbiAmJiBpc1N0YWdpbmcoZnJvbnRlbmRBcGkpKSB7XG4gICAgcmV0dXJuIFwiY2FuYXJ5XCI7XG4gIH1cbiAgaWYgKCF2ZXJzaW9uKSB7XG4gICAgcmV0dXJuIFwibGF0ZXN0XCI7XG4gIH1cbiAgcmV0dXJuIHZlcnNpb24uc3BsaXQoXCIuXCIpWzBdIHx8IFwibGF0ZXN0XCI7XG59O1xudmFyIGdldFNjcmlwdFVybCA9IChmcm9udGVuZEFwaSwgeyBjbGVya0pTVmVyc2lvbiB9KSA9PiB7XG4gIGNvbnN0IG5vU2NoZW1lRnJvbnRlbmRBcGkgPSBmcm9udGVuZEFwaS5yZXBsYWNlKC9odHRwKHMpPzpcXC9cXC8vLCBcIlwiKTtcbiAgY29uc3QgbWFqb3IgPSBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcoZnJvbnRlbmRBcGksIGNsZXJrSlNWZXJzaW9uKTtcbiAgcmV0dXJuIGBodHRwczovLyR7bm9TY2hlbWVGcm9udGVuZEFwaX0vbnBtL0BjbGVyay9jbGVyay1qc0Ake2NsZXJrSlNWZXJzaW9uIHx8IG1ham9yfS9kaXN0L2NsZXJrLmJyb3dzZXIuanNgO1xufTtcbmZ1bmN0aW9uIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbihob3N0KSB7XG4gIHJldHVybiBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLnNvbWUoKGxlZ2FjeURldlN1ZmZpeCkgPT4ge1xuICAgIHJldHVybiBob3N0LnN0YXJ0c1dpdGgoXCJhY2NvdW50cy5cIikgJiYgaG9zdC5lbmRzV2l0aChsZWdhY3lEZXZTdWZmaXgpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4oaG9zdCkge1xuICByZXR1cm4gQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMuc29tZSgoY3VycmVudERldlN1ZmZpeCkgPT4ge1xuICAgIHJldHVybiBob3N0LmVuZHNXaXRoKGN1cnJlbnREZXZTdWZmaXgpICYmICFob3N0LmVuZHNXaXRoKFwiLmNsZXJrXCIgKyBjdXJyZW50RGV2U3VmZml4KTtcbiAgfSk7XG59XG52YXIgVFJBSUxJTkdfU0xBU0hfUkUgPSAvXFwvJHxcXC9cXD98XFwvIy87XG5mdW5jdGlvbiBoYXNUcmFpbGluZ1NsYXNoKGlucHV0ID0gXCJcIiwgcmVzcGVjdFF1ZXJ5QW5kRnJhZ21lbnQpIHtcbiAgaWYgKCFyZXNwZWN0UXVlcnlBbmRGcmFnbWVudCkge1xuICAgIHJldHVybiBpbnB1dC5lbmRzV2l0aChcIi9cIik7XG4gIH1cbiAgcmV0dXJuIFRSQUlMSU5HX1NMQVNIX1JFLnRlc3QoaW5wdXQpO1xufVxuZnVuY3Rpb24gd2l0aFRyYWlsaW5nU2xhc2goaW5wdXQgPSBcIlwiLCByZXNwZWN0UXVlcnlBbmRGcmFnbWVudCkge1xuICBpZiAoIXJlc3BlY3RRdWVyeUFuZEZyYWdtZW50KSB7XG4gICAgcmV0dXJuIGlucHV0LmVuZHNXaXRoKFwiL1wiKSA/IGlucHV0IDogaW5wdXQgKyBcIi9cIjtcbiAgfVxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaChpbnB1dCwgdHJ1ZSkpIHtcbiAgICByZXR1cm4gaW5wdXQgfHwgXCIvXCI7XG4gIH1cbiAgbGV0IHBhdGggPSBpbnB1dDtcbiAgbGV0IGZyYWdtZW50ID0gXCJcIjtcbiAgY29uc3QgZnJhZ21lbnRJbmRleCA9IGlucHV0LmluZGV4T2YoXCIjXCIpO1xuICBpZiAoZnJhZ21lbnRJbmRleCA+PSAwKSB7XG4gICAgcGF0aCA9IGlucHV0LnNsaWNlKDAsIGZyYWdtZW50SW5kZXgpO1xuICAgIGZyYWdtZW50ID0gaW5wdXQuc2xpY2UoZnJhZ21lbnRJbmRleCk7XG4gICAgaWYgKCFwYXRoKSB7XG4gICAgICByZXR1cm4gZnJhZ21lbnQ7XG4gICAgfVxuICB9XG4gIGNvbnN0IFtzMCwgLi4uc10gPSBwYXRoLnNwbGl0KFwiP1wiKTtcbiAgcmV0dXJuIHMwICsgXCIvXCIgKyAocy5sZW5ndGggPiAwID8gYD8ke3Muam9pbihcIj9cIil9YCA6IFwiXCIpICsgZnJhZ21lbnQ7XG59XG5mdW5jdGlvbiB3aXRob3V0VHJhaWxpbmdTbGFzaChpbnB1dCA9IFwiXCIsIHJlc3BlY3RRdWVyeUFuZEZyYWdtZW50KSB7XG4gIGlmICghcmVzcGVjdFF1ZXJ5QW5kRnJhZ21lbnQpIHtcbiAgICByZXR1cm4gKGhhc1RyYWlsaW5nU2xhc2goaW5wdXQpID8gaW5wdXQuc2xpY2UoMCwgLTEpIDogaW5wdXQpIHx8IFwiL1wiO1xuICB9XG4gIGlmICghaGFzVHJhaWxpbmdTbGFzaChpbnB1dCwgdHJ1ZSkpIHtcbiAgICByZXR1cm4gaW5wdXQgfHwgXCIvXCI7XG4gIH1cbiAgbGV0IHBhdGggPSBpbnB1dDtcbiAgbGV0IGZyYWdtZW50ID0gXCJcIjtcbiAgY29uc3QgZnJhZ21lbnRJbmRleCA9IGlucHV0LmluZGV4T2YoXCIjXCIpO1xuICBpZiAoZnJhZ21lbnRJbmRleCA+PSAwKSB7XG4gICAgcGF0aCA9IGlucHV0LnNsaWNlKDAsIGZyYWdtZW50SW5kZXgpO1xuICAgIGZyYWdtZW50ID0gaW5wdXQuc2xpY2UoZnJhZ21lbnRJbmRleCk7XG4gIH1cbiAgY29uc3QgW3MwLCAuLi5zXSA9IHBhdGguc3BsaXQoXCI/XCIpO1xuICByZXR1cm4gKHMwLnNsaWNlKDAsIC0xKSB8fCBcIi9cIikgKyAocy5sZW5ndGggPiAwID8gYD8ke3Muam9pbihcIj9cIil9YCA6IFwiXCIpICsgZnJhZ21lbnQ7XG59XG5mdW5jdGlvbiBoYXNMZWFkaW5nU2xhc2goaW5wdXQgPSBcIlwiKSB7XG4gIHJldHVybiBpbnB1dC5zdGFydHNXaXRoKFwiL1wiKTtcbn1cbmZ1bmN0aW9uIHdpdGhvdXRMZWFkaW5nU2xhc2goaW5wdXQgPSBcIlwiKSB7XG4gIHJldHVybiAoaGFzTGVhZGluZ1NsYXNoKGlucHV0KSA/IGlucHV0LnNsaWNlKDEpIDogaW5wdXQpIHx8IFwiL1wiO1xufVxuZnVuY3Rpb24gd2l0aExlYWRpbmdTbGFzaChpbnB1dCA9IFwiXCIpIHtcbiAgcmV0dXJuIGhhc0xlYWRpbmdTbGFzaChpbnB1dCkgPyBpbnB1dCA6IFwiL1wiICsgaW5wdXQ7XG59XG5mdW5jdGlvbiBjbGVhbkRvdWJsZVNsYXNoZXMoaW5wdXQgPSBcIlwiKSB7XG4gIHJldHVybiBpbnB1dC5zcGxpdChcIjovL1wiKS5tYXAoKHN0cmluZ18pID0+IHN0cmluZ18ucmVwbGFjZSgvXFwvezIsfS9nLCBcIi9cIikpLmpvaW4oXCI6Ly9cIik7XG59XG5mdW5jdGlvbiBpc05vbkVtcHR5VVJMKHVybCkge1xuICByZXR1cm4gdXJsICYmIHVybCAhPT0gXCIvXCI7XG59XG52YXIgSk9JTl9MRUFESU5HX1NMQVNIX1JFID0gL15cXC4/XFwvLztcbmZ1bmN0aW9uIGpvaW5VUkwoYmFzZSwgLi4uaW5wdXQpIHtcbiAgbGV0IHVybCA9IGJhc2UgfHwgXCJcIjtcbiAgZm9yIChjb25zdCBzZWdtZW50IG9mIGlucHV0LmZpbHRlcigodXJsMikgPT4gaXNOb25FbXB0eVVSTCh1cmwyKSkpIHtcbiAgICBpZiAodXJsKSB7XG4gICAgICBjb25zdCBfc2VnbWVudCA9IHNlZ21lbnQucmVwbGFjZShKT0lOX0xFQURJTkdfU0xBU0hfUkUsIFwiXCIpO1xuICAgICAgdXJsID0gd2l0aFRyYWlsaW5nU2xhc2godXJsKSArIF9zZWdtZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICB1cmwgPSBzZWdtZW50O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdXJsO1xufVxudmFyIEFCU09MVVRFX1VSTF9SRUdFWCA9IC9eW2EtekEtWl1bYS16QS1aXFxkK1xcLS5dKj86LztcbnZhciBpc0Fic29sdXRlVXJsID0gKHVybCkgPT4gQUJTT0xVVEVfVVJMX1JFR0VYLnRlc3QodXJsKTtcblxuZXhwb3J0IHtcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lLFxuICBhZGRDbGVya1ByZWZpeCxcbiAgZ2V0Q2xlcmtKc01ham9yVmVyc2lvbk9yVGFnLFxuICBnZXRTY3JpcHRVcmwsXG4gIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaGFzVHJhaWxpbmdTbGFzaCxcbiAgd2l0aFRyYWlsaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoLFxuICBoYXNMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRMZWFkaW5nU2xhc2gsXG4gIHdpdGhMZWFkaW5nU2xhc2gsXG4gIGNsZWFuRG91YmxlU2xhc2hlcyxcbiAgaXNOb25FbXB0eVVSTCxcbiAgam9pblVSTCxcbiAgaXNBYnNvbHV0ZVVybFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUlGVFZaMkxRLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNTdGFnaW5nIiwiQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMiLCJMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTIiwicGFyc2VTZWFyY2hQYXJhbXMiLCJxdWVyeVN0cmluZyIsInN0YXJ0c1dpdGgiLCJzbGljZSIsIlVSTFNlYXJjaFBhcmFtcyIsInN0cmlwU2NoZW1lIiwidXJsIiwicmVwbGFjZSIsImFkZENsZXJrUHJlZml4Iiwic3RyIiwicmVnZXgiLCJtYXRjaCIsInN0cmlwcGVkIiwiZ2V0Q2xlcmtKc01ham9yVmVyc2lvbk9yVGFnIiwiZnJvbnRlbmRBcGkiLCJ2ZXJzaW9uIiwic3BsaXQiLCJnZXRTY3JpcHRVcmwiLCJjbGVya0pTVmVyc2lvbiIsIm5vU2NoZW1lRnJvbnRlbmRBcGkiLCJtYWpvciIsImlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbiIsImhvc3QiLCJzb21lIiwibGVnYWN5RGV2U3VmZml4IiwiZW5kc1dpdGgiLCJpc0N1cnJlbnREZXZBY2NvdW50UG9ydGFsT3JpZ2luIiwiY3VycmVudERldlN1ZmZpeCIsIlRSQUlMSU5HX1NMQVNIX1JFIiwiaGFzVHJhaWxpbmdTbGFzaCIsImlucHV0IiwicmVzcGVjdFF1ZXJ5QW5kRnJhZ21lbnQiLCJ0ZXN0Iiwid2l0aFRyYWlsaW5nU2xhc2giLCJwYXRoIiwiZnJhZ21lbnQiLCJmcmFnbWVudEluZGV4IiwiaW5kZXhPZiIsInMwIiwicyIsImxlbmd0aCIsImpvaW4iLCJ3aXRob3V0VHJhaWxpbmdTbGFzaCIsImhhc0xlYWRpbmdTbGFzaCIsIndpdGhvdXRMZWFkaW5nU2xhc2giLCJ3aXRoTGVhZGluZ1NsYXNoIiwiY2xlYW5Eb3VibGVTbGFzaGVzIiwibWFwIiwic3RyaW5nXyIsImlzTm9uRW1wdHlVUkwiLCJKT0lOX0xFQURJTkdfU0xBU0hfUkUiLCJqb2luVVJMIiwiYmFzZSIsInNlZ21lbnQiLCJmaWx0ZXIiLCJ1cmwyIiwiX3NlZ21lbnQiLCJBQlNPTFVURV9VUkxfUkVHRVgiLCJpc0Fic29sdXRlVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   pathToRegexp: () => (/* binding */ pathToRegexp)\n/* harmony export */ });\n// src/compiled/path-to-regexp/index.js\nfunction _(r) {\n    for(var n = [], e = 0; e < r.length;){\n        var a = r[e];\n        if (a === \"*\" || a === \"+\" || a === \"?\") {\n            n.push({\n                type: \"MODIFIER\",\n                index: e,\n                value: r[e++]\n            });\n            continue;\n        }\n        if (a === \"\\\\\") {\n            n.push({\n                type: \"ESCAPED_CHAR\",\n                index: e++,\n                value: r[e++]\n            });\n            continue;\n        }\n        if (a === \"{\") {\n            n.push({\n                type: \"OPEN\",\n                index: e,\n                value: r[e++]\n            });\n            continue;\n        }\n        if (a === \"}\") {\n            n.push({\n                type: \"CLOSE\",\n                index: e,\n                value: r[e++]\n            });\n            continue;\n        }\n        if (a === \":\") {\n            for(var u = \"\", t = e + 1; t < r.length;){\n                var c = r.charCodeAt(t);\n                if (c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || c === 95) {\n                    u += r[t++];\n                    continue;\n                }\n                break;\n            }\n            if (!u) throw new TypeError(\"Missing parameter name at \".concat(e));\n            n.push({\n                type: \"NAME\",\n                index: e,\n                value: u\n            }), e = t;\n            continue;\n        }\n        if (a === \"(\") {\n            var o = 1, m = \"\", t = e + 1;\n            if (r[t] === \"?\") throw new TypeError('Pattern cannot start with \"?\" at '.concat(t));\n            for(; t < r.length;){\n                if (r[t] === \"\\\\\") {\n                    m += r[t++] + r[t++];\n                    continue;\n                }\n                if (r[t] === \")\") {\n                    if (o--, o === 0) {\n                        t++;\n                        break;\n                    }\n                } else if (r[t] === \"(\" && (o++, r[t + 1] !== \"?\")) throw new TypeError(\"Capturing groups are not allowed at \".concat(t));\n                m += r[t++];\n            }\n            if (o) throw new TypeError(\"Unbalanced pattern at \".concat(e));\n            if (!m) throw new TypeError(\"Missing pattern at \".concat(e));\n            n.push({\n                type: \"PATTERN\",\n                index: e,\n                value: m\n            }), e = t;\n            continue;\n        }\n        n.push({\n            type: \"CHAR\",\n            index: e,\n            value: r[e++]\n        });\n    }\n    return n.push({\n        type: \"END\",\n        index: e,\n        value: \"\"\n    }), n;\n}\nfunction F(r, n) {\n    n === void 0 && (n = {});\n    for(var e = _(r), a = n.prefixes, u = a === void 0 ? \"./\" : a, t = n.delimiter, c = t === void 0 ? \"/#?\" : t, o = [], m = 0, h = 0, p = \"\", f = function(l) {\n        if (h < e.length && e[h].type === l) return e[h++].value;\n    }, w = function(l) {\n        var v = f(l);\n        if (v !== void 0) return v;\n        var E = e[h], N = E.type, S = E.index;\n        throw new TypeError(\"Unexpected \".concat(N, \" at \").concat(S, \", expected \").concat(l));\n    }, d = function() {\n        for(var l = \"\", v; v = f(\"CHAR\") || f(\"ESCAPED_CHAR\");)l += v;\n        return l;\n    }, M = function(l) {\n        for(var v = 0, E = c; v < E.length; v++){\n            var N = E[v];\n            if (l.indexOf(N) > -1) return true;\n        }\n        return false;\n    }, A = function(l) {\n        var v = o[o.length - 1], E = l || (v && typeof v == \"string\" ? v : \"\");\n        if (v && !E) throw new TypeError('Must have text between two parameters, missing text after \"'.concat(v.name, '\"'));\n        return !E || M(E) ? \"[^\".concat(s(c), \"]+?\") : \"(?:(?!\".concat(s(E), \")[^\").concat(s(c), \"])+?\");\n    }; h < e.length;){\n        var T = f(\"CHAR\"), x = f(\"NAME\"), C = f(\"PATTERN\");\n        if (x || C) {\n            var g = T || \"\";\n            u.indexOf(g) === -1 && (p += g, g = \"\"), p && (o.push(p), p = \"\"), o.push({\n                name: x || m++,\n                prefix: g,\n                suffix: \"\",\n                pattern: C || A(g),\n                modifier: f(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var i = T || f(\"ESCAPED_CHAR\");\n        if (i) {\n            p += i;\n            continue;\n        }\n        p && (o.push(p), p = \"\");\n        var R = f(\"OPEN\");\n        if (R) {\n            var g = d(), y = f(\"NAME\") || \"\", O = f(\"PATTERN\") || \"\", b = d();\n            w(\"CLOSE\"), o.push({\n                name: y || (O ? m++ : \"\"),\n                pattern: y && !O ? A(g) : O,\n                prefix: g,\n                suffix: b,\n                modifier: f(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        w(\"END\");\n    }\n    return o;\n}\nfunction H(r, n) {\n    var e = [], a = P(r, e, n);\n    return I(a, e, n);\n}\nfunction I(r, n, e) {\n    e === void 0 && (e = {});\n    var a = e.decode, u = a === void 0 ? function(t) {\n        return t;\n    } : a;\n    return function(t) {\n        var c = r.exec(t);\n        if (!c) return false;\n        for(var o = c[0], m = c.index, h = /* @__PURE__ */ Object.create(null), p = function(w) {\n            if (c[w] === void 0) return \"continue\";\n            var d = n[w - 1];\n            d.modifier === \"*\" || d.modifier === \"+\" ? h[d.name] = c[w].split(d.prefix + d.suffix).map(function(M) {\n                return u(M, d);\n            }) : h[d.name] = u(c[w], d);\n        }, f = 1; f < c.length; f++)p(f);\n        return {\n            path: o,\n            index: m,\n            params: h\n        };\n    };\n}\nfunction s(r) {\n    return r.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\nfunction D(r) {\n    return r && r.sensitive ? \"\" : \"i\";\n}\nfunction $(r, n) {\n    if (!n) return r;\n    for(var e = /\\((?:\\?<(.*?)>)?(?!\\?)/g, a = 0, u = e.exec(r.source); u;)n.push({\n        name: u[1] || a++,\n        prefix: \"\",\n        suffix: \"\",\n        modifier: \"\",\n        pattern: \"\"\n    }), u = e.exec(r.source);\n    return r;\n}\nfunction W(r, n, e) {\n    var a = r.map(function(u) {\n        return P(u, n, e).source;\n    });\n    return new RegExp(\"(?:\".concat(a.join(\"|\"), \")\"), D(e));\n}\nfunction L(r, n, e) {\n    return U(F(r, e), n, e);\n}\nfunction U(r, n, e) {\n    e === void 0 && (e = {});\n    for(var a = e.strict, u = a === void 0 ? false : a, t = e.start, c = t === void 0 ? true : t, o = e.end, m = o === void 0 ? true : o, h = e.encode, p = h === void 0 ? function(v) {\n        return v;\n    } : h, f = e.delimiter, w = f === void 0 ? \"/#?\" : f, d = e.endsWith, M = d === void 0 ? \"\" : d, A = \"[\".concat(s(M), \"]|$\"), T = \"[\".concat(s(w), \"]\"), x = c ? \"^\" : \"\", C = 0, g = r; C < g.length; C++){\n        var i = g[C];\n        if (typeof i == \"string\") x += s(p(i));\n        else {\n            var R = s(p(i.prefix)), y = s(p(i.suffix));\n            if (i.pattern) if (n && n.push(i), R || y) if (i.modifier === \"+\" || i.modifier === \"*\") {\n                var O = i.modifier === \"*\" ? \"?\" : \"\";\n                x += \"(?:\".concat(R, \"((?:\").concat(i.pattern, \")(?:\").concat(y).concat(R, \"(?:\").concat(i.pattern, \"))*)\").concat(y, \")\").concat(O);\n            } else x += \"(?:\".concat(R, \"(\").concat(i.pattern, \")\").concat(y, \")\").concat(i.modifier);\n            else {\n                if (i.modifier === \"+\" || i.modifier === \"*\") throw new TypeError('Can not repeat \"'.concat(i.name, '\" without a prefix and suffix'));\n                x += \"(\".concat(i.pattern, \")\").concat(i.modifier);\n            }\n            else x += \"(?:\".concat(R).concat(y, \")\").concat(i.modifier);\n        }\n    }\n    if (m) u || (x += \"\".concat(T, \"?\")), x += e.endsWith ? \"(?=\".concat(A, \")\") : \"$\";\n    else {\n        var b = r[r.length - 1], l = typeof b == \"string\" ? T.indexOf(b[b.length - 1]) > -1 : b === void 0;\n        u || (x += \"(?:\".concat(T, \"(?=\").concat(A, \"))?\")), l || (x += \"(?=\".concat(T, \"|\").concat(A, \")\"));\n    }\n    return new RegExp(x, D(e));\n}\nfunction P(r, n, e) {\n    return r instanceof RegExp ? $(r, n) : Array.isArray(r) ? W(r, n, e) : L(r, n, e);\n}\n// src/pathToRegexp.ts\nvar pathToRegexp = (path)=>{\n    try {\n        return P(path);\n    } catch (e) {\n        throw new Error(`Invalid path: ${path}.\nConsult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp/tree/6.x\n${e.message}`);\n    }\n};\nfunction match(str, options) {\n    try {\n        return H(str, options);\n    } catch (e) {\n        throw new Error(`Invalid path and options: Consult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp/tree/6.x\n${e.message}`);\n    }\n}\n //# sourceMappingURL=chunk-JJHTUJGL.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_HEADER: () => (/* binding */ DEV_BROWSER_JWT_HEADER),\n/* harmony export */   DEV_BROWSER_JWT_KEY: () => (/* binding */ DEV_BROWSER_JWT_KEY),\n/* harmony export */   extractDevBrowserJWTFromURL: () => (/* binding */ extractDevBrowserJWTFromURL),\n/* harmony export */   setDevBrowserJWTInURL: () => (/* binding */ setDevBrowserJWTInURL)\n/* harmony export */ });\n// src/devBrowser.ts\nvar DEV_BROWSER_JWT_KEY = \"__clerk_db_jwt\";\nvar DEV_BROWSER_JWT_HEADER = \"Clerk-Db-Jwt\";\nfunction setDevBrowserJWTInURL(url, jwt) {\n    const resultURL = new URL(url);\n    const jwtFromSearch = resultURL.searchParams.get(DEV_BROWSER_JWT_KEY);\n    resultURL.searchParams.delete(DEV_BROWSER_JWT_KEY);\n    const jwtToSet = jwtFromSearch || jwt;\n    if (jwtToSet) {\n        resultURL.searchParams.set(DEV_BROWSER_JWT_KEY, jwtToSet);\n    }\n    return resultURL;\n}\nfunction extractDevBrowserJWTFromURL(url) {\n    const jwt = readDevBrowserJwtFromSearchParams(url);\n    const cleanUrl = removeDevBrowserJwt(url);\n    if (cleanUrl.href !== url.href && typeof globalThis.history !== \"undefined\") {\n        globalThis.history.replaceState(null, \"\", removeDevBrowserJwt(url));\n    }\n    return jwt;\n}\nvar readDevBrowserJwtFromSearchParams = (url)=>{\n    return url.searchParams.get(DEV_BROWSER_JWT_KEY) || \"\";\n};\nvar removeDevBrowserJwt = (url)=>{\n    return removeDevBrowserJwtFromURLSearchParams(removeLegacyDevBrowserJwt(url));\n};\nvar removeDevBrowserJwtFromURLSearchParams = (_url)=>{\n    const url = new URL(_url);\n    url.searchParams.delete(DEV_BROWSER_JWT_KEY);\n    return url;\n};\nvar removeLegacyDevBrowserJwt = (_url)=>{\n    const DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\n    const DEV_BROWSER_JWT_LEGACY_KEY = \"__dev_session\";\n    const url = new URL(_url);\n    url.searchParams.delete(DEV_BROWSER_JWT_LEGACY_KEY);\n    url.hash = decodeURI(url.hash).replace(DEV_BROWSER_JWT_MARKER_REGEXP, \"\");\n    if (url.href.endsWith(\"#\")) {\n        url.hash = \"\";\n    }\n    return url;\n};\n //# sourceMappingURL=chunk-K64INQ4C.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LNjRJTlE0Qy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixJQUFJQSxzQkFBc0I7QUFDMUIsSUFBSUMseUJBQXlCO0FBQzdCLFNBQVNDLHNCQUFzQkMsR0FBRyxFQUFFQyxHQUFHO0lBQ3JDLE1BQU1DLFlBQVksSUFBSUMsSUFBSUg7SUFDMUIsTUFBTUksZ0JBQWdCRixVQUFVRyxZQUFZLENBQUNDLEdBQUcsQ0FBQ1Q7SUFDakRLLFVBQVVHLFlBQVksQ0FBQ0UsTUFBTSxDQUFDVjtJQUM5QixNQUFNVyxXQUFXSixpQkFBaUJIO0lBQ2xDLElBQUlPLFVBQVU7UUFDWk4sVUFBVUcsWUFBWSxDQUFDSSxHQUFHLENBQUNaLHFCQUFxQlc7SUFDbEQ7SUFDQSxPQUFPTjtBQUNUO0FBQ0EsU0FBU1EsNEJBQTRCVixHQUFHO0lBQ3RDLE1BQU1DLE1BQU1VLGtDQUFrQ1g7SUFDOUMsTUFBTVksV0FBV0Msb0JBQW9CYjtJQUNyQyxJQUFJWSxTQUFTRSxJQUFJLEtBQUtkLElBQUljLElBQUksSUFBSSxPQUFPQyxXQUFXQyxPQUFPLEtBQUssYUFBYTtRQUMzRUQsV0FBV0MsT0FBTyxDQUFDQyxZQUFZLENBQUMsTUFBTSxJQUFJSixvQkFBb0JiO0lBQ2hFO0lBQ0EsT0FBT0M7QUFDVDtBQUNBLElBQUlVLG9DQUFvQyxDQUFDWDtJQUN2QyxPQUFPQSxJQUFJSyxZQUFZLENBQUNDLEdBQUcsQ0FBQ1Qsd0JBQXdCO0FBQ3REO0FBQ0EsSUFBSWdCLHNCQUFzQixDQUFDYjtJQUN6QixPQUFPa0IsdUNBQXVDQywwQkFBMEJuQjtBQUMxRTtBQUNBLElBQUlrQix5Q0FBeUMsQ0FBQ0U7SUFDNUMsTUFBTXBCLE1BQU0sSUFBSUcsSUFBSWlCO0lBQ3BCcEIsSUFBSUssWUFBWSxDQUFDRSxNQUFNLENBQUNWO0lBQ3hCLE9BQU9HO0FBQ1Q7QUFDQSxJQUFJbUIsNEJBQTRCLENBQUNDO0lBQy9CLE1BQU1DLGdDQUFnQztJQUN0QyxNQUFNQyw2QkFBNkI7SUFDbkMsTUFBTXRCLE1BQU0sSUFBSUcsSUFBSWlCO0lBQ3BCcEIsSUFBSUssWUFBWSxDQUFDRSxNQUFNLENBQUNlO0lBQ3hCdEIsSUFBSXVCLElBQUksR0FBR0MsVUFBVXhCLElBQUl1QixJQUFJLEVBQUVFLE9BQU8sQ0FBQ0osK0JBQStCO0lBQ3RFLElBQUlyQixJQUFJYyxJQUFJLENBQUNZLFFBQVEsQ0FBQyxNQUFNO1FBQzFCMUIsSUFBSXVCLElBQUksR0FBRztJQUNiO0lBQ0EsT0FBT3ZCO0FBQ1Q7QUFPRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUs2NElOUTRDLm1qcz85MTM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9kZXZCcm93c2VyLnRzXG52YXIgREVWX0JST1dTRVJfSldUX0tFWSA9IFwiX19jbGVya19kYl9qd3RcIjtcbnZhciBERVZfQlJPV1NFUl9KV1RfSEVBREVSID0gXCJDbGVyay1EYi1Kd3RcIjtcbmZ1bmN0aW9uIHNldERldkJyb3dzZXJKV1RJblVSTCh1cmwsIGp3dCkge1xuICBjb25zdCByZXN1bHRVUkwgPSBuZXcgVVJMKHVybCk7XG4gIGNvbnN0IGp3dEZyb21TZWFyY2ggPSByZXN1bHRVUkwuc2VhcmNoUGFyYW1zLmdldChERVZfQlJPV1NFUl9KV1RfS0VZKTtcbiAgcmVzdWx0VVJMLnNlYXJjaFBhcmFtcy5kZWxldGUoREVWX0JST1dTRVJfSldUX0tFWSk7XG4gIGNvbnN0IGp3dFRvU2V0ID0gand0RnJvbVNlYXJjaCB8fCBqd3Q7XG4gIGlmIChqd3RUb1NldCkge1xuICAgIHJlc3VsdFVSTC5zZWFyY2hQYXJhbXMuc2V0KERFVl9CUk9XU0VSX0pXVF9LRVksIGp3dFRvU2V0KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0VVJMO1xufVxuZnVuY3Rpb24gZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMKHVybCkge1xuICBjb25zdCBqd3QgPSByZWFkRGV2QnJvd3Nlckp3dEZyb21TZWFyY2hQYXJhbXModXJsKTtcbiAgY29uc3QgY2xlYW5VcmwgPSByZW1vdmVEZXZCcm93c2VySnd0KHVybCk7XG4gIGlmIChjbGVhblVybC5ocmVmICE9PSB1cmwuaHJlZiAmJiB0eXBlb2YgZ2xvYmFsVGhpcy5oaXN0b3J5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5oaXN0b3J5LnJlcGxhY2VTdGF0ZShudWxsLCBcIlwiLCByZW1vdmVEZXZCcm93c2VySnd0KHVybCkpO1xuICB9XG4gIHJldHVybiBqd3Q7XG59XG52YXIgcmVhZERldkJyb3dzZXJKd3RGcm9tU2VhcmNoUGFyYW1zID0gKHVybCkgPT4ge1xuICByZXR1cm4gdXJsLnNlYXJjaFBhcmFtcy5nZXQoREVWX0JST1dTRVJfSldUX0tFWSkgfHwgXCJcIjtcbn07XG52YXIgcmVtb3ZlRGV2QnJvd3Nlckp3dCA9ICh1cmwpID0+IHtcbiAgcmV0dXJuIHJlbW92ZURldkJyb3dzZXJKd3RGcm9tVVJMU2VhcmNoUGFyYW1zKHJlbW92ZUxlZ2FjeURldkJyb3dzZXJKd3QodXJsKSk7XG59O1xudmFyIHJlbW92ZURldkJyb3dzZXJKd3RGcm9tVVJMU2VhcmNoUGFyYW1zID0gKF91cmwpID0+IHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTChfdXJsKTtcbiAgdXJsLnNlYXJjaFBhcmFtcy5kZWxldGUoREVWX0JST1dTRVJfSldUX0tFWSk7XG4gIHJldHVybiB1cmw7XG59O1xudmFyIHJlbW92ZUxlZ2FjeURldkJyb3dzZXJKd3QgPSAoX3VybCkgPT4ge1xuICBjb25zdCBERVZfQlJPV1NFUl9KV1RfTUFSS0VSX1JFR0VYUCA9IC9fX2NsZXJrX2RiX2p3dFxcWyguKilcXF0vO1xuICBjb25zdCBERVZfQlJPV1NFUl9KV1RfTEVHQUNZX0tFWSA9IFwiX19kZXZfc2Vzc2lvblwiO1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKF91cmwpO1xuICB1cmwuc2VhcmNoUGFyYW1zLmRlbGV0ZShERVZfQlJPV1NFUl9KV1RfTEVHQUNZX0tFWSk7XG4gIHVybC5oYXNoID0gZGVjb2RlVVJJKHVybC5oYXNoKS5yZXBsYWNlKERFVl9CUk9XU0VSX0pXVF9NQVJLRVJfUkVHRVhQLCBcIlwiKTtcbiAgaWYgKHVybC5ocmVmLmVuZHNXaXRoKFwiI1wiKSkge1xuICAgIHVybC5oYXNoID0gXCJcIjtcbiAgfVxuICByZXR1cm4gdXJsO1xufTtcblxuZXhwb3J0IHtcbiAgREVWX0JST1dTRVJfSldUX0tFWSxcbiAgREVWX0JST1dTRVJfSldUX0hFQURFUixcbiAgc2V0RGV2QnJvd3NlckpXVEluVVJMLFxuICBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1LNjRJTlE0Qy5tanMubWFwIl0sIm5hbWVzIjpbIkRFVl9CUk9XU0VSX0pXVF9LRVkiLCJERVZfQlJPV1NFUl9KV1RfSEVBREVSIiwic2V0RGV2QnJvd3NlckpXVEluVVJMIiwidXJsIiwiand0IiwicmVzdWx0VVJMIiwiVVJMIiwiand0RnJvbVNlYXJjaCIsInNlYXJjaFBhcmFtcyIsImdldCIsImRlbGV0ZSIsImp3dFRvU2V0Iiwic2V0IiwiZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMIiwicmVhZERldkJyb3dzZXJKd3RGcm9tU2VhcmNoUGFyYW1zIiwiY2xlYW5VcmwiLCJyZW1vdmVEZXZCcm93c2VySnd0IiwiaHJlZiIsImdsb2JhbFRoaXMiLCJoaXN0b3J5IiwicmVwbGFjZVN0YXRlIiwicmVtb3ZlRGV2QnJvd3Nlckp3dEZyb21VUkxTZWFyY2hQYXJhbXMiLCJyZW1vdmVMZWdhY3lEZXZCcm93c2VySnd0IiwiX3VybCIsIkRFVl9CUk9XU0VSX0pXVF9NQVJLRVJfUkVHRVhQIiwiREVWX0JST1dTRVJfSldUX0xFR0FDWV9LRVkiLCJoYXNoIiwiZGVjb2RlVVJJIiwicmVwbGFjZSIsImVuZHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicBtoa: () => (/* binding */ isomorphicBtoa)\n/* harmony export */ });\n// src/isomorphicBtoa.ts\nvar isomorphicBtoa = (data)=>{\n    if (typeof btoa !== \"undefined\" && typeof btoa === \"function\") {\n        return btoa(data);\n    } else if (typeof global !== \"undefined\" && global.Buffer) {\n        return new global.Buffer(data).toString(\"base64\");\n    }\n    return data;\n};\n //# sourceMappingURL=chunk-KOH7GTJO.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LT0g3R1RKTy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdCQUF3QjtBQUN4QixJQUFJQSxpQkFBaUIsQ0FBQ0M7SUFDcEIsSUFBSSxPQUFPQyxTQUFTLGVBQWUsT0FBT0EsU0FBUyxZQUFZO1FBQzdELE9BQU9BLEtBQUtEO0lBQ2QsT0FBTyxJQUFJLE9BQU9FLFdBQVcsZUFBZUEsT0FBT0MsTUFBTSxFQUFFO1FBQ3pELE9BQU8sSUFBSUQsT0FBT0MsTUFBTSxDQUFDSCxNQUFNSSxRQUFRLENBQUM7SUFDMUM7SUFDQSxPQUFPSjtBQUNUO0FBSUUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LT0g3R1RKTy5tanM/NWM0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaXNvbW9ycGhpY0J0b2EudHNcbnZhciBpc29tb3JwaGljQnRvYSA9IChkYXRhKSA9PiB7XG4gIGlmICh0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIGJ0b2EoZGF0YSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuQnVmZmVyKSB7XG4gICAgcmV0dXJuIG5ldyBnbG9iYWwuQnVmZmVyKGRhdGEpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xuICB9XG4gIHJldHVybiBkYXRhO1xufTtcblxuZXhwb3J0IHtcbiAgaXNvbW9ycGhpY0J0b2Fcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1LT0g3R1RKTy5tanMubWFwIl0sIm5hbWVzIjpbImlzb21vcnBoaWNCdG9hIiwiZGF0YSIsImJ0b2EiLCJnbG9iYWwiLCJCdWZmZXIiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-NNO3XJ5E.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-NNO3XJ5E.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiUrlFromPublishableKey: () => (/* binding */ apiUrlFromPublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-G3VP5PJE.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n// src/apiUrlFromPublishableKey.ts\nvar apiUrlFromPublishableKey = (publishableKey)=>{\n    const frontendApi = (0,_chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey)?.frontendApi;\n    if (frontendApi?.startsWith(\"clerk.\") && _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LEGACY_DEV_INSTANCE_SUFFIXES.some((suffix)=>frontendApi?.endsWith(suffix))) {\n        return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.PROD_API_URL;\n    }\n    if (_chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_ENV_SUFFIXES.some((suffix)=>frontendApi?.endsWith(suffix))) {\n        return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_API_URL;\n    }\n    if (_chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_ENV_SUFFIXES.some((suffix)=>frontendApi?.endsWith(suffix))) {\n        return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_API_URL;\n    }\n    return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.PROD_API_URL;\n};\n //# sourceMappingURL=chunk-NNO3XJ5E.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1OTk8zWEo1RS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRThCO0FBUUE7QUFFOUIsa0NBQWtDO0FBQ2xDLElBQUlPLDJCQUEyQixDQUFDQztJQUM5QixNQUFNQyxjQUFjVCx3RUFBbUJBLENBQUNRLGlCQUFpQkM7SUFDekQsSUFBSUEsYUFBYUMsV0FBVyxhQUFhVCw2RUFBNEJBLENBQUNVLElBQUksQ0FBQyxDQUFDQyxTQUFXSCxhQUFhSSxTQUFTRCxVQUFVO1FBQ3JILE9BQU9SLDZEQUFZQTtJQUNyQjtJQUNBLElBQUlELG1FQUFrQkEsQ0FBQ1EsSUFBSSxDQUFDLENBQUNDLFNBQVdILGFBQWFJLFNBQVNELFVBQVU7UUFDdEUsT0FBT1YsOERBQWFBO0lBQ3RCO0lBQ0EsSUFBSUkscUVBQW9CQSxDQUFDSyxJQUFJLENBQUMsQ0FBQ0MsU0FBV0gsYUFBYUksU0FBU0QsVUFBVTtRQUN4RSxPQUFPUCxnRUFBZUE7SUFDeEI7SUFDQSxPQUFPRCw2REFBWUE7QUFDckI7QUFJRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLU5OTzNYSjVFLm1qcz8xN2M4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHBhcnNlUHVibGlzaGFibGVLZXlcbn0gZnJvbSBcIi4vY2h1bmstRzNWUDVQSkUubWpzXCI7XG5pbXBvcnQge1xuICBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLFxuICBMT0NBTF9BUElfVVJMLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFBST0RfQVBJX1VSTCxcbiAgU1RBR0lOR19BUElfVVJMLFxuICBTVEFHSU5HX0VOVl9TVUZGSVhFU1xufSBmcm9tIFwiLi9jaHVuay1JNk1UU1RPRi5tanNcIjtcblxuLy8gc3JjL2FwaVVybEZyb21QdWJsaXNoYWJsZUtleS50c1xudmFyIGFwaVVybEZyb21QdWJsaXNoYWJsZUtleSA9IChwdWJsaXNoYWJsZUtleSkgPT4ge1xuICBjb25zdCBmcm9udGVuZEFwaSA9IHBhcnNlUHVibGlzaGFibGVLZXkocHVibGlzaGFibGVLZXkpPy5mcm9udGVuZEFwaTtcbiAgaWYgKGZyb250ZW5kQXBpPy5zdGFydHNXaXRoKFwiY2xlcmsuXCIpICYmIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVMuc29tZSgoc3VmZml4KSA9PiBmcm9udGVuZEFwaT8uZW5kc1dpdGgoc3VmZml4KSkpIHtcbiAgICByZXR1cm4gUFJPRF9BUElfVVJMO1xuICB9XG4gIGlmIChMT0NBTF9FTlZfU1VGRklYRVMuc29tZSgoc3VmZml4KSA9PiBmcm9udGVuZEFwaT8uZW5kc1dpdGgoc3VmZml4KSkpIHtcbiAgICByZXR1cm4gTE9DQUxfQVBJX1VSTDtcbiAgfVxuICBpZiAoU1RBR0lOR19FTlZfU1VGRklYRVMuc29tZSgoc3VmZml4KSA9PiBmcm9udGVuZEFwaT8uZW5kc1dpdGgoc3VmZml4KSkpIHtcbiAgICByZXR1cm4gU1RBR0lOR19BUElfVVJMO1xuICB9XG4gIHJldHVybiBQUk9EX0FQSV9VUkw7XG59O1xuXG5leHBvcnQge1xuICBhcGlVcmxGcm9tUHVibGlzaGFibGVLZXlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1OTk8zWEo1RS5tanMubWFwIl0sIm5hbWVzIjpbInBhcnNlUHVibGlzaGFibGVLZXkiLCJMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTIiwiTE9DQUxfQVBJX1VSTCIsIkxPQ0FMX0VOVl9TVUZGSVhFUyIsIlBST0RfQVBJX1VSTCIsIlNUQUdJTkdfQVBJX1VSTCIsIlNUQUdJTkdfRU5WX1NVRkZJWEVTIiwiYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5IiwicHVibGlzaGFibGVLZXkiLCJmcm9udGVuZEFwaSIsInN0YXJ0c1dpdGgiLCJzb21lIiwic3VmZml4IiwiZW5kc1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-NNO3XJ5E.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: () => (/* binding */ handleValueOrFn)\n/* harmony export */ });\n// src/utils/handleValueOrFn.ts\nfunction handleValueOrFn(value, url, defaultValue) {\n    if (typeof value === \"function\") {\n        return value(url);\n    }\n    if (typeof value !== \"undefined\") {\n        return value;\n    }\n    if (typeof defaultValue !== \"undefined\") {\n        return defaultValue;\n    }\n    return void 0;\n}\n //# sourceMappingURL=chunk-O32JQBM6.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1PMzJKUUJNNi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLCtCQUErQjtBQUMvQixTQUFTQSxnQkFBZ0JDLEtBQUssRUFBRUMsR0FBRyxFQUFFQyxZQUFZO0lBQy9DLElBQUksT0FBT0YsVUFBVSxZQUFZO1FBQy9CLE9BQU9BLE1BQU1DO0lBQ2Y7SUFDQSxJQUFJLE9BQU9ELFVBQVUsYUFBYTtRQUNoQyxPQUFPQTtJQUNUO0lBQ0EsSUFBSSxPQUFPRSxpQkFBaUIsYUFBYTtRQUN2QyxPQUFPQTtJQUNUO0lBQ0EsT0FBTyxLQUFLO0FBQ2Q7QUFJRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLU8zMkpRQk02Lm1qcz8xNGNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9oYW5kbGVWYWx1ZU9yRm4udHNcbmZ1bmN0aW9uIGhhbmRsZVZhbHVlT3JGbih2YWx1ZSwgdXJsLCBkZWZhdWx0VmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHZhbHVlKHVybCk7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodHlwZW9mIGRlZmF1bHRWYWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cblxuZXhwb3J0IHtcbiAgaGFuZGxlVmFsdWVPckZuXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstTzMySlFCTTYubWpzLm1hcCJdLCJuYW1lcyI6WyJoYW5kbGVWYWx1ZU9yRm4iLCJ2YWx1ZSIsInVybCIsImRlZmF1bHRWYWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: () => (/* binding */ camelToSnake),\n/* harmony export */   deepCamelToSnake: () => (/* binding */ deepCamelToSnake),\n/* harmony export */   deepSnakeToCamel: () => (/* binding */ deepSnakeToCamel),\n/* harmony export */   getNonUndefinedValues: () => (/* binding */ getNonUndefinedValues),\n/* harmony export */   isIPV4Address: () => (/* binding */ isIPV4Address),\n/* harmony export */   isTruthy: () => (/* binding */ isTruthy),\n/* harmony export */   snakeToCamel: () => (/* binding */ snakeToCamel),\n/* harmony export */   titleize: () => (/* binding */ titleize),\n/* harmony export */   toSentence: () => (/* binding */ toSentence)\n/* harmony export */ });\n// src/underscore.ts\nvar toSentence = (items)=>{\n    if (items.length == 0) {\n        return \"\";\n    }\n    if (items.length == 1) {\n        return items[0];\n    }\n    let sentence = items.slice(0, -1).join(\", \");\n    sentence += `, or ${items.slice(-1)}`;\n    return sentence;\n};\nvar IP_V4_ADDRESS_REGEX = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\nfunction isIPV4Address(str) {\n    return IP_V4_ADDRESS_REGEX.test(str || \"\");\n}\nfunction titleize(str) {\n    const s = str || \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\nfunction snakeToCamel(str) {\n    return str ? str.replace(/([-_][a-z])/g, (match)=>match.toUpperCase().replace(/-|_/, \"\")) : \"\";\n}\nfunction camelToSnake(str) {\n    return str ? str.replace(/[A-Z]/g, (letter)=>`_${letter.toLowerCase()}`) : \"\";\n}\nvar createDeepObjectTransformer = (transform)=>{\n    const deepTransform = (obj)=>{\n        if (!obj) {\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            return obj.map((el)=>{\n                if (typeof el === \"object\" || Array.isArray(el)) {\n                    return deepTransform(el);\n                }\n                return el;\n            });\n        }\n        const copy = {\n            ...obj\n        };\n        const keys = Object.keys(copy);\n        for (const oldName of keys){\n            const newName = transform(oldName.toString());\n            if (newName !== oldName) {\n                copy[newName] = copy[oldName];\n                delete copy[oldName];\n            }\n            if (typeof copy[newName] === \"object\") {\n                copy[newName] = deepTransform(copy[newName]);\n            }\n        }\n        return copy;\n    };\n    return deepTransform;\n};\nvar deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\nvar deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\nfunction isTruthy(value) {\n    if (typeof value === `boolean`) {\n        return value;\n    }\n    if (value === void 0 || value === null) {\n        return false;\n    }\n    if (typeof value === `string`) {\n        if (value.toLowerCase() === `true`) {\n            return true;\n        }\n        if (value.toLowerCase() === `false`) {\n            return false;\n        }\n    }\n    const number = parseInt(value, 10);\n    if (isNaN(number)) {\n        return false;\n    }\n    if (number > 0) {\n        return true;\n    }\n    return false;\n}\nfunction getNonUndefinedValues(obj) {\n    return Object.entries(obj).reduce((acc, [key, value])=>{\n        if (value !== void 0) {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n}\n //# sourceMappingURL=chunk-QE2A7CJI.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1RRTJBN0NKSS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLElBQUlBLGFBQWEsQ0FBQ0M7SUFDaEIsSUFBSUEsTUFBTUMsTUFBTSxJQUFJLEdBQUc7UUFDckIsT0FBTztJQUNUO0lBQ0EsSUFBSUQsTUFBTUMsTUFBTSxJQUFJLEdBQUc7UUFDckIsT0FBT0QsS0FBSyxDQUFDLEVBQUU7SUFDakI7SUFDQSxJQUFJRSxXQUFXRixNQUFNRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUdDLElBQUksQ0FBQztJQUN2Q0YsWUFBWSxDQUFDLEtBQUssRUFBRUYsTUFBTUcsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ3JDLE9BQU9EO0FBQ1Q7QUFDQSxJQUFJRyxzQkFBc0I7QUFDMUIsU0FBU0MsY0FBY0MsR0FBRztJQUN4QixPQUFPRixvQkFBb0JHLElBQUksQ0FBQ0QsT0FBTztBQUN6QztBQUNBLFNBQVNFLFNBQVNGLEdBQUc7SUFDbkIsTUFBTUcsSUFBSUgsT0FBTztJQUNqQixPQUFPRyxFQUFFQyxNQUFNLENBQUMsR0FBR0MsV0FBVyxLQUFLRixFQUFFUCxLQUFLLENBQUM7QUFDN0M7QUFDQSxTQUFTVSxhQUFhTixHQUFHO0lBQ3ZCLE9BQU9BLE1BQU1BLElBQUlPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQ0MsUUFBVUEsTUFBTUgsV0FBVyxHQUFHRSxPQUFPLENBQUMsT0FBTyxPQUFPO0FBQ2hHO0FBQ0EsU0FBU0UsYUFBYVQsR0FBRztJQUN2QixPQUFPQSxNQUFNQSxJQUFJTyxPQUFPLENBQUMsVUFBVSxDQUFDRyxTQUFXLENBQUMsQ0FBQyxFQUFFQSxPQUFPQyxXQUFXLEdBQUcsQ0FBQyxJQUFJO0FBQy9FO0FBQ0EsSUFBSUMsOEJBQThCLENBQUNDO0lBQ2pDLE1BQU1DLGdCQUFnQixDQUFDQztRQUNyQixJQUFJLENBQUNBLEtBQUs7WUFDUixPQUFPQTtRQUNUO1FBQ0EsSUFBSUMsTUFBTUMsT0FBTyxDQUFDRixNQUFNO1lBQ3RCLE9BQU9BLElBQUlHLEdBQUcsQ0FBQyxDQUFDQztnQkFDZCxJQUFJLE9BQU9BLE9BQU8sWUFBWUgsTUFBTUMsT0FBTyxDQUFDRSxLQUFLO29CQUMvQyxPQUFPTCxjQUFjSztnQkFDdkI7Z0JBQ0EsT0FBT0E7WUFDVDtRQUNGO1FBQ0EsTUFBTUMsT0FBTztZQUFFLEdBQUdMLEdBQUc7UUFBQztRQUN0QixNQUFNTSxPQUFPQyxPQUFPRCxJQUFJLENBQUNEO1FBQ3pCLEtBQUssTUFBTUcsV0FBV0YsS0FBTTtZQUMxQixNQUFNRyxVQUFVWCxVQUFVVSxRQUFRRSxRQUFRO1lBQzFDLElBQUlELFlBQVlELFNBQVM7Z0JBQ3ZCSCxJQUFJLENBQUNJLFFBQVEsR0FBR0osSUFBSSxDQUFDRyxRQUFRO2dCQUM3QixPQUFPSCxJQUFJLENBQUNHLFFBQVE7WUFDdEI7WUFDQSxJQUFJLE9BQU9ILElBQUksQ0FBQ0ksUUFBUSxLQUFLLFVBQVU7Z0JBQ3JDSixJQUFJLENBQUNJLFFBQVEsR0FBR1YsY0FBY00sSUFBSSxDQUFDSSxRQUFRO1lBQzdDO1FBQ0Y7UUFDQSxPQUFPSjtJQUNUO0lBQ0EsT0FBT047QUFDVDtBQUNBLElBQUlZLG1CQUFtQmQsNEJBQTRCSDtBQUNuRCxJQUFJa0IsbUJBQW1CZiw0QkFBNEJOO0FBQ25ELFNBQVNzQixTQUFTQyxLQUFLO0lBQ3JCLElBQUksT0FBT0EsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzlCLE9BQU9BO0lBQ1Q7SUFDQSxJQUFJQSxVQUFVLEtBQUssS0FBS0EsVUFBVSxNQUFNO1FBQ3RDLE9BQU87SUFDVDtJQUNBLElBQUksT0FBT0EsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQzdCLElBQUlBLE1BQU1sQixXQUFXLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNsQyxPQUFPO1FBQ1Q7UUFDQSxJQUFJa0IsTUFBTWxCLFdBQVcsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ25DLE9BQU87UUFDVDtJQUNGO0lBQ0EsTUFBTW1CLFNBQVNDLFNBQVNGLE9BQU87SUFDL0IsSUFBSUcsTUFBTUYsU0FBUztRQUNqQixPQUFPO0lBQ1Q7SUFDQSxJQUFJQSxTQUFTLEdBQUc7UUFDZCxPQUFPO0lBQ1Q7SUFDQSxPQUFPO0FBQ1Q7QUFDQSxTQUFTRyxzQkFBc0JsQixHQUFHO0lBQ2hDLE9BQU9PLE9BQU9ZLE9BQU8sQ0FBQ25CLEtBQUtvQixNQUFNLENBQUMsQ0FBQ0MsS0FBSyxDQUFDQyxLQUFLUixNQUFNO1FBQ2xELElBQUlBLFVBQVUsS0FBSyxHQUFHO1lBQ3BCTyxHQUFHLENBQUNDLElBQUksR0FBR1I7UUFDYjtRQUNBLE9BQU9PO0lBQ1QsR0FBRyxDQUFDO0FBQ047QUFZRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVFFMkE3Q0pJLm1qcz85MmZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91bmRlcnNjb3JlLnRzXG52YXIgdG9TZW50ZW5jZSA9IChpdGVtcykgPT4ge1xuICBpZiAoaXRlbXMubGVuZ3RoID09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICBpZiAoaXRlbXMubGVuZ3RoID09IDEpIHtcbiAgICByZXR1cm4gaXRlbXNbMF07XG4gIH1cbiAgbGV0IHNlbnRlbmNlID0gaXRlbXMuc2xpY2UoMCwgLTEpLmpvaW4oXCIsIFwiKTtcbiAgc2VudGVuY2UgKz0gYCwgb3IgJHtpdGVtcy5zbGljZSgtMSl9YDtcbiAgcmV0dXJuIHNlbnRlbmNlO1xufTtcbnZhciBJUF9WNF9BRERSRVNTX1JFR0VYID0gL14oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KVxcLigyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pXFwuKDI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcXC4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSQvO1xuZnVuY3Rpb24gaXNJUFY0QWRkcmVzcyhzdHIpIHtcbiAgcmV0dXJuIElQX1Y0X0FERFJFU1NfUkVHRVgudGVzdChzdHIgfHwgXCJcIik7XG59XG5mdW5jdGlvbiB0aXRsZWl6ZShzdHIpIHtcbiAgY29uc3QgcyA9IHN0ciB8fCBcIlwiO1xuICByZXR1cm4gcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHMuc2xpY2UoMSk7XG59XG5mdW5jdGlvbiBzbmFrZVRvQ2FtZWwoc3RyKSB7XG4gIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvKFstX11bYS16XSkvZywgKG1hdGNoKSA9PiBtYXRjaC50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoLy18Xy8sIFwiXCIpKSA6IFwiXCI7XG59XG5mdW5jdGlvbiBjYW1lbFRvU25ha2Uoc3RyKSB7XG4gIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvW0EtWl0vZywgKGxldHRlcikgPT4gYF8ke2xldHRlci50b0xvd2VyQ2FzZSgpfWApIDogXCJcIjtcbn1cbnZhciBjcmVhdGVEZWVwT2JqZWN0VHJhbnNmb3JtZXIgPSAodHJhbnNmb3JtKSA9PiB7XG4gIGNvbnN0IGRlZXBUcmFuc2Zvcm0gPSAob2JqKSA9PiB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgIHJldHVybiBvYmoubWFwKChlbCkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGVsID09PSBcIm9iamVjdFwiIHx8IEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgICAgICAgcmV0dXJuIGRlZXBUcmFuc2Zvcm0oZWwpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbDtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBjb3B5ID0geyAuLi5vYmogfTtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoY29weSk7XG4gICAgZm9yIChjb25zdCBvbGROYW1lIG9mIGtleXMpIHtcbiAgICAgIGNvbnN0IG5ld05hbWUgPSB0cmFuc2Zvcm0ob2xkTmFtZS50b1N0cmluZygpKTtcbiAgICAgIGlmIChuZXdOYW1lICE9PSBvbGROYW1lKSB7XG4gICAgICAgIGNvcHlbbmV3TmFtZV0gPSBjb3B5W29sZE5hbWVdO1xuICAgICAgICBkZWxldGUgY29weVtvbGROYW1lXTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgY29weVtuZXdOYW1lXSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBjb3B5W25ld05hbWVdID0gZGVlcFRyYW5zZm9ybShjb3B5W25ld05hbWVdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvcHk7XG4gIH07XG4gIHJldHVybiBkZWVwVHJhbnNmb3JtO1xufTtcbnZhciBkZWVwQ2FtZWxUb1NuYWtlID0gY3JlYXRlRGVlcE9iamVjdFRyYW5zZm9ybWVyKGNhbWVsVG9TbmFrZSk7XG52YXIgZGVlcFNuYWtlVG9DYW1lbCA9IGNyZWF0ZURlZXBPYmplY3RUcmFuc2Zvcm1lcihzbmFrZVRvQ2FtZWwpO1xuZnVuY3Rpb24gaXNUcnV0aHkodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gYGJvb2xlYW5gKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh2YWx1ZSA9PT0gdm9pZCAwIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IGBzdHJpbmdgKSB7XG4gICAgaWYgKHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09IGB0cnVlYCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICh2YWx1ZS50b0xvd2VyQ2FzZSgpID09PSBgZmFsc2VgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGNvbnN0IG51bWJlciA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gIGlmIChpc05hTihudW1iZXIpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChudW1iZXIgPiAwKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzKG9iaikge1xuICByZXR1cm4gT2JqZWN0LmVudHJpZXMob2JqKS5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgaWYgKHZhbHVlICE9PSB2b2lkIDApIHtcbiAgICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn1cblxuZXhwb3J0IHtcbiAgdG9TZW50ZW5jZSxcbiAgaXNJUFY0QWRkcmVzcyxcbiAgdGl0bGVpemUsXG4gIHNuYWtlVG9DYW1lbCxcbiAgY2FtZWxUb1NuYWtlLFxuICBkZWVwQ2FtZWxUb1NuYWtlLFxuICBkZWVwU25ha2VUb0NhbWVsLFxuICBpc1RydXRoeSxcbiAgZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstUUUyQTdDSkkubWpzLm1hcCJdLCJuYW1lcyI6WyJ0b1NlbnRlbmNlIiwiaXRlbXMiLCJsZW5ndGgiLCJzZW50ZW5jZSIsInNsaWNlIiwiam9pbiIsIklQX1Y0X0FERFJFU1NfUkVHRVgiLCJpc0lQVjRBZGRyZXNzIiwic3RyIiwidGVzdCIsInRpdGxlaXplIiwicyIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic25ha2VUb0NhbWVsIiwicmVwbGFjZSIsIm1hdGNoIiwiY2FtZWxUb1NuYWtlIiwibGV0dGVyIiwidG9Mb3dlckNhc2UiLCJjcmVhdGVEZWVwT2JqZWN0VHJhbnNmb3JtZXIiLCJ0cmFuc2Zvcm0iLCJkZWVwVHJhbnNmb3JtIiwib2JqIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiZWwiLCJjb3B5Iiwia2V5cyIsIk9iamVjdCIsIm9sZE5hbWUiLCJuZXdOYW1lIiwidG9TdHJpbmciLCJkZWVwQ2FtZWxUb1NuYWtlIiwiZGVlcFNuYWtlVG9DYW1lbCIsImlzVHJ1dGh5IiwidmFsdWUiLCJudW1iZXIiLCJwYXJzZUludCIsImlzTmFOIiwiZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzIiwiZW50cmllcyIsInJlZHVjZSIsImFjYyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* binding */ isomorphicAtob)\n/* harmony export */ });\n// src/isomorphicAtob.ts\nvar isomorphicAtob = (data)=>{\n    if (typeof atob !== \"undefined\" && typeof atob === \"function\") {\n        return atob(data);\n    } else if (typeof global !== \"undefined\" && global.Buffer) {\n        return new global.Buffer(data, \"base64\").toString();\n    }\n    return data;\n};\n //# sourceMappingURL=chunk-TETGTEI2.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1URVRHVEVJMi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdCQUF3QjtBQUN4QixJQUFJQSxpQkFBaUIsQ0FBQ0M7SUFDcEIsSUFBSSxPQUFPQyxTQUFTLGVBQWUsT0FBT0EsU0FBUyxZQUFZO1FBQzdELE9BQU9BLEtBQUtEO0lBQ2QsT0FBTyxJQUFJLE9BQU9FLFdBQVcsZUFBZUEsT0FBT0MsTUFBTSxFQUFFO1FBQ3pELE9BQU8sSUFBSUQsT0FBT0MsTUFBTSxDQUFDSCxNQUFNLFVBQVVJLFFBQVE7SUFDbkQ7SUFDQSxPQUFPSjtBQUNUO0FBSUUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1URVRHVEVJMi5tanM/ZDdlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaXNvbW9ycGhpY0F0b2IudHNcbnZhciBpc29tb3JwaGljQXRvYiA9IChkYXRhKSA9PiB7XG4gIGlmICh0eXBlb2YgYXRvYiAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgYXRvYiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIGF0b2IoZGF0YSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuQnVmZmVyKSB7XG4gICAgcmV0dXJuIG5ldyBnbG9iYWwuQnVmZmVyKGRhdGEsIFwiYmFzZTY0XCIpLnRvU3RyaW5nKCk7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5leHBvcnQge1xuICBpc29tb3JwaGljQXRvYlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVRFVEdURUkyLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNvbW9ycGhpY0F0b2IiLCJkYXRhIiwiYXRvYiIsImdsb2JhbCIsIkJ1ZmZlciIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-UEY4AZIP.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-UEY4AZIP.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: () => (/* binding */ deprecated),\n/* harmony export */   deprecatedObjectProperty: () => (/* binding */ deprecatedObjectProperty),\n/* harmony export */   deprecatedProperty: () => (/* binding */ deprecatedProperty)\n/* harmony export */ });\n/* harmony import */ var _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7HPDNZ3R.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\");\n\n// src/deprecated.ts\nvar displayedWarnings = /* @__PURE__ */ new Set();\nvar deprecated = (fnName, warning, key)=>{\n    const hideWarning = (0,_chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_0__.isTestEnvironment)() || (0,_chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionEnvironment)();\n    const messageId = key ?? fnName;\n    if (displayedWarnings.has(messageId) || hideWarning) {\n        return;\n    }\n    displayedWarnings.add(messageId);\n    console.warn(`Clerk - DEPRECATION WARNING: \"${fnName}\" is deprecated and will be removed in the next major release.\n${warning}`);\n};\nvar deprecatedProperty = (cls, propName, warning, isStatic = false)=>{\n    const target = isStatic ? cls : cls.prototype;\n    let value = target[propName];\n    Object.defineProperty(target, propName, {\n        get () {\n            deprecated(propName, warning, `${cls.name}:${propName}`);\n            return value;\n        },\n        set (v) {\n            value = v;\n        }\n    });\n};\nvar deprecatedObjectProperty = (obj, propName, warning, key)=>{\n    let value = obj[propName];\n    Object.defineProperty(obj, propName, {\n        get () {\n            deprecated(propName, warning, key);\n            return value;\n        },\n        set (v) {\n            value = v;\n        }\n    });\n};\n //# sourceMappingURL=chunk-UEY4AZIP.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1VRVk0QVpJUC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUc4QjtBQUU5QixvQkFBb0I7QUFDcEIsSUFBSUUsb0JBQW9CLGFBQWEsR0FBRyxJQUFJQztBQUM1QyxJQUFJQyxhQUFhLENBQUNDLFFBQVFDLFNBQVNDO0lBQ2pDLE1BQU1DLGNBQWNQLHNFQUFpQkEsTUFBTUQsNEVBQXVCQTtJQUNsRSxNQUFNUyxZQUFZRixPQUFPRjtJQUN6QixJQUFJSCxrQkFBa0JRLEdBQUcsQ0FBQ0QsY0FBY0QsYUFBYTtRQUNuRDtJQUNGO0lBQ0FOLGtCQUFrQlMsR0FBRyxDQUFDRjtJQUN0QkcsUUFBUUMsSUFBSSxDQUNWLENBQUMsOEJBQThCLEVBQUVSLE9BQU87QUFDNUMsRUFBRUMsUUFBUSxDQUFDO0FBRVg7QUFDQSxJQUFJUSxxQkFBcUIsQ0FBQ0MsS0FBS0MsVUFBVVYsU0FBU1csV0FBVyxLQUFLO0lBQ2hFLE1BQU1DLFNBQVNELFdBQVdGLE1BQU1BLElBQUlJLFNBQVM7SUFDN0MsSUFBSUMsUUFBUUYsTUFBTSxDQUFDRixTQUFTO0lBQzVCSyxPQUFPQyxjQUFjLENBQUNKLFFBQVFGLFVBQVU7UUFDdENPO1lBQ0VuQixXQUFXWSxVQUFVVixTQUFTLENBQUMsRUFBRVMsSUFBSVMsSUFBSSxDQUFDLENBQUMsRUFBRVIsU0FBUyxDQUFDO1lBQ3ZELE9BQU9JO1FBQ1Q7UUFDQUssS0FBSUMsQ0FBQztZQUNITixRQUFRTTtRQUNWO0lBQ0Y7QUFDRjtBQUNBLElBQUlDLDJCQUEyQixDQUFDQyxLQUFLWixVQUFVVixTQUFTQztJQUN0RCxJQUFJYSxRQUFRUSxHQUFHLENBQUNaLFNBQVM7SUFDekJLLE9BQU9DLGNBQWMsQ0FBQ00sS0FBS1osVUFBVTtRQUNuQ087WUFDRW5CLFdBQVdZLFVBQVVWLFNBQVNDO1lBQzlCLE9BQU9hO1FBQ1Q7UUFDQUssS0FBSUMsQ0FBQztZQUNITixRQUFRTTtRQUNWO0lBQ0Y7QUFDRjtBQU1FLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVUVZNEFaSVAubWpzPzkyMjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNQcm9kdWN0aW9uRW52aXJvbm1lbnQsXG4gIGlzVGVzdEVudmlyb25tZW50XG59IGZyb20gXCIuL2NodW5rLTdIUEROWjNSLm1qc1wiO1xuXG4vLyBzcmMvZGVwcmVjYXRlZC50c1xudmFyIGRpc3BsYXllZFdhcm5pbmdzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbnZhciBkZXByZWNhdGVkID0gKGZuTmFtZSwgd2FybmluZywga2V5KSA9PiB7XG4gIGNvbnN0IGhpZGVXYXJuaW5nID0gaXNUZXN0RW52aXJvbm1lbnQoKSB8fCBpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCgpO1xuICBjb25zdCBtZXNzYWdlSWQgPSBrZXkgPz8gZm5OYW1lO1xuICBpZiAoZGlzcGxheWVkV2FybmluZ3MuaGFzKG1lc3NhZ2VJZCkgfHwgaGlkZVdhcm5pbmcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZGlzcGxheWVkV2FybmluZ3MuYWRkKG1lc3NhZ2VJZCk7XG4gIGNvbnNvbGUud2FybihcbiAgICBgQ2xlcmsgLSBERVBSRUNBVElPTiBXQVJOSU5HOiBcIiR7Zm5OYW1lfVwiIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlLlxuJHt3YXJuaW5nfWBcbiAgKTtcbn07XG52YXIgZGVwcmVjYXRlZFByb3BlcnR5ID0gKGNscywgcHJvcE5hbWUsIHdhcm5pbmcsIGlzU3RhdGljID0gZmFsc2UpID0+IHtcbiAgY29uc3QgdGFyZ2V0ID0gaXNTdGF0aWMgPyBjbHMgOiBjbHMucHJvdG90eXBlO1xuICBsZXQgdmFsdWUgPSB0YXJnZXRbcHJvcE5hbWVdO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wTmFtZSwge1xuICAgIGdldCgpIHtcbiAgICAgIGRlcHJlY2F0ZWQocHJvcE5hbWUsIHdhcm5pbmcsIGAke2Nscy5uYW1lfToke3Byb3BOYW1lfWApO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0KHYpIHtcbiAgICAgIHZhbHVlID0gdjtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHkgPSAob2JqLCBwcm9wTmFtZSwgd2FybmluZywga2V5KSA9PiB7XG4gIGxldCB2YWx1ZSA9IG9ialtwcm9wTmFtZV07XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIHByb3BOYW1lLCB7XG4gICAgZ2V0KCkge1xuICAgICAgZGVwcmVjYXRlZChwcm9wTmFtZSwgd2FybmluZywga2V5KTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldCh2KSB7XG4gICAgICB2YWx1ZSA9IHY7XG4gICAgfVxuICB9KTtcbn07XG5cbmV4cG9ydCB7XG4gIGRlcHJlY2F0ZWQsXG4gIGRlcHJlY2F0ZWRQcm9wZXJ0eSxcbiAgZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVUVZNEFaSVAubWpzLm1hcCJdLCJuYW1lcyI6WyJpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCIsImlzVGVzdEVudmlyb25tZW50IiwiZGlzcGxheWVkV2FybmluZ3MiLCJTZXQiLCJkZXByZWNhdGVkIiwiZm5OYW1lIiwid2FybmluZyIsImtleSIsImhpZGVXYXJuaW5nIiwibWVzc2FnZUlkIiwiaGFzIiwiYWRkIiwiY29uc29sZSIsIndhcm4iLCJkZXByZWNhdGVkUHJvcGVydHkiLCJjbHMiLCJwcm9wTmFtZSIsImlzU3RhdGljIiwidGFyZ2V0IiwicHJvdG90eXBlIiwidmFsdWUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsIm5hbWUiLCJzZXQiLCJ2IiwiZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5Iiwib2JqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-UEY4AZIP.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-WWQWD4PM.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-WWQWD4PM.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventMethodCalled: () => (/* binding */ eventMethodCalled)\n/* harmony export */ });\n// src/telemetry/events/method-called.ts\nvar EVENT_METHOD_CALLED = \"METHOD_CALLED\";\nfunction eventMethodCalled(method, payload) {\n    return {\n        event: EVENT_METHOD_CALLED,\n        payload: {\n            method,\n            ...payload\n        }\n    };\n}\n //# sourceMappingURL=chunk-WWQWD4PM.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1XV1FXRDRQTS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdDQUF3QztBQUN4QyxJQUFJQSxzQkFBc0I7QUFDMUIsU0FBU0Msa0JBQWtCQyxNQUFNLEVBQUVDLE9BQU87SUFDeEMsT0FBTztRQUNMQyxPQUFPSjtRQUNQRyxTQUFTO1lBQ1BEO1lBQ0EsR0FBR0MsT0FBTztRQUNaO0lBQ0Y7QUFDRjtBQUlFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstV1dRV0Q0UE0ubWpzP2I4ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3RlbGVtZXRyeS9ldmVudHMvbWV0aG9kLWNhbGxlZC50c1xudmFyIEVWRU5UX01FVEhPRF9DQUxMRUQgPSBcIk1FVEhPRF9DQUxMRURcIjtcbmZ1bmN0aW9uIGV2ZW50TWV0aG9kQ2FsbGVkKG1ldGhvZCwgcGF5bG9hZCkge1xuICByZXR1cm4ge1xuICAgIGV2ZW50OiBFVkVOVF9NRVRIT0RfQ0FMTEVELFxuICAgIHBheWxvYWQ6IHtcbiAgICAgIG1ldGhvZCxcbiAgICAgIC4uLnBheWxvYWRcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCB7XG4gIGV2ZW50TWV0aG9kQ2FsbGVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstV1dRV0Q0UE0ubWpzLm1hcCJdLCJuYW1lcyI6WyJFVkVOVF9NRVRIT0RfQ0FMTEVEIiwiZXZlbnRNZXRob2RDYWxsZWQiLCJtZXRob2QiLCJwYXlsb2FkIiwiZXZlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-WWQWD4PM.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-X3VKQCBG.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-X3VKQCBG.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCheckAuthorization: () => (/* binding */ createCheckAuthorization),\n/* harmony export */   validateReverificationConfig: () => (/* binding */ validateReverificationConfig)\n/* harmony export */ });\n// src/authorization.ts\nvar TYPES_TO_OBJECTS = {\n    strict_mfa: {\n        afterMinutes: 10,\n        level: \"multi_factor\"\n    },\n    strict: {\n        afterMinutes: 10,\n        level: \"second_factor\"\n    },\n    moderate: {\n        afterMinutes: 60,\n        level: \"second_factor\"\n    },\n    lax: {\n        afterMinutes: 1440,\n        level: \"second_factor\"\n    }\n};\nvar ALLOWED_LEVELS = /* @__PURE__ */ new Set([\n    \"first_factor\",\n    \"second_factor\",\n    \"multi_factor\"\n]);\nvar ALLOWED_TYPES = /* @__PURE__ */ new Set([\n    \"strict_mfa\",\n    \"strict\",\n    \"moderate\",\n    \"lax\"\n]);\nvar isValidMaxAge = (maxAge)=>typeof maxAge === \"number\" && maxAge > 0;\nvar isValidLevel = (level)=>ALLOWED_LEVELS.has(level);\nvar isValidVerificationType = (type)=>ALLOWED_TYPES.has(type);\nvar checkOrgAuthorization = (params, options)=>{\n    const { orgId, orgRole, orgPermissions } = options;\n    if (!params.role && !params.permission) {\n        return null;\n    }\n    if (!orgId || !orgRole || !orgPermissions) {\n        return null;\n    }\n    if (params.permission) {\n        return orgPermissions.includes(params.permission);\n    }\n    if (params.role) {\n        return orgRole === params.role;\n    }\n    return null;\n};\nvar validateReverificationConfig = (config)=>{\n    if (!config) {\n        return false;\n    }\n    const convertConfigToObject = (config2)=>{\n        if (typeof config2 === \"string\") {\n            return TYPES_TO_OBJECTS[config2];\n        }\n        return config2;\n    };\n    const isValidStringValue = typeof config === \"string\" && isValidVerificationType(config);\n    const isValidObjectValue = typeof config === \"object\" && isValidLevel(config.level) && isValidMaxAge(config.afterMinutes);\n    if (isValidStringValue || isValidObjectValue) {\n        return convertConfigToObject.bind(null, config);\n    }\n    return false;\n};\nvar checkStepUpAuthorization = (params, { factorVerificationAge })=>{\n    if (!params.reverification || !factorVerificationAge) {\n        return null;\n    }\n    const isValidReverification = validateReverificationConfig(params.reverification);\n    if (!isValidReverification) {\n        return null;\n    }\n    const { level, afterMinutes } = isValidReverification();\n    const [factor1Age, factor2Age] = factorVerificationAge;\n    const isValidFactor1 = factor1Age !== -1 ? afterMinutes > factor1Age : null;\n    const isValidFactor2 = factor2Age !== -1 ? afterMinutes > factor2Age : null;\n    switch(level){\n        case \"first_factor\":\n            return isValidFactor1;\n        case \"second_factor\":\n            return factor2Age !== -1 ? isValidFactor2 : isValidFactor1;\n        case \"multi_factor\":\n            return factor2Age === -1 ? isValidFactor1 : isValidFactor1 && isValidFactor2;\n    }\n};\nvar createCheckAuthorization = (options)=>{\n    return (params)=>{\n        if (!options.userId) {\n            return false;\n        }\n        const orgAuthorization = checkOrgAuthorization(params, options);\n        const stepUpAuthorization = checkStepUpAuthorization(params, options);\n        if ([\n            orgAuthorization,\n            stepUpAuthorization\n        ].some((a)=>a === null)) {\n            return [\n                orgAuthorization,\n                stepUpAuthorization\n            ].some((a)=>a === true);\n        }\n        return [\n            orgAuthorization,\n            stepUpAuthorization\n        ].every((a)=>a === true);\n    };\n};\n //# sourceMappingURL=chunk-X3VKQCBG.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-X3VKQCBG.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-YNDNV4YF.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-YNDNV4YF.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastDeepMergeAndKeep: () => (/* binding */ fastDeepMergeAndKeep),\n/* harmony export */   fastDeepMergeAndReplace: () => (/* binding */ fastDeepMergeAndReplace),\n/* harmony export */   logErrorInDevMode: () => (/* binding */ logErrorInDevMode),\n/* harmony export */   runWithExponentialBackOff: () => (/* binding */ runWithExponentialBackOff)\n/* harmony export */ });\n/* harmony import */ var _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7HPDNZ3R.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\");\n\n// src/utils/logErrorInDevMode.ts\nvar logErrorInDevMode = (message)=>{\n    if ((0,_chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentEnvironment)()) {\n        console.error(`Clerk: ${message}`);\n    }\n};\n// src/utils/runWithExponentialBackOff.ts\nvar defaultOptions = {\n    firstDelay: 125,\n    maxDelay: 0,\n    timeMultiple: 2,\n    shouldRetry: ()=>true\n};\nvar sleep = async (ms)=>new Promise((s)=>setTimeout(s, ms));\nvar createExponentialDelayAsyncFn = (opts)=>{\n    let timesCalled = 0;\n    const calculateDelayInMs = ()=>{\n        const constant = opts.firstDelay;\n        const base = opts.timeMultiple;\n        const delay = constant * Math.pow(base, timesCalled);\n        return Math.min(opts.maxDelay || delay, delay);\n    };\n    return async ()=>{\n        await sleep(calculateDelayInMs());\n        timesCalled++;\n    };\n};\nvar runWithExponentialBackOff = async (callback, options = {})=>{\n    let iterationsCount = 0;\n    const { shouldRetry, firstDelay, maxDelay, timeMultiple } = {\n        ...defaultOptions,\n        ...options\n    };\n    const delay = createExponentialDelayAsyncFn({\n        firstDelay,\n        maxDelay,\n        timeMultiple\n    });\n    while(true){\n        try {\n            return await callback();\n        } catch (e) {\n            iterationsCount++;\n            if (!shouldRetry(e, iterationsCount)) {\n                throw e;\n            }\n            await delay();\n        }\n    }\n};\n// src/utils/fastDeepMerge.ts\nvar fastDeepMergeAndReplace = (source, target)=>{\n    if (!source || !target) {\n        return;\n    }\n    for(const key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== null && typeof source[key] === `object`) {\n            if (target[key] === void 0) {\n                target[key] = new (Object.getPrototypeOf(source[key])).constructor();\n            }\n            fastDeepMergeAndReplace(source[key], target[key]);\n        } else if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    }\n};\nvar fastDeepMergeAndKeep = (source, target)=>{\n    if (!source || !target) {\n        return;\n    }\n    for(const key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== null && typeof source[key] === `object`) {\n            if (target[key] === void 0) {\n                target[key] = new (Object.getPrototypeOf(source[key])).constructor();\n            }\n            fastDeepMergeAndKeep(source[key], target[key]);\n        } else if (Object.prototype.hasOwnProperty.call(source, key) && target[key] === void 0) {\n            target[key] = source[key];\n        }\n    }\n};\n //# sourceMappingURL=chunk-YNDNV4YF.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1ZTkROVjRZRi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFOEI7QUFFOUIsaUNBQWlDO0FBQ2pDLElBQUlDLG9CQUFvQixDQUFDQztJQUN2QixJQUFJRiw2RUFBd0JBLElBQUk7UUFDOUJHLFFBQVFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sRUFBRUYsUUFBUSxDQUFDO0lBQ25DO0FBQ0Y7QUFFQSx5Q0FBeUM7QUFDekMsSUFBSUcsaUJBQWlCO0lBQ25CQyxZQUFZO0lBQ1pDLFVBQVU7SUFDVkMsY0FBYztJQUNkQyxhQUFhLElBQU07QUFDckI7QUFDQSxJQUFJQyxRQUFRLE9BQU9DLEtBQU8sSUFBSUMsUUFBUSxDQUFDQyxJQUFNQyxXQUFXRCxHQUFHRjtBQUMzRCxJQUFJSSxnQ0FBZ0MsQ0FBQ0M7SUFDbkMsSUFBSUMsY0FBYztJQUNsQixNQUFNQyxxQkFBcUI7UUFDekIsTUFBTUMsV0FBV0gsS0FBS1YsVUFBVTtRQUNoQyxNQUFNYyxPQUFPSixLQUFLUixZQUFZO1FBQzlCLE1BQU1hLFFBQVFGLFdBQVdHLEtBQUtDLEdBQUcsQ0FBQ0gsTUFBTUg7UUFDeEMsT0FBT0ssS0FBS0UsR0FBRyxDQUFDUixLQUFLVCxRQUFRLElBQUljLE9BQU9BO0lBQzFDO0lBQ0EsT0FBTztRQUNMLE1BQU1YLE1BQU1RO1FBQ1pEO0lBQ0Y7QUFDRjtBQUNBLElBQUlRLDRCQUE0QixPQUFPQyxVQUFVQyxVQUFVLENBQUMsQ0FBQztJQUMzRCxJQUFJQyxrQkFBa0I7SUFDdEIsTUFBTSxFQUFFbkIsV0FBVyxFQUFFSCxVQUFVLEVBQUVDLFFBQVEsRUFBRUMsWUFBWSxFQUFFLEdBQUc7UUFDMUQsR0FBR0gsY0FBYztRQUNqQixHQUFHc0IsT0FBTztJQUNaO0lBQ0EsTUFBTU4sUUFBUU4sOEJBQThCO1FBQUVUO1FBQVlDO1FBQVVDO0lBQWE7SUFDakYsTUFBTyxLQUFNO1FBQ1gsSUFBSTtZQUNGLE9BQU8sTUFBTWtCO1FBQ2YsRUFBRSxPQUFPRyxHQUFHO1lBQ1ZEO1lBQ0EsSUFBSSxDQUFDbkIsWUFBWW9CLEdBQUdELGtCQUFrQjtnQkFDcEMsTUFBTUM7WUFDUjtZQUNBLE1BQU1SO1FBQ1I7SUFDRjtBQUNGO0FBRUEsNkJBQTZCO0FBQzdCLElBQUlTLDBCQUEwQixDQUFDQyxRQUFRQztJQUNyQyxJQUFJLENBQUNELFVBQVUsQ0FBQ0MsUUFBUTtRQUN0QjtJQUNGO0lBQ0EsSUFBSyxNQUFNQyxPQUFPRixPQUFRO1FBQ3hCLElBQUlHLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNOLFFBQVFFLFFBQVFGLE1BQU0sQ0FBQ0UsSUFBSSxLQUFLLFFBQVEsT0FBT0YsTUFBTSxDQUFDRSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNoSCxJQUFJRCxNQUFNLENBQUNDLElBQUksS0FBSyxLQUFLLEdBQUc7Z0JBQzFCRCxNQUFNLENBQUNDLElBQUksR0FBRyxJQUFJLENBQUNDLE9BQU9JLGNBQWMsQ0FBQ1AsTUFBTSxDQUFDRSxJQUFJLEdBQUdNLFdBQVc7WUFDcEU7WUFDQVQsd0JBQXdCQyxNQUFNLENBQUNFLElBQUksRUFBRUQsTUFBTSxDQUFDQyxJQUFJO1FBQ2xELE9BQU8sSUFBSUMsT0FBT0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ04sUUFBUUUsTUFBTTtZQUM1REQsTUFBTSxDQUFDQyxJQUFJLEdBQUdGLE1BQU0sQ0FBQ0UsSUFBSTtRQUMzQjtJQUNGO0FBQ0Y7QUFDQSxJQUFJTyx1QkFBdUIsQ0FBQ1QsUUFBUUM7SUFDbEMsSUFBSSxDQUFDRCxVQUFVLENBQUNDLFFBQVE7UUFDdEI7SUFDRjtJQUNBLElBQUssTUFBTUMsT0FBT0YsT0FBUTtRQUN4QixJQUFJRyxPQUFPQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDTixRQUFRRSxRQUFRRixNQUFNLENBQUNFLElBQUksS0FBSyxRQUFRLE9BQU9GLE1BQU0sQ0FBQ0UsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDaEgsSUFBSUQsTUFBTSxDQUFDQyxJQUFJLEtBQUssS0FBSyxHQUFHO2dCQUMxQkQsTUFBTSxDQUFDQyxJQUFJLEdBQUcsSUFBSSxDQUFDQyxPQUFPSSxjQUFjLENBQUNQLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHTSxXQUFXO1lBQ3BFO1lBQ0FDLHFCQUFxQlQsTUFBTSxDQUFDRSxJQUFJLEVBQUVELE1BQU0sQ0FBQ0MsSUFBSTtRQUMvQyxPQUFPLElBQUlDLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNOLFFBQVFFLFFBQVFELE1BQU0sQ0FBQ0MsSUFBSSxLQUFLLEtBQUssR0FBRztZQUN0RkQsTUFBTSxDQUFDQyxJQUFJLEdBQUdGLE1BQU0sQ0FBQ0UsSUFBSTtRQUMzQjtJQUNGO0FBQ0Y7QUFPRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVlORE5WNFlGLm1qcz80N2QxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudFxufSBmcm9tIFwiLi9jaHVuay03SFBETlozUi5tanNcIjtcblxuLy8gc3JjL3V0aWxzL2xvZ0Vycm9ySW5EZXZNb2RlLnRzXG52YXIgbG9nRXJyb3JJbkRldk1vZGUgPSAobWVzc2FnZSkgPT4ge1xuICBpZiAoaXNEZXZlbG9wbWVudEVudmlyb25tZW50KCkpIHtcbiAgICBjb25zb2xlLmVycm9yKGBDbGVyazogJHttZXNzYWdlfWApO1xuICB9XG59O1xuXG4vLyBzcmMvdXRpbHMvcnVuV2l0aEV4cG9uZW50aWFsQmFja09mZi50c1xudmFyIGRlZmF1bHRPcHRpb25zID0ge1xuICBmaXJzdERlbGF5OiAxMjUsXG4gIG1heERlbGF5OiAwLFxuICB0aW1lTXVsdGlwbGU6IDIsXG4gIHNob3VsZFJldHJ5OiAoKSA9PiB0cnVlXG59O1xudmFyIHNsZWVwID0gYXN5bmMgKG1zKSA9PiBuZXcgUHJvbWlzZSgocykgPT4gc2V0VGltZW91dChzLCBtcykpO1xudmFyIGNyZWF0ZUV4cG9uZW50aWFsRGVsYXlBc3luY0ZuID0gKG9wdHMpID0+IHtcbiAgbGV0IHRpbWVzQ2FsbGVkID0gMDtcbiAgY29uc3QgY2FsY3VsYXRlRGVsYXlJbk1zID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnN0YW50ID0gb3B0cy5maXJzdERlbGF5O1xuICAgIGNvbnN0IGJhc2UgPSBvcHRzLnRpbWVNdWx0aXBsZTtcbiAgICBjb25zdCBkZWxheSA9IGNvbnN0YW50ICogTWF0aC5wb3coYmFzZSwgdGltZXNDYWxsZWQpO1xuICAgIHJldHVybiBNYXRoLm1pbihvcHRzLm1heERlbGF5IHx8IGRlbGF5LCBkZWxheSk7XG4gIH07XG4gIHJldHVybiBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgc2xlZXAoY2FsY3VsYXRlRGVsYXlJbk1zKCkpO1xuICAgIHRpbWVzQ2FsbGVkKys7XG4gIH07XG59O1xudmFyIHJ1bldpdGhFeHBvbmVudGlhbEJhY2tPZmYgPSBhc3luYyAoY2FsbGJhY2ssIG9wdGlvbnMgPSB7fSkgPT4ge1xuICBsZXQgaXRlcmF0aW9uc0NvdW50ID0gMDtcbiAgY29uc3QgeyBzaG91bGRSZXRyeSwgZmlyc3REZWxheSwgbWF4RGVsYXksIHRpbWVNdWx0aXBsZSB9ID0ge1xuICAgIC4uLmRlZmF1bHRPcHRpb25zLFxuICAgIC4uLm9wdGlvbnNcbiAgfTtcbiAgY29uc3QgZGVsYXkgPSBjcmVhdGVFeHBvbmVudGlhbERlbGF5QXN5bmNGbih7IGZpcnN0RGVsYXksIG1heERlbGF5LCB0aW1lTXVsdGlwbGUgfSk7XG4gIHdoaWxlICh0cnVlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBhd2FpdCBjYWxsYmFjaygpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGl0ZXJhdGlvbnNDb3VudCsrO1xuICAgICAgaWYgKCFzaG91bGRSZXRyeShlLCBpdGVyYXRpb25zQ291bnQpKSB7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgICBhd2FpdCBkZWxheSgpO1xuICAgIH1cbiAgfVxufTtcblxuLy8gc3JjL3V0aWxzL2Zhc3REZWVwTWVyZ2UudHNcbnZhciBmYXN0RGVlcE1lcmdlQW5kUmVwbGFjZSA9IChzb3VyY2UsIHRhcmdldCkgPT4ge1xuICBpZiAoIXNvdXJjZSB8fCAhdGFyZ2V0KSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGZvciAoY29uc3Qga2V5IGluIHNvdXJjZSkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpICYmIHNvdXJjZVtrZXldICE9PSBudWxsICYmIHR5cGVvZiBzb3VyY2Vba2V5XSA9PT0gYG9iamVjdGApIHtcbiAgICAgIGlmICh0YXJnZXRba2V5XSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gbmV3IChPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlW2tleV0pKS5jb25zdHJ1Y3RvcigpO1xuICAgICAgfVxuICAgICAgZmFzdERlZXBNZXJnZUFuZFJlcGxhY2Uoc291cmNlW2tleV0sIHRhcmdldFtrZXldKTtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfVxuICB9XG59O1xudmFyIGZhc3REZWVwTWVyZ2VBbmRLZWVwID0gKHNvdXJjZSwgdGFyZ2V0KSA9PiB7XG4gIGlmICghc291cmNlIHx8ICF0YXJnZXQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkgJiYgc291cmNlW2tleV0gIT09IG51bGwgJiYgdHlwZW9mIHNvdXJjZVtrZXldID09PSBgb2JqZWN0YCkge1xuICAgICAgaWYgKHRhcmdldFtrZXldID09PSB2b2lkIDApIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBuZXcgKE9iamVjdC5nZXRQcm90b3R5cGVPZihzb3VyY2Vba2V5XSkpLmNvbnN0cnVjdG9yKCk7XG4gICAgICB9XG4gICAgICBmYXN0RGVlcE1lcmdlQW5kS2VlcChzb3VyY2Vba2V5XSwgdGFyZ2V0W2tleV0pO1xuICAgIH0gZWxzZSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSAmJiB0YXJnZXRba2V5XSA9PT0gdm9pZCAwKSB7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IHtcbiAgbG9nRXJyb3JJbkRldk1vZGUsXG4gIHJ1bldpdGhFeHBvbmVudGlhbEJhY2tPZmYsXG4gIGZhc3REZWVwTWVyZ2VBbmRSZXBsYWNlLFxuICBmYXN0RGVlcE1lcmdlQW5kS2VlcFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVlORE5WNFlGLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNEZXZlbG9wbWVudEVudmlyb25tZW50IiwibG9nRXJyb3JJbkRldk1vZGUiLCJtZXNzYWdlIiwiY29uc29sZSIsImVycm9yIiwiZGVmYXVsdE9wdGlvbnMiLCJmaXJzdERlbGF5IiwibWF4RGVsYXkiLCJ0aW1lTXVsdGlwbGUiLCJzaG91bGRSZXRyeSIsInNsZWVwIiwibXMiLCJQcm9taXNlIiwicyIsInNldFRpbWVvdXQiLCJjcmVhdGVFeHBvbmVudGlhbERlbGF5QXN5bmNGbiIsIm9wdHMiLCJ0aW1lc0NhbGxlZCIsImNhbGN1bGF0ZURlbGF5SW5NcyIsImNvbnN0YW50IiwiYmFzZSIsImRlbGF5IiwiTWF0aCIsInBvdyIsIm1pbiIsInJ1bldpdGhFeHBvbmVudGlhbEJhY2tPZmYiLCJjYWxsYmFjayIsIm9wdGlvbnMiLCJpdGVyYXRpb25zQ291bnQiLCJlIiwiZmFzdERlZXBNZXJnZUFuZFJlcGxhY2UiLCJzb3VyY2UiLCJ0YXJnZXQiLCJrZXkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJnZXRQcm90b3R5cGVPZiIsImNvbnN0cnVjdG9yIiwiZmFzdERlZXBNZXJnZUFuZEtlZXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-YNDNV4YF.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/deprecated.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/deprecated.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: () => (/* reexport safe */ _chunk_UEY4AZIP_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecated),\n/* harmony export */   deprecatedObjectProperty: () => (/* reexport safe */ _chunk_UEY4AZIP_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecatedObjectProperty),\n/* harmony export */   deprecatedProperty: () => (/* reexport safe */ _chunk_UEY4AZIP_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecatedProperty)\n/* harmony export */ });\n/* harmony import */ var _chunk_UEY4AZIP_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-UEY4AZIP.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UEY4AZIP.mjs\");\n/* harmony import */ var _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7HPDNZ3R.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n //# sourceMappingURL=deprecated.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9kZXByZWNhdGVkLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJOEI7QUFDQTtBQUNBO0FBSzVCLENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZGVwcmVjYXRlZC5tanM/MTAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBkZXByZWNhdGVkLFxuICBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHksXG4gIGRlcHJlY2F0ZWRQcm9wZXJ0eVxufSBmcm9tIFwiLi9jaHVuay1VRVk0QVpJUC5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0hQRE5aM1IubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgZGVwcmVjYXRlZCxcbiAgZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5LFxuICBkZXByZWNhdGVkUHJvcGVydHlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXByZWNhdGVkLm1qcy5tYXAiXSwibmFtZXMiOlsiZGVwcmVjYXRlZCIsImRlcHJlY2F0ZWRPYmplY3RQcm9wZXJ0eSIsImRlcHJlY2F0ZWRQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/deprecated.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/devBrowser.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/devBrowser.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_HEADER: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_BROWSER_JWT_HEADER),\n/* harmony export */   DEV_BROWSER_JWT_KEY: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_BROWSER_JWT_KEY),\n/* harmony export */   extractDevBrowserJWTFromURL: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.extractDevBrowserJWTFromURL),\n/* harmony export */   setDevBrowserJWTInURL: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.setDevBrowserJWTInURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-K64INQ4C.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=devBrowser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9kZXZCcm93c2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLOEI7QUFDQTtBQU01QixDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2RldkJyb3dzZXIubWpzPzhmYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgREVWX0JST1dTRVJfSldUX0hFQURFUixcbiAgREVWX0JST1dTRVJfSldUX0tFWSxcbiAgZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMLFxuICBzZXREZXZCcm93c2VySldUSW5VUkxcbn0gZnJvbSBcIi4vY2h1bmstSzY0SU5RNEMubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgREVWX0JST1dTRVJfSldUX0hFQURFUixcbiAgREVWX0JST1dTRVJfSldUX0tFWSxcbiAgZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMLFxuICBzZXREZXZCcm93c2VySldUSW5VUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXZCcm93c2VyLm1qcy5tYXAiXSwibmFtZXMiOlsiREVWX0JST1dTRVJfSldUX0hFQURFUiIsIkRFVl9CUk9XU0VSX0pXVF9LRVkiLCJleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkwiLCJzZXREZXZCcm93c2VySldUSW5VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/devBrowser.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/error.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/error.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkRuntimeError),\n/* harmony export */   ClerkWebAuthnError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkWebAuthnError),\n/* harmony export */   EmailLinkError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkErrorCode),\n/* harmony export */   buildErrorThrower: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower),\n/* harmony export */   errorToJSON: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.errorToJSON),\n/* harmony export */   is4xxError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.is4xxError),\n/* harmony export */   isCaptchaError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isCaptchaError),\n/* harmony export */   isClerkAPIResponseError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isKnownError),\n/* harmony export */   isMetamaskError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isNetworkError),\n/* harmony export */   isPasswordPwnedError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isPasswordPwnedError),\n/* harmony export */   isUnauthorizedError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.isUserLockedError),\n/* harmony export */   parseError: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.parseError),\n/* harmony export */   parseErrors: () => (/* reexport safe */ _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__.parseErrors)\n/* harmony export */ });\n/* harmony import */ var _chunk_CZUPK5OI_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-CZUPK5OI.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-CZUPK5OI.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9lcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCOEI7QUFDQTtBQXNCNUIsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9lcnJvci5tanM/MzFkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDbGVya0FQSVJlc3BvbnNlRXJyb3IsXG4gIENsZXJrUnVudGltZUVycm9yLFxuICBDbGVya1dlYkF1dGhuRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yLFxuICBFbWFpbExpbmtFcnJvckNvZGUsXG4gIGJ1aWxkRXJyb3JUaHJvd2VyLFxuICBlcnJvclRvSlNPTixcbiAgaXM0eHhFcnJvcixcbiAgaXNDYXB0Y2hhRXJyb3IsXG4gIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBpc0NsZXJrUnVudGltZUVycm9yLFxuICBpc0VtYWlsTGlua0Vycm9yLFxuICBpc0tub3duRXJyb3IsXG4gIGlzTWV0YW1hc2tFcnJvcixcbiAgaXNOZXR3b3JrRXJyb3IsXG4gIGlzUGFzc3dvcmRQd25lZEVycm9yLFxuICBpc1VuYXV0aG9yaXplZEVycm9yLFxuICBpc1VzZXJMb2NrZWRFcnJvcixcbiAgcGFyc2VFcnJvcixcbiAgcGFyc2VFcnJvcnNcbn0gZnJvbSBcIi4vY2h1bmstQ1pVUEs1T0kubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBDbGVya1J1bnRpbWVFcnJvcixcbiAgQ2xlcmtXZWJBdXRobkVycm9yLFxuICBFbWFpbExpbmtFcnJvcixcbiAgRW1haWxMaW5rRXJyb3JDb2RlLFxuICBidWlsZEVycm9yVGhyb3dlcixcbiAgZXJyb3JUb0pTT04sXG4gIGlzNHh4RXJyb3IsXG4gIGlzQ2FwdGNoYUVycm9yLFxuICBpc0NsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgaXNDbGVya1J1bnRpbWVFcnJvcixcbiAgaXNFbWFpbExpbmtFcnJvcixcbiAgaXNLbm93bkVycm9yLFxuICBpc01ldGFtYXNrRXJyb3IsXG4gIGlzTmV0d29ya0Vycm9yLFxuICBpc1Bhc3N3b3JkUHduZWRFcnJvcixcbiAgaXNVbmF1dGhvcml6ZWRFcnJvcixcbiAgaXNVc2VyTG9ja2VkRXJyb3IsXG4gIHBhcnNlRXJyb3IsXG4gIHBhcnNlRXJyb3JzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IubWpzLm1hcCJdLCJuYW1lcyI6WyJDbGVya0FQSVJlc3BvbnNlRXJyb3IiLCJDbGVya1J1bnRpbWVFcnJvciIsIkNsZXJrV2ViQXV0aG5FcnJvciIsIkVtYWlsTGlua0Vycm9yIiwiRW1haWxMaW5rRXJyb3JDb2RlIiwiYnVpbGRFcnJvclRocm93ZXIiLCJlcnJvclRvSlNPTiIsImlzNHh4RXJyb3IiLCJpc0NhcHRjaGFFcnJvciIsImlzQ2xlcmtBUElSZXNwb25zZUVycm9yIiwiaXNDbGVya1J1bnRpbWVFcnJvciIsImlzRW1haWxMaW5rRXJyb3IiLCJpc0tub3duRXJyb3IiLCJpc01ldGFtYXNrRXJyb3IiLCJpc05ldHdvcmtFcnJvciIsImlzUGFzc3dvcmRQd25lZEVycm9yIiwiaXNVbmF1dGhvcml6ZWRFcnJvciIsImlzVXNlckxvY2tlZEVycm9yIiwicGFyc2VFcnJvciIsInBhcnNlRXJyb3JzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/error.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/isomorphicAtob.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/isomorphicAtob.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* reexport safe */ _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=isomorphicAtob.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9pc29tb3JwaGljQXRvYi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRThCO0FBQ0E7QUFHNUIsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9pc29tb3JwaGljQXRvYi5tanM/NDcyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc29tb3JwaGljQXRvYlxufSBmcm9tIFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBpc29tb3JwaGljQXRvYlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzb21vcnBoaWNBdG9iLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNvbW9ycGhpY0F0b2IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/isomorphicAtob.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/keys.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/keys.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.buildPublishableKey),\n/* harmony export */   createDevOrStagingUrlCache: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.createDevOrStagingUrlCache),\n/* harmony export */   getCookieSuffix: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.getCookieSuffix),\n/* harmony export */   getSuffixedCookieName: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.getSuffixedCookieName),\n/* harmony export */   isDevelopmentFromPublishableKey: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromPublishableKey),\n/* harmony export */   isDevelopmentFromSecretKey: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromSecretKey),\n/* harmony export */   isProductionFromPublishableKey: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromPublishableKey),\n/* harmony export */   isProductionFromSecretKey: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromSecretKey),\n/* harmony export */   isPublishableKey: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.isPublishableKey),\n/* harmony export */   parsePublishableKey: () => (/* reexport safe */ _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-G3VP5PJE.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n //# sourceMappingURL=keys.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9rZXlzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXOEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVk1QixDQUNGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2tleXMubWpzP2RhN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYnVpbGRQdWJsaXNoYWJsZUtleSxcbiAgY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUsXG4gIGdldENvb2tpZVN1ZmZpeCxcbiAgZ2V0U3VmZml4ZWRDb29raWVOYW1lLFxuICBpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5LFxuICBpc1B1Ymxpc2hhYmxlS2V5LFxuICBwYXJzZVB1Ymxpc2hhYmxlS2V5XG59IGZyb20gXCIuL2NodW5rLUczVlA1UEpFLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstS09IN0dUSk8ubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUk2TVRTVE9GLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGJ1aWxkUHVibGlzaGFibGVLZXksXG4gIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlLFxuICBnZXRDb29raWVTdWZmaXgsXG4gIGdldFN1ZmZpeGVkQ29va2llTmFtZSxcbiAgaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXksXG4gIGlzUHJvZHVjdGlvbkZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleSxcbiAgaXNQdWJsaXNoYWJsZUtleSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleXMubWpzLm1hcCJdLCJuYW1lcyI6WyJidWlsZFB1Ymxpc2hhYmxlS2V5IiwiY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUiLCJnZXRDb29raWVTdWZmaXgiLCJnZXRTdWZmaXhlZENvb2tpZU5hbWUiLCJpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5IiwiaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXkiLCJpc1Byb2R1Y3Rpb25Gcm9tUHVibGlzaGFibGVLZXkiLCJpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5IiwiaXNQdWJsaXNoYWJsZUtleSIsInBhcnNlUHVibGlzaGFibGVLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/logger.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/logger.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* reexport safe */ _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_0__.logger)\n/* harmony export */ });\n/* harmony import */ var _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-CYDR2ZSA.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9sb2dnZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4QjtBQUNBO0FBRzVCLENBQ0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvbG9nZ2VyLm1qcz9jODgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGxvZ2dlclxufSBmcm9tIFwiLi9jaHVuay1DWURSMlpTQS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBsb2dnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIubWpzLm1hcCJdLCJuYW1lcyI6WyJsb2dnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/logger.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/pathMatcher.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/pathMatcher.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPathMatcher: () => (/* reexport safe */ _chunk_2ZNADCNC_mjs__WEBPACK_IMPORTED_MODULE_0__.createPathMatcher)\n/* harmony export */ });\n/* harmony import */ var _chunk_2ZNADCNC_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-2ZNADCNC.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-2ZNADCNC.mjs\");\n/* harmony import */ var _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-JJHTUJGL.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n //# sourceMappingURL=pathMatcher.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wYXRoTWF0Y2hlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUU4QjtBQUNBO0FBQ0E7QUFHNUIsQ0FDRix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wYXRoTWF0Y2hlci5tanM/ZmUxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjcmVhdGVQYXRoTWF0Y2hlclxufSBmcm9tIFwiLi9jaHVuay0yWk5BRENOQy5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstSkpIVFVKR0wubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgY3JlYXRlUGF0aE1hdGNoZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoTWF0Y2hlci5tanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZVBhdGhNYXRjaGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/pathMatcher.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/pathToRegexp.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/pathToRegexp.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   match: () => (/* reexport safe */ _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__.match),\n/* harmony export */   pathToRegexp: () => (/* reexport safe */ _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)\n/* harmony export */ });\n/* harmony import */ var _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JJHTUJGL.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=pathToRegexp.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wYXRoVG9SZWdleHAubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHOEI7QUFDQTtBQUk1QixDQUNGLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L3BhdGhUb1JlZ2V4cC5tanM/ODBlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBtYXRjaCxcbiAgcGF0aFRvUmVnZXhwXG59IGZyb20gXCIuL2NodW5rLUpKSFRVSkdMLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIG1hdGNoLFxuICBwYXRoVG9SZWdleHBcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoVG9SZWdleHAubWpzLm1hcCJdLCJuYW1lcyI6WyJtYXRjaCIsInBhdGhUb1JlZ2V4cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/pathToRegexp.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/proxy.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/proxy.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpOrHttps: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isHttpOrHttps),\n/* harmony export */   isProxyUrlRelative: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isProxyUrlRelative),\n/* harmony export */   isValidProxyUrl: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidProxyUrl),\n/* harmony export */   proxyUrlToAbsoluteURL: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.proxyUrlToAbsoluteURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-6NDGN2IU.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=proxy.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wcm94eS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBSzhCO0FBQ0E7QUFNNUIsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wcm94eS5tanM/MGE5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc0h0dHBPckh0dHBzLFxuICBpc1Byb3h5VXJsUmVsYXRpdmUsXG4gIGlzVmFsaWRQcm94eVVybCxcbiAgcHJveHlVcmxUb0Fic29sdXRlVVJMXG59IGZyb20gXCIuL2NodW5rLTZOREdOMklVLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGlzSHR0cE9ySHR0cHMsXG4gIGlzUHJveHlVcmxSZWxhdGl2ZSxcbiAgaXNWYWxpZFByb3h5VXJsLFxuICBwcm94eVVybFRvQWJzb2x1dGVVUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm94eS5tanMubWFwIl0sIm5hbWVzIjpbImlzSHR0cE9ySHR0cHMiLCJpc1Byb3h5VXJsUmVsYXRpdmUiLCJpc1ZhbGlkUHJveHlVcmwiLCJwcm94eVVybFRvQWJzb2x1dGVVUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/proxy.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/telemetry.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelemetryCollector: () => (/* binding */ TelemetryCollector),\n/* harmony export */   eventComponentMounted: () => (/* binding */ eventComponentMounted),\n/* harmony export */   eventMethodCalled: () => (/* reexport safe */ _chunk_WWQWD4PM_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled),\n/* harmony export */   eventPrebuiltComponentMounted: () => (/* binding */ eventPrebuiltComponentMounted)\n/* harmony export */ });\n/* harmony import */ var _chunk_WWQWD4PM_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-WWQWD4PM.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-WWQWD4PM.mjs\");\n/* harmony import */ var _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-QE2A7CJI.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs\");\n/* harmony import */ var _chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-G3VP5PJE.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n\n// src/telemetry/throttler.ts\nvar DEFAULT_CACHE_TTL_MS = 864e5;\nvar _storageKey, _cacheTtl, _TelemetryEventThrottler_instances, generateKey_fn, cache_get, isValidBrowser_get;\nvar TelemetryEventThrottler = class {\n    constructor(){\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _TelemetryEventThrottler_instances);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _storageKey, \"clerk_telemetry_throttler\");\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _cacheTtl, DEFAULT_CACHE_TTL_MS);\n    }\n    isEventThrottled(payload) {\n        if (!(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, isValidBrowser_get)) {\n            return false;\n        }\n        const now = Date.now();\n        const key = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryEventThrottler_instances, generateKey_fn).call(this, payload);\n        const entry = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get)?.[key];\n        if (!entry) {\n            const updatedCache = {\n                ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get),\n                [key]: now\n            };\n            localStorage.setItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n        }\n        const shouldInvalidate = entry && now - entry > (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _cacheTtl);\n        if (shouldInvalidate) {\n            const updatedCache = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get);\n            delete updatedCache[key];\n            localStorage.setItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n        }\n        return !!entry;\n    }\n};\n_storageKey = new WeakMap();\n_cacheTtl = new WeakMap();\n_TelemetryEventThrottler_instances = new WeakSet();\n/**\n * Generates a consistent unique key for telemetry events by sorting payload properties.\n * This ensures that payloads with identical content in different orders produce the same key.\n */ generateKey_fn = function(event) {\n    const { sk: _sk, pk: _pk, payload, ...rest } = event;\n    const sanitizedEvent = {\n        ...payload,\n        ...rest\n    };\n    return JSON.stringify(Object.keys({\n        ...payload,\n        ...rest\n    }).sort().map((key)=>sanitizedEvent[key]));\n};\ncache_get = function() {\n    const cacheString = localStorage.getItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey));\n    if (!cacheString) {\n        return {};\n    }\n    return JSON.parse(cacheString);\n};\nisValidBrowser_get = function() {\n    if (true) {\n        return false;\n    }\n    const storage = window.localStorage;\n    if (!storage) {\n        return false;\n    }\n    try {\n        const testKey = \"test\";\n        storage.setItem(testKey, testKey);\n        storage.removeItem(testKey);\n        return true;\n    } catch (err) {\n        const isQuotaExceededError = err instanceof DOMException && // Check error names for different browsers\n        (err.name === \"QuotaExceededError\" || err.name === \"NS_ERROR_DOM_QUOTA_REACHED\");\n        if (isQuotaExceededError && storage.length > 0) {\n            storage.removeItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey));\n        }\n        return false;\n    }\n};\n// src/telemetry/collector.ts\nvar DEFAULT_CONFIG = {\n    samplingRate: 1,\n    maxBufferSize: 5,\n    // Production endpoint: https://clerk-telemetry.com\n    // Staging endpoint: https://staging.clerk-telemetry.com\n    // Local: http://localhost:8787\n    endpoint: \"https://clerk-telemetry.com\"\n};\nvar _config, _eventThrottler, _metadata, _buffer, _pendingFlush, _TelemetryCollector_instances, shouldRecord_fn, shouldBeSampled_fn, scheduleFlush_fn, flush_fn, logEvent_fn, getSDKMetadata_fn, preparePayload_fn;\nvar TelemetryCollector = class {\n    constructor(options){\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _TelemetryCollector_instances);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _config);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _eventThrottler);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _metadata, {});\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _buffer, []);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _pendingFlush);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _config, {\n            maxBufferSize: options.maxBufferSize ?? DEFAULT_CONFIG.maxBufferSize,\n            samplingRate: options.samplingRate ?? DEFAULT_CONFIG.samplingRate,\n            disabled: options.disabled ?? false,\n            debug: options.debug ?? false,\n            endpoint: DEFAULT_CONFIG.endpoint\n        });\n        if (!options.clerkVersion && \"undefined\" === \"undefined\") {\n            (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion = \"\";\n        } else {\n            (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion = options.clerkVersion ?? \"\";\n        }\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdk = options.sdk;\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdkVersion = options.sdkVersion;\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey = options.publishableKey ?? \"\";\n        const parsedKey = (0,_chunk_G3VP5PJE_mjs__WEBPACK_IMPORTED_MODULE_2__.parsePublishableKey)(options.publishableKey);\n        if (parsedKey) {\n            (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType = parsedKey.instanceType;\n        }\n        if (options.secretKey) {\n            (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey = options.secretKey.substring(0, 16);\n        }\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _eventThrottler, new TelemetryEventThrottler());\n    }\n    get isEnabled() {\n        if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType !== \"development\") {\n            return false;\n        }\n        if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).disabled || typeof process !== \"undefined\" && (0,_chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.CLERK_TELEMETRY_DISABLED)) {\n            return false;\n        }\n        if (false) {}\n        return true;\n    }\n    get isDebug() {\n        return (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).debug || typeof process !== \"undefined\" && (0,_chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.CLERK_TELEMETRY_DEBUG);\n    }\n    record(event) {\n        const preparedPayload = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, preparePayload_fn).call(this, event.event, event.payload);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, logEvent_fn).call(this, preparedPayload.event, preparedPayload);\n        if (!(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, shouldRecord_fn).call(this, preparedPayload, event.eventSamplingRate)) {\n            return;\n        }\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer).push(preparedPayload);\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, scheduleFlush_fn).call(this);\n    }\n};\n_config = new WeakMap();\n_eventThrottler = new WeakMap();\n_metadata = new WeakMap();\n_buffer = new WeakMap();\n_pendingFlush = new WeakMap();\n_TelemetryCollector_instances = new WeakSet();\nshouldRecord_fn = function(preparedPayload, eventSamplingRate) {\n    return this.isEnabled && !this.isDebug && (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, shouldBeSampled_fn).call(this, preparedPayload, eventSamplingRate);\n};\nshouldBeSampled_fn = function(preparedPayload, eventSamplingRate) {\n    const randomSeed = Math.random();\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _eventThrottler).isEventThrottled(preparedPayload)) {\n        return false;\n    }\n    return randomSeed <= (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).samplingRate && (typeof eventSamplingRate === \"undefined\" || randomSeed <= eventSamplingRate);\n};\nscheduleFlush_fn = function() {\n    if (true) {\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n        return;\n    }\n    const isBufferFull = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer).length >= (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).maxBufferSize;\n    if (isBufferFull) {\n        if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush)) {\n            const cancel = typeof cancelIdleCallback !== \"undefined\" ? cancelIdleCallback : clearTimeout;\n            cancel((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush));\n        }\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n        return;\n    }\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush)) {\n        return;\n    }\n    if (\"requestIdleCallback\" in window) {\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _pendingFlush, requestIdleCallback(()=>{\n            (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n        }));\n    } else {\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _pendingFlush, setTimeout(()=>{\n            (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n        }, 0));\n    }\n};\nflush_fn = function() {\n    fetch(new URL(\"/v1/event\", (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).endpoint), {\n        method: \"POST\",\n        // TODO: We send an array here with that idea that we can eventually send multiple events.\n        body: JSON.stringify({\n            events: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer)\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }).catch(()=>void 0).then(()=>{\n        (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _buffer, []);\n    }).catch(()=>void 0);\n};\n/**\n * If running in debug mode, log the event and its payload to the console.\n */ logEvent_fn = function(event, payload) {\n    if (!this.isDebug) {\n        return;\n    }\n    if (typeof console.groupCollapsed !== \"undefined\") {\n        console.groupCollapsed(\"[clerk/telemetry]\", event);\n        console.log(payload);\n        console.groupEnd();\n    } else {\n        console.log(\"[clerk/telemetry]\", event, payload);\n    }\n};\n/**\n * If in browser, attempt to lazily grab the SDK metadata from the Clerk singleton, otherwise fallback to the initially passed in values.\n *\n * This is necessary because the sdkMetadata can be set by the host SDK after the TelemetryCollector is instantiated.\n */ getSDKMetadata_fn = function() {\n    let sdkMetadata = {\n        name: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdk,\n        version: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdkVersion\n    };\n    if (false) {}\n    return sdkMetadata;\n};\n/**\n * Append relevant metadata from the Clerk singleton to the event payload.\n */ preparePayload_fn = function(event, payload) {\n    const sdkMetadata = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _TelemetryCollector_instances, getSDKMetadata_fn).call(this);\n    return {\n        event,\n        cv: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion ?? \"\",\n        it: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType ?? \"\",\n        sdk: sdkMetadata.name,\n        sdkv: sdkMetadata.version,\n        ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey ? {\n            pk: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey\n        } : {},\n        ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey ? {\n            sk: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey\n        } : {},\n        payload\n    };\n};\n// src/telemetry/events/component-mounted.ts\nvar EVENT_COMPONENT_MOUNTED = \"COMPONENT_MOUNTED\";\nvar EVENT_SAMPLING_RATE = 0.1;\nfunction eventPrebuiltComponentMounted(component, props) {\n    return {\n        event: EVENT_COMPONENT_MOUNTED,\n        eventSamplingRate: EVENT_SAMPLING_RATE,\n        payload: {\n            component,\n            appearanceProp: Boolean(props?.appearance),\n            baseTheme: Boolean(props?.appearance?.baseTheme),\n            elements: Boolean(props?.appearance?.elements),\n            variables: Boolean(props?.appearance?.variables)\n        }\n    };\n}\nfunction eventComponentMounted(component, props = {}) {\n    return {\n        event: EVENT_COMPONENT_MOUNTED,\n        eventSamplingRate: EVENT_SAMPLING_RATE,\n        payload: {\n            component,\n            ...props\n        }\n    };\n}\n //# sourceMappingURL=telemetry.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/underscore.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/underscore.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.camelToSnake),\n/* harmony export */   deepCamelToSnake: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.deepCamelToSnake),\n/* harmony export */   deepSnakeToCamel: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.deepSnakeToCamel),\n/* harmony export */   getNonUndefinedValues: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.getNonUndefinedValues),\n/* harmony export */   isIPV4Address: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.isIPV4Address),\n/* harmony export */   isTruthy: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy),\n/* harmony export */   snakeToCamel: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.snakeToCamel),\n/* harmony export */   titleize: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.titleize),\n/* harmony export */   toSentence: () => (/* reexport safe */ _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__.toSentence)\n/* harmony export */ });\n/* harmony import */ var _chunk_QE2A7CJI_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-QE2A7CJI.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-QE2A7CJI.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n //# sourceMappingURL=underscore.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC91bmRlcnNjb3JlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQVU4QjtBQUNBO0FBVzVCLENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdW5kZXJzY29yZS5tanM/MWNkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjYW1lbFRvU25ha2UsXG4gIGRlZXBDYW1lbFRvU25ha2UsXG4gIGRlZXBTbmFrZVRvQ2FtZWwsXG4gIGdldE5vblVuZGVmaW5lZFZhbHVlcyxcbiAgaXNJUFY0QWRkcmVzcyxcbiAgaXNUcnV0aHksXG4gIHNuYWtlVG9DYW1lbCxcbiAgdGl0bGVpemUsXG4gIHRvU2VudGVuY2Vcbn0gZnJvbSBcIi4vY2h1bmstUUUyQTdDSkkubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgY2FtZWxUb1NuYWtlLFxuICBkZWVwQ2FtZWxUb1NuYWtlLFxuICBkZWVwU25ha2VUb0NhbWVsLFxuICBnZXROb25VbmRlZmluZWRWYWx1ZXMsXG4gIGlzSVBWNEFkZHJlc3MsXG4gIGlzVHJ1dGh5LFxuICBzbmFrZVRvQ2FtZWwsXG4gIHRpdGxlaXplLFxuICB0b1NlbnRlbmNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5kZXJzY29yZS5tanMubWFwIl0sIm5hbWVzIjpbImNhbWVsVG9TbmFrZSIsImRlZXBDYW1lbFRvU25ha2UiLCJkZWVwU25ha2VUb0NhbWVsIiwiZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzIiwiaXNJUFY0QWRkcmVzcyIsImlzVHJ1dGh5Iiwic25ha2VUb0NhbWVsIiwidGl0bGVpemUiLCJ0b1NlbnRlbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/underscore.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/url.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/url.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix),\n/* harmony export */   cleanDoubleSlashes: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.cleanDoubleSlashes),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl),\n/* harmony export */   hasLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.hasLeadingSlash),\n/* harmony export */   hasTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.hasTrailingSlash),\n/* harmony export */   isAbsoluteUrl: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl),\n/* harmony export */   isCurrentDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isCurrentDevAccountPortalOrigin),\n/* harmony export */   isLegacyDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyDevAccountPortalOrigin),\n/* harmony export */   isNonEmptyURL: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyURL),\n/* harmony export */   joinURL: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.joinURL),\n/* harmony export */   parseSearchParams: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams),\n/* harmony export */   stripScheme: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme),\n/* harmony export */   withLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash),\n/* harmony export */   withTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrailingSlash),\n/* harmony export */   withoutLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutLeadingSlash),\n/* harmony export */   withoutTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-IFTVZ2LQ.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs\");\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-3TMSNP4L.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n //# sourceMappingURL=url.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC91cmwubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCOEI7QUFDQTtBQUNBO0FBQ0E7QUFtQjVCLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcz8zN2JhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFkZENsZXJrUHJlZml4LFxuICBjbGVhbkRvdWJsZVNsYXNoZXMsXG4gIGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyxcbiAgZ2V0U2NyaXB0VXJsLFxuICBoYXNMZWFkaW5nU2xhc2gsXG4gIGhhc1RyYWlsaW5nU2xhc2gsXG4gIGlzQWJzb2x1dGVVcmwsXG4gIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNOb25FbXB0eVVSTCxcbiAgam9pblVSTCxcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lLFxuICB3aXRoTGVhZGluZ1NsYXNoLFxuICB3aXRoVHJhaWxpbmdTbGFzaCxcbiAgd2l0aG91dExlYWRpbmdTbGFzaCxcbiAgd2l0aG91dFRyYWlsaW5nU2xhc2hcbn0gZnJvbSBcIi4vY2h1bmstSUZUVloyTFEubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTNUTVNOUDRMLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1JNk1UU1RPRi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBhZGRDbGVya1ByZWZpeCxcbiAgY2xlYW5Eb3VibGVTbGFzaGVzLFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgaGFzTGVhZGluZ1NsYXNoLFxuICBoYXNUcmFpbGluZ1NsYXNoLFxuICBpc0Fic29sdXRlVXJsLFxuICBpc0N1cnJlbnREZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc0xlZ2FjeURldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTm9uRW1wdHlVUkwsXG4gIGpvaW5VUkwsXG4gIHBhcnNlU2VhcmNoUGFyYW1zLFxuICBzdHJpcFNjaGVtZSxcbiAgd2l0aExlYWRpbmdTbGFzaCxcbiAgd2l0aFRyYWlsaW5nU2xhc2gsXG4gIHdpdGhvdXRMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLm1qcy5tYXAiXSwibmFtZXMiOlsiYWRkQ2xlcmtQcmVmaXgiLCJjbGVhbkRvdWJsZVNsYXNoZXMiLCJnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWciLCJnZXRTY3JpcHRVcmwiLCJoYXNMZWFkaW5nU2xhc2giLCJoYXNUcmFpbGluZ1NsYXNoIiwiaXNBYnNvbHV0ZVVybCIsImlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4iLCJpc0xlZ2FjeURldkFjY291bnRQb3J0YWxPcmlnaW4iLCJpc05vbkVtcHR5VVJMIiwiam9pblVSTCIsInBhcnNlU2VhcmNoUGFyYW1zIiwic3RyaXBTY2hlbWUiLCJ3aXRoTGVhZGluZ1NsYXNoIiwid2l0aFRyYWlsaW5nU2xhc2giLCJ3aXRob3V0TGVhZGluZ1NsYXNoIiwid2l0aG91dFRyYWlsaW5nU2xhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/url.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/utils/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/utils/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeferredPromise: () => (/* reexport safe */ _chunk_BS4QFUKM_mjs__WEBPACK_IMPORTED_MODULE_1__.createDeferredPromise),\n/* harmony export */   fastDeepMergeAndKeep: () => (/* reexport safe */ _chunk_YNDNV4YF_mjs__WEBPACK_IMPORTED_MODULE_0__.fastDeepMergeAndKeep),\n/* harmony export */   fastDeepMergeAndReplace: () => (/* reexport safe */ _chunk_YNDNV4YF_mjs__WEBPACK_IMPORTED_MODULE_0__.fastDeepMergeAndReplace),\n/* harmony export */   handleValueOrFn: () => (/* reexport safe */ _chunk_O32JQBM6_mjs__WEBPACK_IMPORTED_MODULE_4__.handleValueOrFn),\n/* harmony export */   isDevelopmentEnvironment: () => (/* reexport safe */ _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentEnvironment),\n/* harmony export */   isProductionEnvironment: () => (/* reexport safe */ _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__.isProductionEnvironment),\n/* harmony export */   isStaging: () => (/* reexport safe */ _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_3__.isStaging),\n/* harmony export */   isTestEnvironment: () => (/* reexport safe */ _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__.isTestEnvironment),\n/* harmony export */   logErrorInDevMode: () => (/* reexport safe */ _chunk_YNDNV4YF_mjs__WEBPACK_IMPORTED_MODULE_0__.logErrorInDevMode),\n/* harmony export */   noop: () => (/* reexport safe */ _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_2__.noop),\n/* harmony export */   runWithExponentialBackOff: () => (/* reexport safe */ _chunk_YNDNV4YF_mjs__WEBPACK_IMPORTED_MODULE_0__.runWithExponentialBackOff)\n/* harmony export */ });\n/* harmony import */ var _chunk_YNDNV4YF_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-YNDNV4YF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-YNDNV4YF.mjs\");\n/* harmony import */ var _chunk_BS4QFUKM_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-BS4QFUKM.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-BS4QFUKM.mjs\");\n/* harmony import */ var _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunk-7FNX7RWY.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\");\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chunk-3TMSNP4L.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_O32JQBM6_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chunk-O32JQBM6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs\");\n/* harmony import */ var _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../chunk-7HPDNZ3R.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../chunk-7ELT755Q.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC91dGlscy9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSytCO0FBR0E7QUFHQTtBQUdBO0FBR0E7QUFLQTtBQUNBO0FBYTdCLENBQ0Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXRpbHMvaW5kZXgubWpzP2M2YmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZmFzdERlZXBNZXJnZUFuZEtlZXAsXG4gIGZhc3REZWVwTWVyZ2VBbmRSZXBsYWNlLFxuICBsb2dFcnJvckluRGV2TW9kZSxcbiAgcnVuV2l0aEV4cG9uZW50aWFsQmFja09mZlxufSBmcm9tIFwiLi4vY2h1bmstWU5ETlY0WUYubWpzXCI7XG5pbXBvcnQge1xuICBjcmVhdGVEZWZlcnJlZFByb21pc2Vcbn0gZnJvbSBcIi4uL2NodW5rLUJTNFFGVUtNLm1qc1wiO1xuaW1wb3J0IHtcbiAgbm9vcFxufSBmcm9tIFwiLi4vY2h1bmstN0ZOWDdSV1kubWpzXCI7XG5pbXBvcnQge1xuICBpc1N0YWdpbmdcbn0gZnJvbSBcIi4uL2NodW5rLTNUTVNOUDRMLm1qc1wiO1xuaW1wb3J0IHtcbiAgaGFuZGxlVmFsdWVPckZuXG59IGZyb20gXCIuLi9jaHVuay1PMzJKUUJNNi5tanNcIjtcbmltcG9ydCB7XG4gIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCxcbiAgaXNQcm9kdWN0aW9uRW52aXJvbm1lbnQsXG4gIGlzVGVzdEVudmlyb25tZW50XG59IGZyb20gXCIuLi9jaHVuay03SFBETlozUi5tanNcIjtcbmltcG9ydCBcIi4uL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgY3JlYXRlRGVmZXJyZWRQcm9taXNlLFxuICBmYXN0RGVlcE1lcmdlQW5kS2VlcCxcbiAgZmFzdERlZXBNZXJnZUFuZFJlcGxhY2UsXG4gIGhhbmRsZVZhbHVlT3JGbixcbiAgaXNEZXZlbG9wbWVudEVudmlyb25tZW50LFxuICBpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCxcbiAgaXNTdGFnaW5nLFxuICBpc1Rlc3RFbnZpcm9ubWVudCxcbiAgbG9nRXJyb3JJbkRldk1vZGUsXG4gIG5vb3AsXG4gIHJ1bldpdGhFeHBvbmVudGlhbEJhY2tPZmZcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbImZhc3REZWVwTWVyZ2VBbmRLZWVwIiwiZmFzdERlZXBNZXJnZUFuZFJlcGxhY2UiLCJsb2dFcnJvckluRGV2TW9kZSIsInJ1bldpdGhFeHBvbmVudGlhbEJhY2tPZmYiLCJjcmVhdGVEZWZlcnJlZFByb21pc2UiLCJub29wIiwiaXNTdGFnaW5nIiwiaGFuZGxlVmFsdWVPckZuIiwiaXNEZXZlbG9wbWVudEVudmlyb25tZW50IiwiaXNQcm9kdWN0aW9uRW52aXJvbm1lbnQiLCJpc1Rlc3RFbnZpcm9ubWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/utils/index.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/package.json":
/*!****************************************!*\
  !*** ./node_modules/next/package.json ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"next","version":"14.1.0","description":"The React Framework","main":"./dist/server/next.js","license":"MIT","repository":"vercel/next.js","bugs":"https://github.com/vercel/next.js/issues","homepage":"https://nextjs.org","types":"index.d.ts","files":["dist","app.js","app.d.ts","babel.js","babel.d.ts","client.js","client.d.ts","compat","cache.js","cache.d.ts","config.js","config.d.ts","constants.js","constants.d.ts","document.js","document.d.ts","dynamic.js","dynamic.d.ts","error.js","error.d.ts","future","legacy","script.js","script.d.ts","server.js","server.d.ts","head.js","head.d.ts","image.js","image.d.ts","link.js","link.d.ts","router.js","router.d.ts","jest.js","jest.d.ts","amp.js","amp.d.ts","og.js","og.d.ts","index.d.ts","types/index.d.ts","types/global.d.ts","types/compiled.d.ts","image-types/global.d.ts","navigation-types/navigation.d.ts","navigation-types/compat/navigation.d.ts","font","navigation.js","navigation.d.ts","headers.js","headers.d.ts","navigation-types","web-vitals.js","web-vitals.d.ts","experimental/testmode/playwright.js","experimental/testmode/playwright.d.ts","experimental/testmode/playwright/msw.js","experimental/testmode/playwright/msw.d.ts","experimental/testmode/proxy.js","experimental/testmode/proxy.d.ts"],"bin":{"next":"./dist/bin/next"},"scripts":{"dev":"taskr","release":"taskr release","build":"pnpm release","prepublishOnly":"cd ../../ && turbo run build","types":"tsc --declaration --emitDeclarationOnly --stripInternal --declarationDir dist","typescript":"tsec --noEmit","ncc-compiled":"ncc cache clean && taskr ncc"},"taskr":{"requires":["./taskfile-webpack.js","./taskfile-ncc.js","./taskfile-swc.js","./taskfile-watch.js"]},"dependencies":{"@next/env":"14.1.0","@swc/helpers":"0.5.2","busboy":"1.6.0","caniuse-lite":"^1.0.30001579","graceful-fs":"^4.2.11","postcss":"8.4.31","styled-jsx":"5.1.1"},"peerDependencies":{"@opentelemetry/api":"^1.1.0","react":"^18.2.0","react-dom":"^18.2.0","sass":"^1.3.0"},"peerDependenciesMeta":{"sass":{"optional":true},"@opentelemetry/api":{"optional":true}},"devDependencies":{"@ampproject/toolbox-optimizer":"2.8.3","@babel/code-frame":"7.22.5","@babel/core":"7.22.5","@babel/eslint-parser":"7.22.5","@babel/generator":"7.22.5","@babel/plugin-proposal-class-properties":"7.18.6","@babel/plugin-proposal-export-namespace-from":"7.18.9","@babel/plugin-proposal-numeric-separator":"7.18.6","@babel/plugin-proposal-object-rest-spread":"7.20.7","@babel/plugin-syntax-bigint":"7.8.3","@babel/plugin-syntax-dynamic-import":"7.8.3","@babel/plugin-syntax-import-assertions":"7.22.5","@babel/plugin-syntax-jsx":"7.22.5","@babel/plugin-transform-modules-commonjs":"7.22.5","@babel/plugin-transform-runtime":"7.22.5","@babel/preset-env":"7.22.5","@babel/preset-react":"7.22.5","@babel/preset-typescript":"7.22.5","@babel/runtime":"7.22.5","@babel/traverse":"7.22.5","@babel/types":"7.22.5","@capsizecss/metrics":"1.1.0","@edge-runtime/cookies":"4.0.2","@edge-runtime/ponyfill":"2.4.1","@edge-runtime/primitives":"4.0.2","@hapi/accept":"5.0.2","@jest/transform":"29.5.0","@jest/types":"29.5.0","@mswjs/interceptors":"0.23.0","@napi-rs/cli":"2.16.2","@napi-rs/triples":"1.1.0","@next/polyfill-module":"14.1.0","@next/polyfill-nomodule":"14.1.0","@next/react-dev-overlay":"14.1.0","@next/react-refresh-utils":"14.1.0","@next/swc":"14.1.0","@opentelemetry/api":"1.6.0","@playwright/test":"^1.35.1","@taskr/clear":"1.1.0","@taskr/esnext":"1.1.0","@types/amphtml-validator":"1.0.0","@types/babel__code-frame":"7.0.2","@types/babel__core":"7.1.12","@types/babel__generator":"7.6.2","@types/babel__template":"7.4.0","@types/babel__traverse":"7.11.0","@types/bytes":"3.1.1","@types/ci-info":"2.0.0","@types/compression":"0.0.36","@types/content-disposition":"0.5.4","@types/content-type":"1.1.3","@types/cookie":"0.3.3","@types/cross-spawn":"6.0.0","@types/debug":"4.1.5","@types/express-serve-static-core":"4.17.33","@types/fresh":"0.5.0","@types/glob":"7.1.1","@types/graceful-fs":"4.1.9","@types/jsonwebtoken":"9.0.0","@types/lodash":"4.14.198","@types/lodash.curry":"4.1.6","@types/lru-cache":"5.1.0","@types/micromatch":"4.0.2","@types/path-to-regexp":"1.7.0","@types/platform":"1.3.4","@types/react":"18.2.37","@types/react-dom":"18.2.15","@types/react-is":"17.0.3","@types/semver":"7.3.1","@types/send":"0.14.4","@types/shell-quote":"1.7.1","@types/tar":"6.1.5","@types/text-table":"0.2.1","@types/ua-parser-js":"0.7.36","@types/uuid":"8.3.1","@types/webpack-sources1":"npm:@types/webpack-sources@0.1.5","@types/ws":"8.2.0","@vercel/ncc":"0.34.0","@vercel/nft":"0.26.2","@vercel/turbopack-ecmascript-runtime":"https://gitpkg-fork.vercel.sh/vercel/turbo/crates/turbopack-ecmascript-runtime/js?turbopack-240117.3","acorn":"8.5.0","amphtml-validator":"1.0.35","anser":"1.4.9","arg":"4.1.0","assert":"2.0.0","async-retry":"1.2.3","async-sema":"3.0.0","babel-plugin-transform-define":"2.0.0","babel-plugin-transform-react-remove-prop-types":"0.4.24","browserify-zlib":"0.2.0","browserslist":"4.22.2","buffer":"5.6.0","bytes":"3.1.1","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cli-select":"1.1.2","client-only":"0.0.1","comment-json":"3.0.3","compression":"1.7.4","conf":"5.0.0","constants-browserify":"1.0.0","content-disposition":"0.5.3","content-type":"1.0.4","cookie":"0.4.1","cross-spawn":"7.0.3","crypto-browserify":"3.12.0","css.escape":"1.5.1","cssnano-preset-default":"5.2.14","data-uri-to-buffer":"3.0.1","debug":"4.1.1","devalue":"2.0.1","domain-browser":"4.19.0","edge-runtime":"2.5.4","events":"3.3.0","find-up":"4.1.0","fresh":"0.5.2","get-orientation":"1.1.2","glob":"7.1.7","gzip-size":"5.1.1","http-proxy":"1.18.1","http-proxy-agent":"5.0.0","https-browserify":"1.0.0","https-proxy-agent":"5.0.1","icss-utils":"5.1.0","ignore-loader":"0.1.2","image-size":"1.0.0","is-docker":"2.0.0","is-wsl":"2.2.0","jest-worker":"27.5.1","json5":"2.2.3","jsonwebtoken":"9.0.0","loader-runner":"4.3.0","loader-utils2":"npm:loader-utils@2.0.0","loader-utils3":"npm:loader-utils@3.1.3","lodash.curry":"4.1.1","lru-cache":"5.1.1","micromatch":"4.0.4","mini-css-extract-plugin":"2.4.3","msw":"1.3.0","nanoid":"3.1.32","native-url":"0.3.4","neo-async":"2.6.1","node-html-parser":"5.3.3","ora":"4.0.4","os-browserify":"0.3.0","p-limit":"3.1.0","path-browserify":"1.0.1","path-to-regexp":"6.1.0","platform":"1.3.6","postcss-flexbugs-fixes":"5.0.2","postcss-modules-extract-imports":"3.0.0","postcss-modules-local-by-default":"4.0.0","postcss-modules-scope":"3.0.0","postcss-modules-values":"4.0.0","postcss-preset-env":"7.4.3","postcss-safe-parser":"6.0.0","postcss-scss":"4.0.3","postcss-value-parser":"4.2.0","process":"0.11.10","punycode":"2.1.1","querystring-es3":"0.2.1","raw-body":"2.4.1","react-is":"18.2.0","react-refresh":"0.12.0","regenerator-runtime":"0.13.4","sass-loader":"12.4.0","schema-utils2":"npm:schema-utils@2.7.1","schema-utils3":"npm:schema-utils@3.0.0","semver":"7.3.2","send":"0.17.1","server-only":"0.0.1","setimmediate":"1.0.5","shell-quote":"1.7.3","source-map":"0.6.1","stacktrace-parser":"0.1.10","stream-browserify":"3.0.0","stream-http":"3.1.1","strict-event-emitter":"0.5.0","string-hash":"1.1.3","string_decoder":"1.3.0","strip-ansi":"6.0.0","superstruct":"1.0.3","tar":"6.1.15","taskr":"1.1.0","terser":"5.14.1","terser-webpack-plugin":"5.3.9","text-table":"0.2.0","timers-browserify":"2.0.12","tty-browserify":"0.0.1","ua-parser-js":"1.0.35","unistore":"3.4.1","util":"0.12.4","uuid":"8.3.2","vm-browserify":"1.1.2","watchpack":"2.4.0","web-vitals":"3.0.0","webpack":"5.86.0","webpack-sources1":"npm:webpack-sources@1.4.3","webpack-sources3":"npm:webpack-sources@3.2.3","ws":"8.2.3","zod":"3.22.3"},"engines":{"node":">=18.17.0"},"optionalDependencies":{"@next/swc-darwin-arm64":"14.1.0","@next/swc-darwin-x64":"14.1.0","@next/swc-linux-arm64-gnu":"14.1.0","@next/swc-linux-arm64-musl":"14.1.0","@next/swc-linux-x64-gnu":"14.1.0","@next/swc-linux-x64-musl":"14.1.0","@next/swc-win32-arm64-msvc":"14.1.0","@next/swc-win32-ia32-msvc":"14.1.0","@next/swc-win32-x64-msvc":"14.1.0"}}');

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro%5Csrc%5Cmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CKarina%20Santos%5Cto-do-list-pro&matchers=&preferredRegion=&middlewareConfig=e30%3D!"));
/******/ (_ENTRIES = typeof _ENTRIES === "undefined" ? {} : _ENTRIES)["middleware_src/middleware"] = __webpack_exports__;
/******/ }
]);